   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "ds_radar_interface.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.ds_ep_fetch_adc_config,"ax",%progbits
  20              	 .align 2
  21              	 .global ds_ep_fetch_adc_config
  22              	 .thumb
  23              	 .thumb_func
  25              	ds_ep_fetch_adc_config:
  26              	.LFB529:
  27              	 .file 1 "../Store/src/ds_radar_interface.c"
   1:../Store/src/ds_radar_interface.c **** /**
   2:../Store/src/ds_radar_interface.c ****     @file  ds_radar_interface.c
   3:../Store/src/ds_radar_interface.c **** 
   4:../Store/src/ds_radar_interface.c ****   	@brief This file includes the function to access data structure from data store.
   5:../Store/src/ds_radar_interface.c **** */
   6:../Store/src/ds_radar_interface.c **** 
   7:../Store/src/ds_radar_interface.c **** /* ===========================================================================
   8:../Store/src/ds_radar_interface.c **** ** Copyright (C) 2018-2021 Infineon Technologies AG
   9:../Store/src/ds_radar_interface.c **** ** All rights reserved.
  10:../Store/src/ds_radar_interface.c **** ** ===========================================================================
  11:../Store/src/ds_radar_interface.c **** **
  12:../Store/src/ds_radar_interface.c **** ** ===========================================================================
  13:../Store/src/ds_radar_interface.c **** ** This document contains proprietary information of Infineon Technologies AG.
  14:../Store/src/ds_radar_interface.c **** ** Passing on and copying of this document, and communication of its contents
  15:../Store/src/ds_radar_interface.c **** ** is not permitted without Infineon's prior written authorization.
  16:../Store/src/ds_radar_interface.c **** ** ===========================================================================
  17:../Store/src/ds_radar_interface.c **** */
  18:../Store/src/ds_radar_interface.c **** 
  19:../Store/src/ds_radar_interface.c **** /*
  20:../Store/src/ds_radar_interface.c **** ==============================================================================
  21:../Store/src/ds_radar_interface.c ****    1. INCLUDE FILES
  22:../Store/src/ds_radar_interface.c **** ==============================================================================
  23:../Store/src/ds_radar_interface.c ****  */
  24:../Store/src/ds_radar_interface.c **** 
  25:../Store/src/ds_radar_interface.c **** #include "sense2gol_bsp.h"
  26:../Store/src/ds_radar_interface.c **** #include "sense2gol_bsp_limits.h"
  27:../Store/src/ds_radar_interface.c **** #include "ds_radar_interface.h"
  28:../Store/src/ds_radar_interface.c **** #include "version.h"
  29:../Store/src/ds_radar_interface.c **** #include "datastore.h"
  30:../Store/src/ds_radar_interface.c **** 
  31:../Store/src/ds_radar_interface.c **** /*
  32:../Store/src/ds_radar_interface.c **** ==============================================================================
  33:../Store/src/ds_radar_interface.c ****    2. LOCAL DEFINITIONS
  34:../Store/src/ds_radar_interface.c **** ==============================================================================
  35:../Store/src/ds_radar_interface.c ****  */
  36:../Store/src/ds_radar_interface.c **** 
  37:../Store/src/ds_radar_interface.c **** /*
  38:../Store/src/ds_radar_interface.c **** ==============================================================================
  39:../Store/src/ds_radar_interface.c ****    3. LOCAL TYPES
  40:../Store/src/ds_radar_interface.c **** ==============================================================================
  41:../Store/src/ds_radar_interface.c ****  */
  42:../Store/src/ds_radar_interface.c **** 
  43:../Store/src/ds_radar_interface.c **** /*
  44:../Store/src/ds_radar_interface.c **** ==============================================================================
  45:../Store/src/ds_radar_interface.c ****    4. DATA
  46:../Store/src/ds_radar_interface.c **** ==============================================================================
  47:../Store/src/ds_radar_interface.c ****  */
  48:../Store/src/ds_radar_interface.c **** 
  49:../Store/src/ds_radar_interface.c **** /* ***************** Get data structures from datastore ******************* */
  50:../Store/src/ds_radar_interface.c **** /* Global constant structure to store the device info, this only holds compile time defines, so no 
  51:../Store/src/ds_radar_interface.c **** const Device_Info_t cg_device_info_struct = {
  52:../Store/src/ds_radar_interface.c **** 	.description = DEMO_DESCRIPTION,
  53:../Store/src/ds_radar_interface.c **** 	.major_version_hw = HW_VERSION_MAJOR,
  54:../Store/src/ds_radar_interface.c **** 	.minor_version_hw = HW_VERSION_MINOR,
  55:../Store/src/ds_radar_interface.c **** 	.num_tx_antennas = BSP_NUM_TX_ANTENNAS,
  56:../Store/src/ds_radar_interface.c **** 	.num_rx_antennas = BSP_NUM_RX_ANTENNAS,
  57:../Store/src/ds_radar_interface.c **** 	.num_temp_sensors = BSP_NUM_TEMP_SENSORS,
  58:../Store/src/ds_radar_interface.c **** 	.max_tx_power = BSP_MAX_TX_POWER_LEVEL,
  59:../Store/src/ds_radar_interface.c **** 	.min_rf_frequency_kHz = BSP_MIN_RF_FREQUENCY_KHZ,
  60:../Store/src/ds_radar_interface.c **** 	.max_rf_frequency_kHz = BSP_MAX_RF_FREQUENCY_KHZ,
  61:../Store/src/ds_radar_interface.c **** 	.interleaved_rx = 0,
  62:../Store/src/ds_radar_interface.c **** 	.data_format = RADAR_RX_DATA_COMPLEX
  63:../Store/src/ds_radar_interface.c **** 	};
  64:../Store/src/ds_radar_interface.c **** 
  65:../Store/src/ds_radar_interface.c **** /*
  66:../Store/src/ds_radar_interface.c **** ==============================================================================
  67:../Store/src/ds_radar_interface.c ****    5. LOCAL FUNCTION PROTOTYPES
  68:../Store/src/ds_radar_interface.c **** ==============================================================================
  69:../Store/src/ds_radar_interface.c ****  */
  70:../Store/src/ds_radar_interface.c **** 
  71:../Store/src/ds_radar_interface.c **** /*
  72:../Store/src/ds_radar_interface.c **** ==============================================================================
  73:../Store/src/ds_radar_interface.c ****    6. EXPORTED FUNCTIONS
  74:../Store/src/ds_radar_interface.c **** ==============================================================================
  75:../Store/src/ds_radar_interface.c ****  */
  76:../Store/src/ds_radar_interface.c **** 
  77:../Store/src/ds_radar_interface.c **** void ds_ep_fetch_adc_config(Adc_Configuration_t *ptr)
  78:../Store/src/ds_radar_interface.c **** {
  28              	 .loc 1 78 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 10B5     	 push {r4,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 4,-8
  37              	 .cfi_offset 14,-4
  38              	 .loc 1 78 0
  39 0002 0446     	 mov r4,r0
  79:../Store/src/ds_radar_interface.c **** 	device_settings_t *p_dev  = ds_device_get_settings();
  40              	 .loc 1 79 0
  41 0004 FFF7FEFF 	 bl ds_device_get_settings
  42              	.LVL1:
  80:../Store/src/ds_radar_interface.c **** 	ptr->samplerate_Hz        = p_dev->adc_sampling_freq_Hz;
  43              	 .loc 1 80 0
  44 0008 4369     	 ldr r3,[r0,#20]
  45 000a 2360     	 str r3,[r4]
  81:../Store/src/ds_radar_interface.c **** 	ptr->resolution           = p_dev->adc_resolution;
  46              	 .loc 1 81 0
  47 000c 037E     	 ldrb r3,[r0,#24]
  48 000e 2371     	 strb r3,[r4,#4]
  82:../Store/src/ds_radar_interface.c **** 	ptr->use_post_calibration = p_dev->adc_use_post_calibration;
  49              	 .loc 1 82 0
  50 0010 437E     	 ldrb r3,[r0,#25]
  51 0012 6371     	 strb r3,[r4,#5]
  52 0014 10BD     	 pop {r4,pc}
  53              	 .cfi_endproc
  54              	.LFE529:
  56 0016 00BF     	 .section .text.ds_ep_store_adc_config,"ax",%progbits
  57              	 .align 2
  58              	 .global ds_ep_store_adc_config
  59              	 .thumb
  60              	 .thumb_func
  62              	ds_ep_store_adc_config:
  63              	.LFB530:
  83:../Store/src/ds_radar_interface.c **** }
  84:../Store/src/ds_radar_interface.c **** 
  85:../Store/src/ds_radar_interface.c **** //============================================================================
  86:../Store/src/ds_radar_interface.c **** 
  87:../Store/src/ds_radar_interface.c **** uint16_t ds_ep_store_adc_config(const Adc_Configuration_t *p_config)
  88:../Store/src/ds_radar_interface.c **** {
  64              	 .loc 1 88 0
  65              	 .cfi_startproc
  66              	 
  67              	 
  68              	.LVL2:
  89:../Store/src/ds_radar_interface.c **** 	uint16_t status = RADAR_ERR_BUSY;
  90:../Store/src/ds_radar_interface.c **** 
  91:../Store/src/ds_radar_interface.c **** 	if (p_config != NULL)
  69              	 .loc 1 91 0
  70 0000 58B1     	 cbz r0,.L5
  88:../Store/src/ds_radar_interface.c **** 	uint16_t status = RADAR_ERR_BUSY;
  71              	 .loc 1 88 0
  72 0002 10B5     	 push {r4,lr}
  73              	.LCFI1:
  74              	 .cfi_def_cfa_offset 8
  75              	 .cfi_offset 4,-8
  76              	 .cfi_offset 14,-4
  77 0004 0446     	 mov r4,r0
  78              	.LBB2:
  92:../Store/src/ds_radar_interface.c **** 	{
  93:../Store/src/ds_radar_interface.c **** 		device_settings_t *p_dev        = ds_device_get_settings();
  79              	 .loc 1 93 0
  80 0006 FFF7FEFF 	 bl ds_device_get_settings
  81              	.LVL3:
  94:../Store/src/ds_radar_interface.c **** 		p_dev->adc_sampling_freq_Hz     = p_config->samplerate_Hz;
  82              	 .loc 1 94 0
  83 000a 2368     	 ldr r3,[r4]
  84 000c 4361     	 str r3,[r0,#20]
  95:../Store/src/ds_radar_interface.c **** 		p_dev->adc_resolution           = p_config->resolution;
  85              	 .loc 1 95 0
  86 000e 2379     	 ldrb r3,[r4,#4]
  87 0010 0376     	 strb r3,[r0,#24]
  96:../Store/src/ds_radar_interface.c **** 		p_dev->adc_use_post_calibration = p_config->use_post_calibration;
  88              	 .loc 1 96 0
  89 0012 6379     	 ldrb r3,[r4,#5]
  90 0014 4376     	 strb r3,[r0,#25]
  91              	.LVL4:
  97:../Store/src/ds_radar_interface.c **** 
  98:../Store/src/ds_radar_interface.c **** 		status = RADAR_ERR_OK;
  92              	 .loc 1 98 0
  93 0016 0020     	 movs r0,#0
  94              	.LVL5:
  95 0018 10BD     	 pop {r4,pc}
  96              	.LVL6:
  97              	.L5:
  98              	.LCFI2:
  99              	 .cfi_def_cfa_offset 0
 100              	 .cfi_restore 4
 101              	 .cfi_restore 14
 102              	.LBE2:
  89:../Store/src/ds_radar_interface.c **** 
 103              	 .loc 1 89 0
 104 001a 0220     	 movs r0,#2
 105              	.LVL7:
 106 001c 7047     	 bx lr
 107              	 .cfi_endproc
 108              	.LFE530:
 110 001e 00BF     	 .section .text.ds_ep_get_device_info,"ax",%progbits
 111              	 .align 2
 112              	 .global ds_ep_get_device_info
 113              	 .thumb
 114              	 .thumb_func
 116              	ds_ep_get_device_info:
 117              	.LFB531:
  99:../Store/src/ds_radar_interface.c **** 	}
 100:../Store/src/ds_radar_interface.c **** 	return (status);
 101:../Store/src/ds_radar_interface.c **** }
 102:../Store/src/ds_radar_interface.c **** 
 103:../Store/src/ds_radar_interface.c **** //============================================================================
 104:../Store/src/ds_radar_interface.c **** 
 105:../Store/src/ds_radar_interface.c **** const Device_Info_t *ds_ep_get_device_info(void)
 106:../Store/src/ds_radar_interface.c **** {
 118              	 .loc 1 106 0
 119              	 .cfi_startproc
 120              	 
 121              	 
 122              	 
 107:../Store/src/ds_radar_interface.c **** 	return (&cg_device_info_struct);
 108:../Store/src/ds_radar_interface.c **** }
 123              	 .loc 1 108 0
 124 0000 0048     	 ldr r0,.L10
 125 0002 7047     	 bx lr
 126              	.L11:
 127              	 .align 2
 128              	.L10:
 129 0004 00000000 	 .word .LANCHOR0
 130              	 .cfi_endproc
 131              	.LFE531:
 133              	 .section .text.ds_ep_fetch_frame_format,"ax",%progbits
 134              	 .align 2
 135              	 .global ds_ep_fetch_frame_format
 136              	 .thumb
 137              	 .thumb_func
 139              	ds_ep_fetch_frame_format:
 140              	.LFB532:
 109:../Store/src/ds_radar_interface.c **** 
 110:../Store/src/ds_radar_interface.c **** //============================================================================
 111:../Store/src/ds_radar_interface.c **** 
 112:../Store/src/ds_radar_interface.c **** void ds_ep_fetch_frame_format(Frame_Format_t *p_frame_format)
 113:../Store/src/ds_radar_interface.c **** {
 141              	 .loc 1 113 0
 142              	 .cfi_startproc
 143              	 
 144              	 
 145              	.LVL8:
 146 0000 10B5     	 push {r4,lr}
 147              	.LCFI3:
 148              	 .cfi_def_cfa_offset 8
 149              	 .cfi_offset 4,-8
 150              	 .cfi_offset 14,-4
 151              	 .loc 1 113 0
 152 0002 0446     	 mov r4,r0
 114:../Store/src/ds_radar_interface.c **** 	device_settings_t *p_dev              = ds_device_get_settings();
 153              	 .loc 1 114 0
 154 0004 FFF7FEFF 	 bl ds_device_get_settings
 155              	.LVL9:
 115:../Store/src/ds_radar_interface.c **** 	p_frame_format->num_samples_per_chirp = p_dev->num_samples_per_chirp;
 116:../Store/src/ds_radar_interface.c **** 	p_frame_format->num_chirps_per_frame  = p_dev->num_of_chirps_per_frame;
 156              	 .loc 1 116 0
 157 0008 C269     	 ldr r2,[r0,#28]
 115:../Store/src/ds_radar_interface.c **** 	p_frame_format->num_samples_per_chirp = p_dev->num_samples_per_chirp;
 158              	 .loc 1 115 0
 159 000a 416A     	 ldr r1,[r0,#36]
 160              	 .loc 1 116 0
 161 000c 84E80600 	 stmia r4,{r1,r2}
 117:../Store/src/ds_radar_interface.c **** 	p_frame_format->rx_mask               = p_dev->rx_antenna_mask;
 162              	 .loc 1 117 0
 163 0010 90F82820 	 ldrb r2,[r0,#40]
 164 0014 2272     	 strb r2,[r4,#8]
 118:../Store/src/ds_radar_interface.c **** 	p_frame_format->signal_part           = RADAR_SIGNAL_I_AND_Q;
 165              	 .loc 1 118 0
 166 0016 0223     	 movs r3,#2
 167 0018 6372     	 strb r3,[r4,#9]
 168 001a 10BD     	 pop {r4,pc}
 169              	 .cfi_endproc
 170              	.LFE532:
 172              	 .section .text.ds_ep_store_frame_format,"ax",%progbits
 173              	 .align 2
 174              	 .global ds_ep_store_frame_format
 175              	 .thumb
 176              	 .thumb_func
 178              	ds_ep_store_frame_format:
 179              	.LFB533:
 119:../Store/src/ds_radar_interface.c **** }
 120:../Store/src/ds_radar_interface.c **** 
 121:../Store/src/ds_radar_interface.c **** //============================================================================
 122:../Store/src/ds_radar_interface.c **** 
 123:../Store/src/ds_radar_interface.c **** uint16_t ds_ep_store_frame_format(const Frame_Format_t *p_new_frame_format)
 124:../Store/src/ds_radar_interface.c **** {
 180              	 .loc 1 124 0
 181              	 .cfi_startproc
 182              	 
 183              	 
 184              	.LVL10:
 125:../Store/src/ds_radar_interface.c **** 	uint16_t status = RADAR_ERR_BUSY;
 126:../Store/src/ds_radar_interface.c **** 
 127:../Store/src/ds_radar_interface.c **** 	if (p_new_frame_format != NULL)
 185              	 .loc 1 127 0
 186 0000 20B1     	 cbz r0,.L16
 128:../Store/src/ds_radar_interface.c **** 	{
 129:../Store/src/ds_radar_interface.c **** 		if (p_new_frame_format->signal_part != RADAR_SIGNAL_I_AND_Q)
 187              	 .loc 1 129 0
 188 0002 437A     	 ldrb r3,[r0,#9]
 189 0004 022B     	 cmp r3,#2
 190 0006 03D0     	 beq .L20
 130:../Store/src/ds_radar_interface.c **** 		{
 131:../Store/src/ds_radar_interface.c **** 			status = RADAR_ERR_UNAVAILABLE_SIGNAL_PART;
 191              	 .loc 1 131 0
 192 0008 0B20     	 movs r0,#11
 193              	.LVL11:
 194 000a 7047     	 bx lr
 195              	.LVL12:
 196              	.L16:
 125:../Store/src/ds_radar_interface.c **** 
 197              	 .loc 1 125 0
 198 000c 0220     	 movs r0,#2
 199              	.LVL13:
 200 000e 7047     	 bx lr
 201              	.LVL14:
 202              	.L20:
 124:../Store/src/ds_radar_interface.c **** 	uint16_t status = RADAR_ERR_BUSY;
 203              	 .loc 1 124 0
 204 0010 10B5     	 push {r4,lr}
 205              	.LCFI4:
 206              	 .cfi_def_cfa_offset 8
 207              	 .cfi_offset 4,-8
 208              	 .cfi_offset 14,-4
 209 0012 0446     	 mov r4,r0
 210              	.LBB3:
 132:../Store/src/ds_radar_interface.c **** 		}
 133:../Store/src/ds_radar_interface.c **** 		else
 134:../Store/src/ds_radar_interface.c **** 		{
 135:../Store/src/ds_radar_interface.c **** 			device_settings_t *p_dev       = ds_device_get_settings();
 211              	 .loc 1 135 0
 212 0014 FFF7FEFF 	 bl ds_device_get_settings
 213              	.LVL15:
 136:../Store/src/ds_radar_interface.c **** 			p_dev->num_samples_per_chirp   = p_new_frame_format->num_samples_per_chirp;
 137:../Store/src/ds_radar_interface.c **** 			p_dev->num_of_chirps_per_frame = p_new_frame_format->num_chirps_per_frame;
 214              	 .loc 1 137 0
 215 0018 94E80C00 	 ldmia r4,{r2,r3}
 136:../Store/src/ds_radar_interface.c **** 			p_dev->num_samples_per_chirp   = p_new_frame_format->num_samples_per_chirp;
 216              	 .loc 1 136 0
 217 001c 4262     	 str r2,[r0,#36]
 218              	 .loc 1 137 0
 219 001e C361     	 str r3,[r0,#28]
 138:../Store/src/ds_radar_interface.c **** 			p_dev->rx_antenna_mask         = p_new_frame_format->rx_mask;
 220              	 .loc 1 138 0
 221 0020 237A     	 ldrb r3,[r4,#8]
 222 0022 80F82830 	 strb r3,[r0,#40]
 223              	.LVL16:
 139:../Store/src/ds_radar_interface.c **** 
 140:../Store/src/ds_radar_interface.c **** 			status = RADAR_ERR_OK;
 224              	 .loc 1 140 0
 225 0026 0020     	 movs r0,#0
 226              	.LVL17:
 227 0028 10BD     	 pop {r4,pc}
 228              	.LBE3:
 229              	 .cfi_endproc
 230              	.LFE533:
 232              	 .global cg_device_info_struct
 233 002a 00BF     	 .section .rodata.str1.4,"aMS",%progbits,1
 234              	 .align 2
 235              	.LC0:
 236 0000 53656E73 	 .ascii "Sense2GoL Pulse BGT24LTR11 Demo Radar Board\000"
 236      6532476F 
 236      4C205075 
 236      6C736520 
 236      42475432 
 237              	 .section .rodata.cg_device_info_struct,"a",%progbits
 238              	 .align 2
 239              	 .set .LANCHOR0,.+0
 242              	cg_device_info_struct:
 243 0000 00000000 	 .word .LC0
 244 0004 A8976E01 	 .word 24025000
 245 0008 E8A47101 	 .word 24225000
 246 000c 01       	 .byte 1
 247 000d 02       	 .byte 2
 248 000e 01       	 .byte 1
 249 000f 01       	 .byte 1
 250 0010 02       	 .byte 2
 251 0011 00       	 .byte 0
 252 0012 00       	 .byte 0
 253 0013 01       	 .byte 1
 254              	 .text
 255              	.Letext0:
 256              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 257              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 258              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 259              	 .file 5 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_vadc.h"
 260              	 .file 6 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 261              	 .file 7 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_usbd.h"
 262              	 .file 8 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/USBD/usbd.h"
 263              	 .file 9 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_usic.h"
 264              	 .file 10 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Store/inc/datastore.h"
 265              	 .file 11 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Radar_Control/inc/radar_api.h"
 266              	 .file 12 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Include/core_cm4.h"
 267              	 .file 13 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 268              	 .file 14 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 269              	 .file 15 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/USBD/usbd_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ds_radar_interface.c
    {standard input}:20     .text.ds_ep_fetch_adc_config:00000000 $t
    {standard input}:25     .text.ds_ep_fetch_adc_config:00000000 ds_ep_fetch_adc_config
    {standard input}:57     .text.ds_ep_store_adc_config:00000000 $t
    {standard input}:62     .text.ds_ep_store_adc_config:00000000 ds_ep_store_adc_config
    {standard input}:111    .text.ds_ep_get_device_info:00000000 $t
    {standard input}:116    .text.ds_ep_get_device_info:00000000 ds_ep_get_device_info
    {standard input}:129    .text.ds_ep_get_device_info:00000004 $d
    {standard input}:134    .text.ds_ep_fetch_frame_format:00000000 $t
    {standard input}:139    .text.ds_ep_fetch_frame_format:00000000 ds_ep_fetch_frame_format
    {standard input}:173    .text.ds_ep_store_frame_format:00000000 $t
    {standard input}:178    .text.ds_ep_store_frame_format:00000000 ds_ep_store_frame_format
    {standard input}:242    .rodata.cg_device_info_struct:00000000 cg_device_info_struct
    {standard input}:234    .rodata.str1.4:00000000 $d
    {standard input}:238    .rodata.cg_device_info_struct:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ds_device_get_settings
