   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "dsp_lib.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .global __aeabi_f2d
  20              	 .global __aeabi_dmul
  21              	 .global __aeabi_ddiv
  22              	 .global __aeabi_d2f
  23              	 .global __aeabi_ui2d
  24              	 .section .text.fft_window_gen,"ax",%progbits
  25              	 .align 2
  26              	 .global fft_window_gen
  27              	 .thumb
  28              	 .thumb_func
  30              	fft_window_gen:
  31              	.LFB535:
  32              	 .file 1 "../DSP_LIB/src/dsp_lib.c"
   1:../DSP_LIB/src/dsp_lib.c **** /**
   2:../DSP_LIB/src/dsp_lib.c ****     @file: dsp_lib.c
   3:../DSP_LIB/src/dsp_lib.c **** 
   4:../DSP_LIB/src/dsp_lib.c ****   	@brief: This library includes basic functions like FFT and windowing functions etc.
   5:../DSP_LIB/src/dsp_lib.c **** */
   6:../DSP_LIB/src/dsp_lib.c **** 
   7:../DSP_LIB/src/dsp_lib.c **** /* ===========================================================================
   8:../DSP_LIB/src/dsp_lib.c **** ** Copyright (C) 2018-2021 Infineon Technologies AG
   9:../DSP_LIB/src/dsp_lib.c **** ** All rights reserved.
  10:../DSP_LIB/src/dsp_lib.c **** ** ===========================================================================
  11:../DSP_LIB/src/dsp_lib.c **** **
  12:../DSP_LIB/src/dsp_lib.c **** ** ===========================================================================
  13:../DSP_LIB/src/dsp_lib.c **** ** This document contains proprietary information of Infineon Technologies AG.
  14:../DSP_LIB/src/dsp_lib.c **** ** Passing on and copying of this document, and communication of its contents
  15:../DSP_LIB/src/dsp_lib.c **** ** is not permitted without Infineon's prior written authorization.
  16:../DSP_LIB/src/dsp_lib.c **** ** ===========================================================================
  17:../DSP_LIB/src/dsp_lib.c **** */
  18:../DSP_LIB/src/dsp_lib.c **** 
  19:../DSP_LIB/src/dsp_lib.c **** /*
  20:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
  21:../DSP_LIB/src/dsp_lib.c ****    1. INCLUDE FILES
  22:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
  23:../DSP_LIB/src/dsp_lib.c ****  */
  24:../DSP_LIB/src/dsp_lib.c **** 
  25:../DSP_LIB/src/dsp_lib.c **** #include "dsp_lib.h"
  26:../DSP_LIB/src/dsp_lib.c **** #include "math.h"
  27:../DSP_LIB/src/dsp_lib.c **** 
  28:../DSP_LIB/src/dsp_lib.c **** /*
  29:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
  30:../DSP_LIB/src/dsp_lib.c ****    2. LOCAL DEFINITIONS
  31:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
  32:../DSP_LIB/src/dsp_lib.c ****  */
  33:../DSP_LIB/src/dsp_lib.c **** 
  34:../DSP_LIB/src/dsp_lib.c **** #define MAX_FFT_WIN_LEN		          (256U)		/**< Max Window length for FFT windowing over time */
  35:../DSP_LIB/src/dsp_lib.c **** 
  36:../DSP_LIB/src/dsp_lib.c **** /*
  37:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
  38:../DSP_LIB/src/dsp_lib.c ****    3. DATA
  39:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
  40:../DSP_LIB/src/dsp_lib.c ****  */
  41:../DSP_LIB/src/dsp_lib.c **** 
  42:../DSP_LIB/src/dsp_lib.c **** /*
  43:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
  44:../DSP_LIB/src/dsp_lib.c ****    5. LOCAL FUNCTION PROTOTYPES
  45:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
  46:../DSP_LIB/src/dsp_lib.c ****  */
  47:../DSP_LIB/src/dsp_lib.c **** 
  48:../DSP_LIB/src/dsp_lib.c **** /**
  49:../DSP_LIB/src/dsp_lib.c ****  * \brief This function generates the coefficients of a user selected window for a given length.
  50:../DSP_LIB/src/dsp_lib.c ****  *
  51:../DSP_LIB/src/dsp_lib.c ****  * \param [in]       window_type     Define the type of window \ref FFT_Window_Type_t
  52:../DSP_LIB/src/dsp_lib.c ****  * \param [in]       window_size     Define the number of elements in the window:
  53:../DSP_LIB/src/dsp_lib.c ****  *                                   For fast FFT window, it is the the number of sample per chirp 
  54:../DSP_LIB/src/dsp_lib.c ****  *                                   For slow FFT window, it is the number of chirp per frame
  55:../DSP_LIB/src/dsp_lib.c ****  * \param [in]       at_dB           Attenuation parameter used only in case of Chebyshev window
  56:../DSP_LIB/src/dsp_lib.c ****  *                                   It defines the attenuation in dBs required to generate the pas
  57:../DSP_LIB/src/dsp_lib.c ****  *                                   band ripple for a Chebyshev window.This must be a positive num
  58:../DSP_LIB/src/dsp_lib.c ****  * \param [in, out]  window_buffer   Pointer to an allocated buffer to filled with Window coefficie
  59:../DSP_LIB/src/dsp_lib.c ****  *
  60:../DSP_LIB/src/dsp_lib.c ****  * \return uint8_t   0 for Error and non-zero for success case.
  61:../DSP_LIB/src/dsp_lib.c ****  */
  62:../DSP_LIB/src/dsp_lib.c **** static uint8_t fft_window_init(FFT_Window_Type_t window_type, uint32_t window_size, float at_dB, fl
  63:../DSP_LIB/src/dsp_lib.c **** 
  64:../DSP_LIB/src/dsp_lib.c **** /**
  65:../DSP_LIB/src/dsp_lib.c ****  * @brief  This function generates the coefficients of a Hamming window for a given length.
  66:../DSP_LIB/src/dsp_lib.c ****  *
  67:../DSP_LIB/src/dsp_lib.c ****  * @param [in]       window_size     Define the number of elements in the window
  68:../DSP_LIB/src/dsp_lib.c ****  * @param [in, out]  window_buffer   Pointer to an allocated buffer to filled with Window coefficie
  69:../DSP_LIB/src/dsp_lib.c ****  *
  70:../DSP_LIB/src/dsp_lib.c ****  * @return uint8_t   0 for Error and non-zero for success case.
  71:../DSP_LIB/src/dsp_lib.c ****  */
  72:../DSP_LIB/src/dsp_lib.c **** static uint8_t fft_window_init_hamming(uint32_t window_size, float *window_buffer);
  73:../DSP_LIB/src/dsp_lib.c **** 
  74:../DSP_LIB/src/dsp_lib.c **** /**
  75:../DSP_LIB/src/dsp_lib.c ****  * @brief  This function generates the coefficients of a Hanning window for a given length.
  76:../DSP_LIB/src/dsp_lib.c ****  *
  77:../DSP_LIB/src/dsp_lib.c ****  * @param [in]       window_size     Define the number of elements in the window
  78:../DSP_LIB/src/dsp_lib.c ****  * @param [in, out]  window_buffer   Pointer to an allocated buffer to filled with Window coefficie
  79:../DSP_LIB/src/dsp_lib.c ****  *
  80:../DSP_LIB/src/dsp_lib.c ****  * @return uint8_t   0 for Error and non-zero for success case.
  81:../DSP_LIB/src/dsp_lib.c ****  *
  82:../DSP_LIB/src/dsp_lib.c ****  * @return uint8_t Error code.
  83:../DSP_LIB/src/dsp_lib.c ****  */
  84:../DSP_LIB/src/dsp_lib.c **** static uint8_t fft_window_init_hanning(uint32_t window_size, float *window_buffer);
  85:../DSP_LIB/src/dsp_lib.c **** 
  86:../DSP_LIB/src/dsp_lib.c **** /**
  87:../DSP_LIB/src/dsp_lib.c ****  * @brief  This function generates the coefficients of a Blackman window for a given length.
  88:../DSP_LIB/src/dsp_lib.c ****  *
  89:../DSP_LIB/src/dsp_lib.c ****  * @param [in]       window_size     Define the number of elements in the window
  90:../DSP_LIB/src/dsp_lib.c ****  * @param [in, out]  window_buffer   Pointer to an allocated buffer to filled with Window coefficie
  91:../DSP_LIB/src/dsp_lib.c ****  *
  92:../DSP_LIB/src/dsp_lib.c ****  * @return uint8_t   0 for Error and non-zero for success case.
  93:../DSP_LIB/src/dsp_lib.c ****  */
  94:../DSP_LIB/src/dsp_lib.c **** static uint8_t fft_window_init_blackmanharris(uint32_t window_size, float *window_buffer);
  95:../DSP_LIB/src/dsp_lib.c **** 
  96:../DSP_LIB/src/dsp_lib.c **** /**
  97:../DSP_LIB/src/dsp_lib.c ****  * @brief  This function generates the coefficients of a Chebyshev window for a given length.
  98:../DSP_LIB/src/dsp_lib.c ****  *
  99:../DSP_LIB/src/dsp_lib.c ****  * @param [in]       window_size     Define the number of elements in the window
 100:../DSP_LIB/src/dsp_lib.c ****  * @param [in]       at_dB Defines the attenuation in dBs required to generate
 101:../DSP_LIB/src/dsp_lib.c ****  *                       the pass band ripple for a Chebyshev window.
 102:../DSP_LIB/src/dsp_lib.c ****  *                       This must be a positive number.
 103:../DSP_LIB/src/dsp_lib.c ****  * @param [in, out]  window_buffer   Pointer to an allocated buffer to filled with Window coefficie
 104:../DSP_LIB/src/dsp_lib.c ****  *
 105:../DSP_LIB/src/dsp_lib.c ****  *       Reference: Dolph Chebyshev window according to
 106:../DSP_LIB/src/dsp_lib.c ****  *                  http://practicalcryptography.com/miscellaneous/
 107:../DSP_LIB/src/dsp_lib.c ****  *                  machine-learning/implementing-dolph-chebyshev-window/
 108:../DSP_LIB/src/dsp_lib.c ****  *
 109:../DSP_LIB/src/dsp_lib.c ****  * @return uint8_t   0 for Error and non-zero for success case.
 110:../DSP_LIB/src/dsp_lib.c ****  */
 111:../DSP_LIB/src/dsp_lib.c **** static uint8_t fft_window_init_chebyshev(uint32_t window_size, float *window_buffer, float at_dB);
 112:../DSP_LIB/src/dsp_lib.c **** 
 113:../DSP_LIB/src/dsp_lib.c **** /**
 114:../DSP_LIB/src/dsp_lib.c ****  * @brief  Computes Chebyshev polynomial of the first kind.
 115:../DSP_LIB/src/dsp_lib.c ****  *
 116:../DSP_LIB/src/dsp_lib.c ****  * @param [in] size       Size of Chebyshev polynomial
 117:../DSP_LIB/src/dsp_lib.c ****  * @param [in] poly_order Order of the polynomial.
 118:../DSP_LIB/src/dsp_lib.c ****  *
 119:../DSP_LIB/src/dsp_lib.c ****  * @return Return value from the Chebyshev polynomial.
 120:../DSP_LIB/src/dsp_lib.c ****  */
 121:../DSP_LIB/src/dsp_lib.c **** static float cheby_poly(const uint32_t size, const float poly_order);
 122:../DSP_LIB/src/dsp_lib.c **** 
 123:../DSP_LIB/src/dsp_lib.c **** /*
 124:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
 125:../DSP_LIB/src/dsp_lib.c ****   6. LOCAL FUNCTIONS
 126:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
 127:../DSP_LIB/src/dsp_lib.c ****  */
 128:../DSP_LIB/src/dsp_lib.c **** 
 129:../DSP_LIB/src/dsp_lib.c **** /*--------------------- fft_window_init_hamming() ------------------------*/
 130:../DSP_LIB/src/dsp_lib.c **** static uint8_t fft_window_init_hamming(uint32_t window_size, float *window_buffer)
 131:../DSP_LIB/src/dsp_lib.c **** {
 132:../DSP_LIB/src/dsp_lib.c ****   if (window_size == 1)
 133:../DSP_LIB/src/dsp_lib.c ****   {
 134:../DSP_LIB/src/dsp_lib.c **** 	window_buffer[0] = 1;
 135:../DSP_LIB/src/dsp_lib.c ****   }
 136:../DSP_LIB/src/dsp_lib.c ****   else
 137:../DSP_LIB/src/dsp_lib.c ****   {
 138:../DSP_LIB/src/dsp_lib.c ****     for (uint32_t i = 0; i < window_size; ++i)
 139:../DSP_LIB/src/dsp_lib.c ****     {
 140:../DSP_LIB/src/dsp_lib.c ****       window_buffer[i] = 0.54f - 0.46f * arm_cos_f32(2.0f * M_PI * (float)i / (float)(window_size -
 141:../DSP_LIB/src/dsp_lib.c ****     }
 142:../DSP_LIB/src/dsp_lib.c ****   }
 143:../DSP_LIB/src/dsp_lib.c **** 
 144:../DSP_LIB/src/dsp_lib.c ****   return 1;
 145:../DSP_LIB/src/dsp_lib.c **** }
 146:../DSP_LIB/src/dsp_lib.c **** 
 147:../DSP_LIB/src/dsp_lib.c **** /*----------------------- fft_window_init_hanning() ----------------------*/
 148:../DSP_LIB/src/dsp_lib.c **** static uint8_t fft_window_init_hanning(uint32_t window_size, float *window_buffer)
 149:../DSP_LIB/src/dsp_lib.c **** {
 150:../DSP_LIB/src/dsp_lib.c ****   if (window_size == 1)
 151:../DSP_LIB/src/dsp_lib.c ****   {
 152:../DSP_LIB/src/dsp_lib.c **** 	window_buffer[0] = 1;
 153:../DSP_LIB/src/dsp_lib.c ****   }
 154:../DSP_LIB/src/dsp_lib.c ****   else
 155:../DSP_LIB/src/dsp_lib.c ****   {
 156:../DSP_LIB/src/dsp_lib.c ****     for (uint32_t i = 0; i < window_size; ++i)
 157:../DSP_LIB/src/dsp_lib.c ****     {
 158:../DSP_LIB/src/dsp_lib.c ****       window_buffer[i] = 0.5f * (1.0f - arm_cos_f32(2 * M_PI * (float)i / (float)(window_size - 1))
 159:../DSP_LIB/src/dsp_lib.c ****     }
 160:../DSP_LIB/src/dsp_lib.c ****   }
 161:../DSP_LIB/src/dsp_lib.c ****   return 1;
 162:../DSP_LIB/src/dsp_lib.c **** }
 163:../DSP_LIB/src/dsp_lib.c **** 
 164:../DSP_LIB/src/dsp_lib.c **** /*----------------- fft_window_init_blackmanharris() ---------------------*/
 165:../DSP_LIB/src/dsp_lib.c **** static uint8_t fft_window_init_blackmanharris(uint32_t window_size, float *window_buffer)
 166:../DSP_LIB/src/dsp_lib.c **** {
 167:../DSP_LIB/src/dsp_lib.c ****   if (window_size == 1)
 168:../DSP_LIB/src/dsp_lib.c ****   {
 169:../DSP_LIB/src/dsp_lib.c **** 	window_buffer[0] = 1;
 170:../DSP_LIB/src/dsp_lib.c ****   }
 171:../DSP_LIB/src/dsp_lib.c ****   else
 172:../DSP_LIB/src/dsp_lib.c ****   {
 173:../DSP_LIB/src/dsp_lib.c ****     const float a0 = 0.35875f;
 174:../DSP_LIB/src/dsp_lib.c ****     const float a1 = 0.48829f;
 175:../DSP_LIB/src/dsp_lib.c ****     const float a2 = 0.14128f;
 176:../DSP_LIB/src/dsp_lib.c ****     const float a3 = 0.01168f;
 177:../DSP_LIB/src/dsp_lib.c **** 
 178:../DSP_LIB/src/dsp_lib.c ****    for (uint32_t i = 0; i < window_size; ++i)
 179:../DSP_LIB/src/dsp_lib.c ****    {
 180:../DSP_LIB/src/dsp_lib.c **** 	 window_buffer[i] = a0
 181:../DSP_LIB/src/dsp_lib.c ****                         - (a1 * arm_cos_f32( (2.0f * M_PI * (float)i) / (window_size - 1) ))
 182:../DSP_LIB/src/dsp_lib.c ****                         + (a2 * arm_cos_f32( (4.0f * M_PI * (float)i) / (window_size - 1) ))
 183:../DSP_LIB/src/dsp_lib.c ****                         - (a3 * arm_cos_f32( (6.0f * M_PI * (float)i) / (window_size - 1) ));
 184:../DSP_LIB/src/dsp_lib.c ****     }
 185:../DSP_LIB/src/dsp_lib.c ****   }
 186:../DSP_LIB/src/dsp_lib.c ****   return 1;
 187:../DSP_LIB/src/dsp_lib.c **** }
 188:../DSP_LIB/src/dsp_lib.c **** 
 189:../DSP_LIB/src/dsp_lib.c **** /*-------------------- fft_window_init_chebyshev() -----------------------*/
 190:../DSP_LIB/src/dsp_lib.c **** static uint8_t fft_window_init_chebyshev(uint32_t window_size, float *window_buffer, float at_dB)
 191:../DSP_LIB/src/dsp_lib.c **** {
 192:../DSP_LIB/src/dsp_lib.c ****   if (window_size == 1)
 193:../DSP_LIB/src/dsp_lib.c ****   {
 194:../DSP_LIB/src/dsp_lib.c **** 	window_buffer[0] = 1;
 195:../DSP_LIB/src/dsp_lib.c ****   }
 196:../DSP_LIB/src/dsp_lib.c ****   else
 197:../DSP_LIB/src/dsp_lib.c ****   {
 198:../DSP_LIB/src/dsp_lib.c ****     float pssbnd_ripple = powf(10.0f, at_dB / 20.0f);
 199:../DSP_LIB/src/dsp_lib.c ****     float alpha = coshf((1.0f / (float)(window_size - 1)) * acoshf(pssbnd_ripple));
 200:../DSP_LIB/src/dsp_lib.c ****     float win_even = (float)((window_size - 1) / 2);
 201:../DSP_LIB/src/dsp_lib.c **** 
 202:../DSP_LIB/src/dsp_lib.c ****     if (window_size % 2 == 0)
 203:../DSP_LIB/src/dsp_lib.c ****     {
 204:../DSP_LIB/src/dsp_lib.c ****       win_even = win_even + 0.5f;
 205:../DSP_LIB/src/dsp_lib.c ****     }
 206:../DSP_LIB/src/dsp_lib.c **** 
 207:../DSP_LIB/src/dsp_lib.c ****     float max_val = 0;
 208:../DSP_LIB/src/dsp_lib.c ****     for (uint32_t j = 0; j < (window_size / 2 + 1); ++j)
 209:../DSP_LIB/src/dsp_lib.c ****     {
 210:../DSP_LIB/src/dsp_lib.c ****       float n = j - win_even;
 211:../DSP_LIB/src/dsp_lib.c ****       float sum = 0;
 212:../DSP_LIB/src/dsp_lib.c **** 
 213:../DSP_LIB/src/dsp_lib.c ****       for (uint32_t i = 1; i <= win_even; ++i)
 214:../DSP_LIB/src/dsp_lib.c ****       {
 215:../DSP_LIB/src/dsp_lib.c ****        	float poly_order = alpha * arm_cos_f32( (M_PI * i) / window_size);
 216:../DSP_LIB/src/dsp_lib.c ****        	float res = cheby_poly( window_size - 1, poly_order);
 217:../DSP_LIB/src/dsp_lib.c ****         sum += res * arm_cos_f32( 2.0f * n * M_PI * i / (float)window_size );
 218:../DSP_LIB/src/dsp_lib.c ****       }
 219:../DSP_LIB/src/dsp_lib.c **** 
 220:../DSP_LIB/src/dsp_lib.c ****       window_buffer[j] = pssbnd_ripple + 2 * sum;
 221:../DSP_LIB/src/dsp_lib.c ****       window_buffer[window_size - j - 1] = window_buffer[j];
 222:../DSP_LIB/src/dsp_lib.c **** 
 223:../DSP_LIB/src/dsp_lib.c ****       if (window_buffer[j] > max_val)
 224:../DSP_LIB/src/dsp_lib.c ****       {
 225:../DSP_LIB/src/dsp_lib.c ****         max_val = window_buffer[j];
 226:../DSP_LIB/src/dsp_lib.c ****       }
 227:../DSP_LIB/src/dsp_lib.c ****     }
 228:../DSP_LIB/src/dsp_lib.c **** 
 229:../DSP_LIB/src/dsp_lib.c ****     for (uint32_t j = 0; j < window_size; ++j)
 230:../DSP_LIB/src/dsp_lib.c ****     {
 231:../DSP_LIB/src/dsp_lib.c ****       window_buffer[j] /= max_val;
 232:../DSP_LIB/src/dsp_lib.c ****     }
 233:../DSP_LIB/src/dsp_lib.c ****   }
 234:../DSP_LIB/src/dsp_lib.c ****   return 1;
 235:../DSP_LIB/src/dsp_lib.c **** }
 236:../DSP_LIB/src/dsp_lib.c **** 
 237:../DSP_LIB/src/dsp_lib.c **** /*----------------------------- cheby_poly() -----------------------------*/
 238:../DSP_LIB/src/dsp_lib.c **** static float cheby_poly(const uint32_t size, const float poly_order)
 239:../DSP_LIB/src/dsp_lib.c **** {
 240:../DSP_LIB/src/dsp_lib.c ****   float ret = 0;
 241:../DSP_LIB/src/dsp_lib.c **** 
 242:../DSP_LIB/src/dsp_lib.c ****   if (fabsf(poly_order) <= 1)
 243:../DSP_LIB/src/dsp_lib.c ****   {
 244:../DSP_LIB/src/dsp_lib.c ****     ret = arm_cos_f32( size * acosf(poly_order));
 245:../DSP_LIB/src/dsp_lib.c ****   }
 246:../DSP_LIB/src/dsp_lib.c ****   else
 247:../DSP_LIB/src/dsp_lib.c ****   {
 248:../DSP_LIB/src/dsp_lib.c ****    	  ret = coshf( size * acoshf(poly_order)); 
 249:../DSP_LIB/src/dsp_lib.c ****   }
 250:../DSP_LIB/src/dsp_lib.c **** 
 251:../DSP_LIB/src/dsp_lib.c ****   return ret;
 252:../DSP_LIB/src/dsp_lib.c **** }
 253:../DSP_LIB/src/dsp_lib.c **** 
 254:../DSP_LIB/src/dsp_lib.c **** /*-------------------------- fft_window_init() ---------------------------*/
 255:../DSP_LIB/src/dsp_lib.c **** static uint8_t fft_window_init(FFT_Window_Type_t window_type, uint32_t window_size, float at_dB, fl
 256:../DSP_LIB/src/dsp_lib.c **** {
 257:../DSP_LIB/src/dsp_lib.c ****   if ((window_buffer == NULL) || (window_size == 0) || (window_size > MAX_FFT_WIN_LEN))
 258:../DSP_LIB/src/dsp_lib.c ****   {
 259:../DSP_LIB/src/dsp_lib.c ****     return 0;
 260:../DSP_LIB/src/dsp_lib.c ****   }
 261:../DSP_LIB/src/dsp_lib.c **** 
 262:../DSP_LIB/src/dsp_lib.c ****   switch (window_type)
 263:../DSP_LIB/src/dsp_lib.c ****   {
 264:../DSP_LIB/src/dsp_lib.c ****   case FFT_WINDOW_HAMM:
 265:../DSP_LIB/src/dsp_lib.c **** 	  return fft_window_init_hamming(window_size, window_buffer);
 266:../DSP_LIB/src/dsp_lib.c **** 	  break;
 267:../DSP_LIB/src/dsp_lib.c **** 
 268:../DSP_LIB/src/dsp_lib.c ****   case FFT_WINDOW_HANN:
 269:../DSP_LIB/src/dsp_lib.c **** 	  return fft_window_init_hanning(window_size, window_buffer);
 270:../DSP_LIB/src/dsp_lib.c **** 	  break;
 271:../DSP_LIB/src/dsp_lib.c **** 
 272:../DSP_LIB/src/dsp_lib.c ****   case FFT_WINDOW_BLACKMANHARRIS:
 273:../DSP_LIB/src/dsp_lib.c **** 	  return fft_window_init_blackmanharris(window_size, window_buffer);
 274:../DSP_LIB/src/dsp_lib.c **** 	  break;
 275:../DSP_LIB/src/dsp_lib.c **** 
 276:../DSP_LIB/src/dsp_lib.c ****   case FFT_WINDOW_CHEBYSHEV:
 277:../DSP_LIB/src/dsp_lib.c **** 	  return fft_window_init_chebyshev(window_size, window_buffer, at_dB);
 278:../DSP_LIB/src/dsp_lib.c **** 	  break;
 279:../DSP_LIB/src/dsp_lib.c **** 
 280:../DSP_LIB/src/dsp_lib.c ****   default:
 281:../DSP_LIB/src/dsp_lib.c **** 	  return 0;
 282:../DSP_LIB/src/dsp_lib.c **** 	  break;
 283:../DSP_LIB/src/dsp_lib.c ****   }
 284:../DSP_LIB/src/dsp_lib.c ****    return 1;
 285:../DSP_LIB/src/dsp_lib.c **** }
 286:../DSP_LIB/src/dsp_lib.c **** 
 287:../DSP_LIB/src/dsp_lib.c **** /*
 288:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
 289:../DSP_LIB/src/dsp_lib.c ****    5. EXPORTED FUNCTIONS
 290:../DSP_LIB/src/dsp_lib.c **** ==============================================================================
 291:../DSP_LIB/src/dsp_lib.c ****  */
 292:../DSP_LIB/src/dsp_lib.c **** 
 293:../DSP_LIB/src/dsp_lib.c **** /*-------------------------- fft_init() ------------------------------------*/
 294:../DSP_LIB/src/dsp_lib.c **** uint8_t fft_window_gen(FFT_Window_Struct_t *fft_window)
 295:../DSP_LIB/src/dsp_lib.c **** {
  33              	 .loc 1 295 0
  34              	 .cfi_startproc
  35              	 
  36              	 
  37              	.LVL0:
  38 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
  39              	.LCFI0:
  40              	 .cfi_def_cfa_offset 36
  41              	 .cfi_offset 4,-36
  42              	 .cfi_offset 5,-32
  43              	 .cfi_offset 6,-28
  44              	 .cfi_offset 7,-24
  45              	 .cfi_offset 8,-20
  46              	 .cfi_offset 9,-16
  47              	 .cfi_offset 10,-12
  48              	 .cfi_offset 11,-8
  49              	 .cfi_offset 14,-4
  50 0004 2DED088B 	 fstmfdd sp!,{d8,d9,d10,d11}
  51              	.LCFI1:
  52              	 .cfi_def_cfa_offset 68
  53              	 .cfi_offset 80,-68
  54              	 .cfi_offset 81,-64
  55              	 .cfi_offset 82,-60
  56              	 .cfi_offset 83,-56
  57              	 .cfi_offset 84,-52
  58              	 .cfi_offset 85,-48
  59              	 .cfi_offset 86,-44
  60              	 .cfi_offset 87,-40
 296:../DSP_LIB/src/dsp_lib.c ****   if ((fft_window->fft_window_buffer == NULL) ||
  61              	 .loc 1 296 0
  62 0008 D0F80CA0 	 ldr r10,[r0,#12]
 295:../DSP_LIB/src/dsp_lib.c ****   if ((fft_window->fft_window_buffer == NULL) ||
  63              	 .loc 1 295 0
  64 000c 87B0     	 sub sp,sp,#28
  65              	.LCFI2:
  66              	 .cfi_def_cfa_offset 96
  67              	 .loc 1 296 0
  68 000e BAF1000F 	 cmp r10,#0
  69 0012 1BD0     	 beq .L37
 297:../DSP_LIB/src/dsp_lib.c **** 	   (fft_window->fft_window_length == 0) ||
  70              	 .loc 1 297 0 discriminator 1
  71 0014 D0F80490 	 ldr r9,[r0,#4]
 296:../DSP_LIB/src/dsp_lib.c ****   if ((fft_window->fft_window_buffer == NULL) ||
  72              	 .loc 1 296 0 discriminator 1
  73 0018 09F1FF34 	 add r4,r9,#-1
  74 001c FF2C     	 cmp r4,#255
  75 001e 15D8     	 bhi .L37
 298:../DSP_LIB/src/dsp_lib.c **** 	   (fft_window->fft_window_length > MAX_FFT_WIN_LEN))
 299:../DSP_LIB/src/dsp_lib.c ****   {
 300:../DSP_LIB/src/dsp_lib.c ****     return 0;
 301:../DSP_LIB/src/dsp_lib.c ****   }
 302:../DSP_LIB/src/dsp_lib.c **** 
 303:../DSP_LIB/src/dsp_lib.c ****   switch (fft_window->fft_size)
  76              	 .loc 1 303 0
  77 0020 4388     	 ldrh r3,[r0,#2]
  78 0022 402B     	 cmp r3,#64
  79 0024 20D0     	 beq .L3
  80 0026 17D8     	 bhi .L4
  81 0028 102B     	 cmp r3,#16
  82 002a 20D0     	 beq .L5
  83 002c 202B     	 cmp r3,#32
  84 002e 0DD1     	 bne .L37
 304:../DSP_LIB/src/dsp_lib.c ****   {
 305:../DSP_LIB/src/dsp_lib.c ****   case FFT_SIZE_16:
 306:../DSP_LIB/src/dsp_lib.c **** 	  fft_window->fft_time_twiddle_table = &arm_cfft_sR_f32_len16;		/* as FFT_SIZE = 16 points */
 307:../DSP_LIB/src/dsp_lib.c **** 	  break;
 308:../DSP_LIB/src/dsp_lib.c **** 
 309:../DSP_LIB/src/dsp_lib.c ****   case FFT_SIZE_32:
 310:../DSP_LIB/src/dsp_lib.c **** 	  fft_window->fft_time_twiddle_table = &arm_cfft_sR_f32_len32;		/* as FFT_SIZE = 32 points */
  85              	 .loc 1 310 0
  86 0030 B14B     	 ldr r3,.L55+16
  87 0032 0361     	 str r3,[r0,#16]
  88              	.L9:
  89              	.LBB24:
  90              	.LBB25:
 262:../DSP_LIB/src/dsp_lib.c ****   {
  91              	 .loc 1 262 0
  92 0034 0378     	 ldrb r3,[r0]
  93              	.LBE25:
  94              	.LBE24:
 311:../DSP_LIB/src/dsp_lib.c **** 	  break;
 312:../DSP_LIB/src/dsp_lib.c **** 
 313:../DSP_LIB/src/dsp_lib.c ****   case FFT_SIZE_64:
 314:../DSP_LIB/src/dsp_lib.c **** 	  fft_window->fft_time_twiddle_table  = &arm_cfft_sR_f32_len64;		/* as FFT_SIZE = 64 points */
 315:../DSP_LIB/src/dsp_lib.c **** 	  break;
 316:../DSP_LIB/src/dsp_lib.c **** 
 317:../DSP_LIB/src/dsp_lib.c ****   case FFT_SIZE_128:
 318:../DSP_LIB/src/dsp_lib.c **** 	  fft_window->fft_time_twiddle_table  = &arm_cfft_sR_f32_len128;	/* as FFT_SIZE = 128 points */
 319:../DSP_LIB/src/dsp_lib.c **** 	  break;
 320:../DSP_LIB/src/dsp_lib.c **** 
 321:../DSP_LIB/src/dsp_lib.c ****   case FFT_SIZE_256:
 322:../DSP_LIB/src/dsp_lib.c **** 	  fft_window->fft_time_twiddle_table  = &arm_cfft_sR_f32_len256;	/* as FFT_SIZE = 256 points */
 323:../DSP_LIB/src/dsp_lib.c **** 	  break;
 324:../DSP_LIB/src/dsp_lib.c **** 
 325:../DSP_LIB/src/dsp_lib.c ****   default:
 326:../DSP_LIB/src/dsp_lib.c **** 	  return 0;
 327:../DSP_LIB/src/dsp_lib.c **** 	  break;
 328:../DSP_LIB/src/dsp_lib.c ****   }
 329:../DSP_LIB/src/dsp_lib.c **** 
 330:../DSP_LIB/src/dsp_lib.c ****   return(fft_window_init(fft_window->fft_window_type,fft_window->fft_window_length,
  95              	 .loc 1 330 0
  96 0036 D0ED027A 	 flds s15,[r0,#8]
  97              	.LVL1:
  98              	.LBB81:
  99              	.LBB79:
 262:../DSP_LIB/src/dsp_lib.c ****   {
 100              	 .loc 1 262 0
 101 003a 013B     	 subs r3,r3,#1
 102 003c 032B     	 cmp r3,#3
 103 003e 05D8     	 bhi .L37
 104 0040 DFE813F0 	 tbh [pc,r3,lsl#1]
 105              	.L11:
 106 0044 1D01     	 .2byte (.L10-.L11)/2
 107 0046 E700     	 .2byte (.L12-.L11)/2
 108 0048 7201     	 .2byte (.L13-.L11)/2
 109 004a 1B00     	 .2byte (.L14-.L11)/2
 110              	.LVL2:
 111              	 .p2align 1
 112              	.L37:
 281:../DSP_LIB/src/dsp_lib.c **** 	  break;
 113              	 .loc 1 281 0
 114 004c 0020     	 movs r0,#0
 115              	.LVL3:
 116              	.L2:
 117              	.LBE79:
 118              	.LBE81:
 331:../DSP_LIB/src/dsp_lib.c **** 		 fft_window->fft_chebyshev_at_dB, fft_window->fft_window_buffer));
 332:../DSP_LIB/src/dsp_lib.c **** }
 119              	 .loc 1 332 0
 120 004e 07B0     	 add sp,sp,#28
 121              	.LCFI3:
 122              	 .cfi_remember_state
 123              	 .cfi_def_cfa_offset 68
 124              	 
 125 0050 BDEC088B 	 fldmfdd sp!,{d8-d11}
 126              	.LCFI4:
 127              	 .cfi_restore 86
 128              	 .cfi_restore 87
 129              	 .cfi_restore 84
 130              	 .cfi_restore 85
 131              	 .cfi_restore 82
 132              	 .cfi_restore 83
 133              	 .cfi_restore 80
 134              	 .cfi_restore 81
 135              	 .cfi_def_cfa_offset 36
 136 0054 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 137              	.LVL4:
 138              	.L4:
 139              	.LCFI5:
 140              	 .cfi_restore_state
 303:../DSP_LIB/src/dsp_lib.c ****   {
 141              	 .loc 1 303 0
 142 0058 802B     	 cmp r3,#128
 143 005a 0BD0     	 beq .L7
 144 005c B3F5807F 	 cmp r3,#256
 145 0060 F4D1     	 bne .L37
 322:../DSP_LIB/src/dsp_lib.c **** 	  break;
 146              	 .loc 1 322 0
 147 0062 A64B     	 ldr r3,.L55+20
 148 0064 0361     	 str r3,[r0,#16]
 323:../DSP_LIB/src/dsp_lib.c **** 
 149              	 .loc 1 323 0
 150 0066 E5E7     	 b .L9
 151              	.L3:
 314:../DSP_LIB/src/dsp_lib.c **** 	  break;
 152              	 .loc 1 314 0
 153 0068 A54B     	 ldr r3,.L55+24
 154 006a 0361     	 str r3,[r0,#16]
 315:../DSP_LIB/src/dsp_lib.c **** 
 155              	 .loc 1 315 0
 156 006c E2E7     	 b .L9
 157              	.L5:
 306:../DSP_LIB/src/dsp_lib.c **** 	  break;
 158              	 .loc 1 306 0
 159 006e A54B     	 ldr r3,.L55+28
 160 0070 0361     	 str r3,[r0,#16]
 307:../DSP_LIB/src/dsp_lib.c **** 
 161              	 .loc 1 307 0
 162 0072 DFE7     	 b .L9
 163              	.L7:
 318:../DSP_LIB/src/dsp_lib.c **** 	  break;
 164              	 .loc 1 318 0
 165 0074 A44B     	 ldr r3,.L55+32
 166 0076 0361     	 str r3,[r0,#16]
 319:../DSP_LIB/src/dsp_lib.c **** 
 167              	 .loc 1 319 0
 168 0078 DCE7     	 b .L9
 169              	.LVL5:
 170              	.L14:
 171              	.LBB82:
 172              	.LBB80:
 173              	.LBB26:
 174              	.LBB27:
 192:../DSP_LIB/src/dsp_lib.c ****   {
 175              	 .loc 1 192 0
 176 007a B9F1010F 	 cmp r9,#1
 177 007e 00F0DC81 	 beq .L52
 178              	.LBB28:
 198:../DSP_LIB/src/dsp_lib.c ****     float alpha = coshf((1.0f / (float)(window_size - 1)) * acoshf(pssbnd_ripple));
 179              	 .loc 1 198 0
 180 0082 B3EE047A 	 fconsts s14,#52
 181 0086 C7EE877A 	 fdivs s15,s15,s14
 182              	.LVL6:
 183 008a A048     	 ldr r0,.L55+36
 184              	.LVL7:
 185              	.LBB29:
 208:../DSP_LIB/src/dsp_lib.c ****     {
 186              	 .loc 1 208 0
 187 008c 9FEDA0BA 	 flds s22,.L55+40
 188              	.LBE29:
 198:../DSP_LIB/src/dsp_lib.c ****     float alpha = coshf((1.0f / (float)(window_size - 1)) * acoshf(pssbnd_ripple));
 189              	 .loc 1 198 0
 190 0090 17EE901A 	 fmrs r1,s15
 191 0094 FFF7FEFF 	 bl powf
 192              	.LVL8:
 199:../DSP_LIB/src/dsp_lib.c ****     float win_even = (float)((window_size - 1) / 2);
 193              	 .loc 1 199 0
 194 0098 07EE904A 	 fmsr s15,r4
 195 009c B8EEE7AA 	 fsitos s20,s15
 198:../DSP_LIB/src/dsp_lib.c ****     float alpha = coshf((1.0f / (float)(window_size - 1)) * acoshf(pssbnd_ripple));
 196              	 .loc 1 198 0
 197 00a0 0BEE900A 	 fmsr s23,r0
 198              	.LVL9:
 199:../DSP_LIB/src/dsp_lib.c ****     float win_even = (float)((window_size - 1) / 2);
 199              	 .loc 1 199 0
 200 00a4 FFF7FEFF 	 bl acoshf
 201              	.LVL10:
 202 00a8 F7EE007A 	 fconsts s15,#112
 203 00ac C7EE8A7A 	 fdivs s15,s15,s20
 200:../DSP_LIB/src/dsp_lib.c **** 
 204              	 .loc 1 200 0
 205 00b0 6408     	 lsrs r4,r4,#1
 199:../DSP_LIB/src/dsp_lib.c ****     float win_even = (float)((window_size - 1) / 2);
 206              	 .loc 1 199 0
 207 00b2 07EE100A 	 fmsr s14,r0
 208 00b6 67EE877A 	 fmuls s15,s15,s14
 209              	.LBB51:
 210              	.LBB30:
 211              	.LBB31:
 213:../DSP_LIB/src/dsp_lib.c ****       {
 212              	 .loc 1 213 0
 213 00ba F7EE009A 	 fconsts s19,#112
 214              	.LBE31:
 215              	.LBE30:
 216              	.LBE51:
 199:../DSP_LIB/src/dsp_lib.c ****     float win_even = (float)((window_size - 1) / 2);
 217              	 .loc 1 199 0
 218 00be 17EE900A 	 fmrs r0,s15
 219 00c2 FFF7FEFF 	 bl coshf
 220              	.LVL11:
 200:../DSP_LIB/src/dsp_lib.c **** 
 221              	 .loc 1 200 0
 222 00c6 07EE904A 	 fmsr s15,r4
 223              	.LBB52:
 208:../DSP_LIB/src/dsp_lib.c ****     {
 224              	 .loc 1 208 0
 225 00ca 4FEA5903 	 lsr r3,r9,#1
 226              	.LBE52:
 202:../DSP_LIB/src/dsp_lib.c ****     {
 227              	 .loc 1 202 0
 228 00ce 19F0010F 	 tst r9,#1
 229 00d2 4FEA8902 	 lsl r2,r9,#2
 200:../DSP_LIB/src/dsp_lib.c **** 
 230              	 .loc 1 200 0
 231 00d6 B8EEE78A 	 fsitos s16,s15
 232              	.LBB53:
 208:../DSP_LIB/src/dsp_lib.c ****     {
 233              	 .loc 1 208 0
 234 00da 03F10103 	 add r3,r3,#1
 235              	.LBE53:
 204:../DSP_LIB/src/dsp_lib.c ****     }
 236              	 .loc 1 204 0
 237 00de 08BF     	 it eq
 238 00e0 F6EE007A 	 fconstseq s15,#96
 239              	.LBB54:
 208:../DSP_LIB/src/dsp_lib.c ****     {
 240              	 .loc 1 208 0
 241 00e4 0293     	 str r3,[sp,#8]
 242 00e6 0AEB0203 	 add r3,r10,r2
 243 00ea 0093     	 str r3,[sp]
 244              	.LBE54:
 199:../DSP_LIB/src/dsp_lib.c ****     float win_even = (float)((window_size - 1) / 2);
 245              	 .loc 1 199 0
 246 00ec 0AEE900A 	 fmsr s21,r0
 247              	.LVL12:
 248              	.LBB55:
 208:../DSP_LIB/src/dsp_lib.c ****     {
 249              	 .loc 1 208 0
 250 00f0 4FF00003 	 mov r3,#0
 251              	.LBE55:
 204:../DSP_LIB/src/dsp_lib.c ****     }
 252              	 .loc 1 204 0
 253 00f4 08BF     	 it eq
 254 00f6 38EE278A 	 faddseq s16,s16,s15
 255              	.LVL13:
 256              	.LBB56:
 257              	.LBB46:
 258              	.LBB41:
 213:../DSP_LIB/src/dsp_lib.c ****       {
 259              	 .loc 1 213 0
 260 00fa CDF80C90 	 str r9,[sp,#12]
 261 00fe 0492     	 str r2,[sp,#16]
 262 0100 CDF814A0 	 str r10,[sp,#20]
 263 0104 9946     	 mov r9,r3
 264              	.LVL14:
 265 0106 CDF804A0 	 str r10,[sp,#4]
 266              	.LVL15:
 267              	.L32:
 268              	.LBE41:
 210:../DSP_LIB/src/dsp_lib.c ****       float sum = 0;
 269              	 .loc 1 210 0
 270 010a 07EE909A 	 fmsr s15,r9
 271              	.LBB42:
 213:../DSP_LIB/src/dsp_lib.c ****       {
 272              	 .loc 1 213 0
 273 010e B4EEE98A 	 fcmpes s16,s19
 274              	.LBE42:
 210:../DSP_LIB/src/dsp_lib.c ****       float sum = 0;
 275              	 .loc 1 210 0
 276 0112 B8EEE79A 	 fsitos s18,s15
 277              	.LBB43:
 213:../DSP_LIB/src/dsp_lib.c ****       {
 278              	 .loc 1 213 0
 279 0116 F1EE10FA 	 fmstat
 280              	.LBE43:
 210:../DSP_LIB/src/dsp_lib.c ****       float sum = 0;
 281              	 .loc 1 210 0
 282 011a 39EE489A 	 fsubs s18,s18,s16
 283              	.LVL16:
 284              	.LBB44:
 213:../DSP_LIB/src/dsp_lib.c ****       {
 285              	 .loc 1 213 0
 286 011e C0F29281 	 blt .L48
 287 0122 039C     	 ldr r4,[sp,#12]
 288 0124 DFED7A8A 	 flds s17,.L55+40
 289 0128 2046     	 mov r0,r4
 290 012a FFF7FEFF 	 bl __aeabi_ui2d
 291              	.LVL17:
 292 012e 79EE097A 	 fadds s15,s18,s18
 293 0132 8246     	 mov r10,r0
 294 0134 17EE905A 	 fmrs r5,s15
 295 0138 07EE904A 	 fmsr s15,r4
 296 013c F8EEE77A 	 fsitos s15,s15
 297 0140 8B46     	 mov fp,r1
 298 0142 17EE908A 	 fmrs r8,s15
 299 0146 0124     	 movs r4,#1
 300 0148 37E0     	 b .L29
 301              	.LVL18:
 302              	.L49:
 303              	.LBB32:
 304              	.LBB33:
 305              	.LBB34:
 248:../DSP_LIB/src/dsp_lib.c ****   }
 306              	 .loc 1 248 0
 307 014a FFF7FEFF 	 bl acoshf
 308              	.LVL19:
 309 014e 07EE900A 	 fmsr s15,r0
 310 0152 6AEE277A 	 fmuls s15,s20,s15
 311 0156 17EE900A 	 fmrs r0,s15
 312 015a FFF7FEFF 	 bl coshf
 313              	.LVL20:
 314 015e 09EE100A 	 fmsr s18,r0
 315              	.LVL21:
 316              	.L28:
 317              	.LBE34:
 318              	.LBE33:
 217:../DSP_LIB/src/dsp_lib.c ****       }
 319              	 .loc 1 217 0
 320 0162 2846     	 mov r0,r5
 321              	.LVL22:
 322 0164 FFF7FEFF 	 bl __aeabi_f2d
 323              	.LVL23:
 324 0168 5FA3     	 adr r3,.L55
 325 016a D3E90023 	 ldrd r2,[r3]
 326 016e FFF7FEFF 	 bl __aeabi_dmul
 327              	.LVL24:
 328 0172 0246     	 mov r2,r0
 329 0174 0B46     	 mov r3,r1
 330 0176 3046     	 mov r0,r6
 331 0178 3946     	 mov r1,r7
 332 017a FFF7FEFF 	 bl __aeabi_dmul
 333              	.LVL25:
 334 017e 0646     	 mov r6,r0
 335 0180 4046     	 mov r0,r8
 336 0182 0F46     	 mov r7,r1
 337 0184 FFF7FEFF 	 bl __aeabi_f2d
 338              	.LVL26:
 339 0188 0246     	 mov r2,r0
 340 018a 0B46     	 mov r3,r1
 341 018c 3046     	 mov r0,r6
 342 018e 3946     	 mov r1,r7
 343 0190 FFF7FEFF 	 bl __aeabi_ddiv
 344              	.LVL27:
 345 0194 FFF7FEFF 	 bl __aeabi_d2f
 346              	.LVL28:
 347              	.LBE32:
 213:../DSP_LIB/src/dsp_lib.c ****       {
 348              	 .loc 1 213 0
 349 0198 0134     	 adds r4,r4,#1
 350              	.LVL29:
 351              	.LBB37:
 217:../DSP_LIB/src/dsp_lib.c ****       }
 352              	 .loc 1 217 0
 353 019a FFF7FEFF 	 bl arm_cos_f32
 354              	.LVL30:
 355              	.LBE37:
 213:../DSP_LIB/src/dsp_lib.c ****       {
 356              	 .loc 1 213 0
 357 019e 07EE904A 	 fmsr s15,r4
 358 01a2 F8EE677A 	 fuitos s15,s15
 359              	.LBB38:
 217:../DSP_LIB/src/dsp_lib.c ****       }
 360              	 .loc 1 217 0
 361 01a6 07EE100A 	 fmsr s14,r0
 362              	.LBE38:
 213:../DSP_LIB/src/dsp_lib.c ****       {
 363              	 .loc 1 213 0
 364 01aa B4EEE78A 	 fcmpes s16,s15
 365 01ae F1EE10FA 	 fmstat
 366              	.LBB39:
 217:../DSP_LIB/src/dsp_lib.c ****       }
 367              	 .loc 1 217 0
 368 01b2 E7EE098A 	 vfma.f32 s17,s14,s18
 369              	.LVL31:
 370              	.LBE39:
 213:../DSP_LIB/src/dsp_lib.c ****       {
 371              	 .loc 1 213 0
 372 01b6 C0F21681 	 blt .L54
 373              	.LVL32:
 374              	.L29:
 375              	.LBB40:
 215:../DSP_LIB/src/dsp_lib.c ****        	float res = cheby_poly( window_size - 1, poly_order);
 376              	 .loc 1 215 0
 377 01ba 2046     	 mov r0,r4
 378 01bc FFF7FEFF 	 bl __aeabi_ui2d
 379              	.LVL33:
 380 01c0 49A3     	 adr r3,.L55
 381 01c2 D3E90023 	 ldrd r2,[r3]
 382 01c6 0646     	 mov r6,r0
 383 01c8 0F46     	 mov r7,r1
 384 01ca FFF7FEFF 	 bl __aeabi_dmul
 385              	.LVL34:
 386 01ce 5246     	 mov r2,r10
 387 01d0 5B46     	 mov r3,fp
 388 01d2 FFF7FEFF 	 bl __aeabi_ddiv
 389              	.LVL35:
 390 01d6 FFF7FEFF 	 bl __aeabi_d2f
 391              	.LVL36:
 392 01da FFF7FEFF 	 bl arm_cos_f32
 393              	.LVL37:
 394 01de 07EE900A 	 fmsr s15,r0
 395 01e2 6AEEA77A 	 fmuls s15,s21,s15
 396              	.LVL38:
 397              	.LBB36:
 398              	.LBB35:
 242:../DSP_LIB/src/dsp_lib.c ****   {
 399              	 .loc 1 242 0
 400 01e6 B0EEE77A 	 fabss s14,s15
 401 01ea B4EEE97A 	 fcmpes s14,s19
 402 01ee F1EE10FA 	 fmstat
 248:../DSP_LIB/src/dsp_lib.c ****   }
 403              	 .loc 1 248 0
 404 01f2 17EE900A 	 fmrs r0,s15
 242:../DSP_LIB/src/dsp_lib.c ****   {
 405              	 .loc 1 242 0
 406 01f6 A8D8     	 bhi .L49
 244:../DSP_LIB/src/dsp_lib.c ****   }
 407              	 .loc 1 244 0
 408 01f8 FFF7FEFF 	 bl acosf
 409              	.LVL39:
 410 01fc 07EE900A 	 fmsr s15,r0
 411 0200 6AEE277A 	 fmuls s15,s20,s15
 412 0204 17EE900A 	 fmrs r0,s15
 413 0208 FFF7FEFF 	 bl arm_cos_f32
 414              	.LVL40:
 415 020c 09EE100A 	 fmsr s18,r0
 416              	.LVL41:
 417 0210 A7E7     	 b .L28
 418              	.LVL42:
 419              	.L12:
 420              	.LBE35:
 421              	.LBE36:
 422              	.LBE40:
 423              	.LBE44:
 424              	.LBE46:
 425              	.LBE56:
 426              	.LBE28:
 427              	.LBE27:
 428              	.LBE26:
 429              	.LBB64:
 430              	.LBB65:
 150:../DSP_LIB/src/dsp_lib.c ****   {
 431              	 .loc 1 150 0
 432 0212 B9F1010F 	 cmp r9,#1
 433 0216 00F01081 	 beq .L52
 434 021a 07EE904A 	 fmsr s15,r4
 435              	.LVL43:
 436 021e F8EEE77A 	 fsitos s15,s15
 437 0222 5546     	 mov r5,r10
 438 0224 17EE900A 	 fmrs r0,s15
 439              	.LVL44:
 440 0228 FFF7FEFF 	 bl __aeabi_f2d
 441              	.LVL45:
 442 022c 0024     	 movs r4,#0
 443 022e 0646     	 mov r6,r0
 444 0230 0F46     	 mov r7,r1
 445              	.LBB66:
 158:../DSP_LIB/src/dsp_lib.c ****     }
 446              	 .loc 1 158 0
 447 0232 F7EE008A 	 fconsts s17,#112
 448 0236 B6EE008A 	 fconsts s16,#96
 449              	.L18:
 450              	.LVL46:
 451 023a 07EE904A 	 fmsr s15,r4
 452 023e F8EEE77A 	 fsitos s15,s15
 156:../DSP_LIB/src/dsp_lib.c ****     {
 453              	 .loc 1 156 0
 454 0242 0134     	 adds r4,r4,#1
 455              	.LVL47:
 158:../DSP_LIB/src/dsp_lib.c ****     }
 456              	 .loc 1 158 0
 457 0244 17EE900A 	 fmrs r0,s15
 458 0248 FFF7FEFF 	 bl __aeabi_f2d
 459              	.LVL48:
 460 024c 28A3     	 adr r3,.L55+8
 461 024e D3E90023 	 ldrd r2,[r3]
 462 0252 FFF7FEFF 	 bl __aeabi_dmul
 463              	.LVL49:
 464 0256 3246     	 mov r2,r6
 465 0258 3B46     	 mov r3,r7
 466 025a FFF7FEFF 	 bl __aeabi_ddiv
 467              	.LVL50:
 468 025e FFF7FEFF 	 bl __aeabi_d2f
 469              	.LVL51:
 470 0262 FFF7FEFF 	 bl arm_cos_f32
 471              	.LVL52:
 472 0266 07EE900A 	 fmsr s15,r0
 473 026a 78EEE77A 	 fsubs s15,s17,s15
 156:../DSP_LIB/src/dsp_lib.c ****     {
 474              	 .loc 1 156 0
 475 026e 4C45     	 cmp r4,r9
 158:../DSP_LIB/src/dsp_lib.c ****     }
 476              	 .loc 1 158 0
 477 0270 67EE887A 	 fmuls s15,s15,s16
 478 0274 E5EC017A 	 fstmias r5!,{s15}
 156:../DSP_LIB/src/dsp_lib.c ****     {
 479              	 .loc 1 156 0
 480 0278 DFD1     	 bne .L18
 481              	.LVL53:
 482              	.L19:
 483              	.LBE66:
 484              	.LBE65:
 485              	.LBE64:
 265:../DSP_LIB/src/dsp_lib.c **** 	  break;
 486              	 .loc 1 265 0
 487 027a 0120     	 movs r0,#1
 488 027c E7E6     	 b .L2
 489              	.LVL54:
 490              	.L10:
 491              	.LBB67:
 492              	.LBB68:
 132:../DSP_LIB/src/dsp_lib.c ****   {
 493              	 .loc 1 132 0
 494 027e B9F1010F 	 cmp r9,#1
 495 0282 00F0DA80 	 beq .L52
 496 0286 07EE904A 	 fmsr s15,r4
 497              	.LVL55:
 498 028a F8EEE77A 	 fsitos s15,s15
 499              	.LBB69:
 140:../DSP_LIB/src/dsp_lib.c ****     }
 500              	 .loc 1 140 0
 501 028e DFED218A 	 flds s17,.L55+44
 502 0292 9FED218A 	 flds s16,.L55+48
 503 0296 17EE900A 	 fmrs r0,s15
 504              	.LVL56:
 505 029a FFF7FEFF 	 bl __aeabi_f2d
 506              	.LVL57:
 507 029e 5546     	 mov r5,r10
 508 02a0 0646     	 mov r6,r0
 509 02a2 0F46     	 mov r7,r1
 510              	.LBE69:
 132:../DSP_LIB/src/dsp_lib.c ****   {
 511              	 .loc 1 132 0
 512 02a4 0024     	 movs r4,#0
 513              	.L16:
 514              	.LVL58:
 515              	.LBB70:
 140:../DSP_LIB/src/dsp_lib.c ****     }
 516              	 .loc 1 140 0
 517 02a6 07EE904A 	 fmsr s15,r4
 518 02aa F8EEE77A 	 fsitos s15,s15
 138:../DSP_LIB/src/dsp_lib.c ****     {
 519              	 .loc 1 138 0
 520 02ae 0134     	 adds r4,r4,#1
 521              	.LVL59:
 140:../DSP_LIB/src/dsp_lib.c ****     }
 522              	 .loc 1 140 0
 523 02b0 17EE900A 	 fmrs r0,s15
 524 02b4 FFF7FEFF 	 bl __aeabi_f2d
 525              	.LVL60:
 526 02b8 0DA3     	 adr r3,.L55+8
 527 02ba D3E90023 	 ldrd r2,[r3]
 528 02be FFF7FEFF 	 bl __aeabi_dmul
 529              	.LVL61:
 530 02c2 3246     	 mov r2,r6
 531 02c4 3B46     	 mov r3,r7
 532 02c6 FFF7FEFF 	 bl __aeabi_ddiv
 533              	.LVL62:
 534 02ca FFF7FEFF 	 bl __aeabi_d2f
 535              	.LVL63:
 536 02ce FFF7FEFF 	 bl arm_cos_f32
 537              	.LVL64:
 538 02d2 07EE100A 	 fmsr s14,r0
 539 02d6 F0EE487A 	 fcpys s15,s16
 540 02da E7EE687A 	 vfms.f32 s15,s14,s17
 138:../DSP_LIB/src/dsp_lib.c ****     {
 541              	 .loc 1 138 0
 542 02de 4C45     	 cmp r4,r9
 140:../DSP_LIB/src/dsp_lib.c ****     }
 543              	 .loc 1 140 0
 544 02e0 E5EC017A 	 fstmias r5!,{s15}
 138:../DSP_LIB/src/dsp_lib.c ****     {
 545              	 .loc 1 138 0
 546 02e4 DFD1     	 bne .L16
 547 02e6 C8E7     	 b .L19
 548              	.L56:
 549              	 .align 3
 550              	.L55:
 551 02e8 182D4454 	 .word 1413754136
 552 02ec FB210940 	 .word 1074340347
 553 02f0 182D4454 	 .word 1413754136
 554 02f4 FB211940 	 .word 1075388923
 555 02f8 00000000 	 .word arm_cfft_sR_f32_len32
 556 02fc 00000000 	 .word arm_cfft_sR_f32_len256
 557 0300 00000000 	 .word arm_cfft_sR_f32_len64
 558 0304 00000000 	 .word arm_cfft_sR_f32_len16
 559 0308 00000000 	 .word arm_cfft_sR_f32_len128
 560 030c 00002041 	 .word 1092616192
 561 0310 00000000 	 .word 0
 562 0314 1F85EB3E 	 .word 1055622431
 563 0318 713D0A3F 	 .word 1057635697
 564 031c 2601FA3E 	 .word 1056571686
 565 0320 14AEB73E 	 .word 1052225044
 566 0324 B4AB103E 	 .word 1041279924
 567              	.LVL65:
 568              	.L13:
 569              	.LBE70:
 570              	.LBE68:
 571              	.LBE67:
 572              	.LBB71:
 573              	.LBB72:
 167:../DSP_LIB/src/dsp_lib.c ****   {
 574              	 .loc 1 167 0
 575 0328 B9F1010F 	 cmp r9,#1
 576 032c 00F08580 	 beq .L52
 577 0330 2046     	 mov r0,r4
 578              	.LVL66:
 579 0332 FFF7FEFF 	 bl __aeabi_ui2d
 580              	.LVL67:
 581              	.LBB73:
 582              	.LBB74:
 181:../DSP_LIB/src/dsp_lib.c ****                         + (a2 * arm_cos_f32( (4.0f * M_PI * (float)i) / (window_size - 1) ))
 583              	 .loc 1 181 0
 584 0336 5FED079A 	 flds s19,.L55+52
 585 033a 1FED079A 	 flds s18,.L55+56
 182:../DSP_LIB/src/dsp_lib.c ****                         - (a3 * arm_cos_f32( (6.0f * M_PI * (float)i) / (window_size - 1) ));
 586              	 .loc 1 182 0
 587 033e 5FED078A 	 flds s17,.L55+60
 588 0342 0446     	 mov r4,r0
 589 0344 0D46     	 mov r5,r1
 590              	.LBE74:
 591              	.LBE73:
 167:../DSP_LIB/src/dsp_lib.c ****   {
 592              	 .loc 1 167 0
 593 0346 4FF00008 	 mov r8,#0
 594              	.LVL68:
 595              	.L21:
 596              	.LBB76:
 597              	.LBB75:
 181:../DSP_LIB/src/dsp_lib.c ****                         + (a2 * arm_cos_f32( (4.0f * M_PI * (float)i) / (window_size - 1) ))
 598              	 .loc 1 181 0
 599 034a 07EE908A 	 fmsr s15,r8
 600 034e F8EEE77A 	 fsitos s15,s15
 178:../DSP_LIB/src/dsp_lib.c ****    {
 601              	 .loc 1 178 0
 602 0352 08F10108 	 add r8,r8,#1
 603              	.LVL69:
 181:../DSP_LIB/src/dsp_lib.c ****                         + (a2 * arm_cos_f32( (4.0f * M_PI * (float)i) / (window_size - 1) ))
 604              	 .loc 1 181 0
 605 0356 17EE900A 	 fmrs r0,s15
 606 035a FFF7FEFF 	 bl __aeabi_f2d
 607              	.LVL70:
 608 035e 3EA3     	 adr r3,.L57+8
 609 0360 D3E90023 	 ldrd r2,[r3]
 610 0364 0646     	 mov r6,r0
 611 0366 0F46     	 mov r7,r1
 612 0368 FFF7FEFF 	 bl __aeabi_dmul
 613              	.LVL71:
 614 036c 2246     	 mov r2,r4
 615 036e 2B46     	 mov r3,r5
 616 0370 FFF7FEFF 	 bl __aeabi_ddiv
 617              	.LVL72:
 618 0374 FFF7FEFF 	 bl __aeabi_d2f
 619              	.LVL73:
 620 0378 FFF7FEFF 	 bl arm_cos_f32
 621              	.LVL74:
 182:../DSP_LIB/src/dsp_lib.c ****                         - (a3 * arm_cos_f32( (6.0f * M_PI * (float)i) / (window_size - 1) ));
 622              	 .loc 1 182 0
 623 037c 38A3     	 adr r3,.L57+16
 624 037e D3E90023 	 ldrd r2,[r3]
 181:../DSP_LIB/src/dsp_lib.c ****                         + (a2 * arm_cos_f32( (4.0f * M_PI * (float)i) / (window_size - 1) ))
 625              	 .loc 1 181 0
 626 0382 08EE100A 	 fmsr s16,r0
 182:../DSP_LIB/src/dsp_lib.c ****                         - (a3 * arm_cos_f32( (6.0f * M_PI * (float)i) / (window_size - 1) ));
 627              	 .loc 1 182 0
 628 0386 3946     	 mov r1,r7
 629 0388 3046     	 mov r0,r6
 630 038a FFF7FEFF 	 bl __aeabi_dmul
 631              	.LVL75:
 632 038e 2246     	 mov r2,r4
 633 0390 2B46     	 mov r3,r5
 634 0392 FFF7FEFF 	 bl __aeabi_ddiv
 635              	.LVL76:
 636 0396 FFF7FEFF 	 bl __aeabi_d2f
 637              	.LVL77:
 638 039a FFF7FEFF 	 bl arm_cos_f32
 639              	.LVL78:
 181:../DSP_LIB/src/dsp_lib.c ****                         + (a2 * arm_cos_f32( (4.0f * M_PI * (float)i) / (window_size - 1) ))
 640              	 .loc 1 181 0
 641 039e F0EE497A 	 fcpys s15,s18
 642 03a2 E8EE697A 	 vfms.f32 s15,s16,s19
 183:../DSP_LIB/src/dsp_lib.c ****     }
 643              	 .loc 1 183 0
 644 03a6 30A3     	 adr r3,.L57+24
 645 03a8 D3E90023 	 ldrd r2,[r3]
 181:../DSP_LIB/src/dsp_lib.c ****                         + (a2 * arm_cos_f32( (4.0f * M_PI * (float)i) / (window_size - 1) ))
 646              	 .loc 1 181 0
 647 03ac B0EE678A 	 fcpys s16,s15
 182:../DSP_LIB/src/dsp_lib.c ****                         - (a3 * arm_cos_f32( (6.0f * M_PI * (float)i) / (window_size - 1) ));
 648              	 .loc 1 182 0
 649 03b0 07EE900A 	 fmsr s15,r0
 183:../DSP_LIB/src/dsp_lib.c ****     }
 650              	 .loc 1 183 0
 651 03b4 3946     	 mov r1,r7
 652 03b6 3046     	 mov r0,r6
 182:../DSP_LIB/src/dsp_lib.c ****                         - (a3 * arm_cos_f32( (6.0f * M_PI * (float)i) / (window_size - 1) ));
 653              	 .loc 1 182 0
 654 03b8 A7EEA88A 	 vfma.f32 s16,s15,s17
 183:../DSP_LIB/src/dsp_lib.c ****     }
 655              	 .loc 1 183 0
 656 03bc FFF7FEFF 	 bl __aeabi_dmul
 657              	.LVL79:
 658 03c0 2246     	 mov r2,r4
 659 03c2 2B46     	 mov r3,r5
 660 03c4 FFF7FEFF 	 bl __aeabi_ddiv
 661              	.LVL80:
 662 03c8 FFF7FEFF 	 bl __aeabi_d2f
 663              	.LVL81:
 664 03cc FFF7FEFF 	 bl arm_cos_f32
 665              	.LVL82:
 666 03d0 DFED1F7A 	 flds s15,.L57
 667 03d4 07EE100A 	 fmsr s14,r0
 668 03d8 A7EE678A 	 vfms.f32 s16,s14,s15
 178:../DSP_LIB/src/dsp_lib.c ****    {
 669              	 .loc 1 178 0
 670 03dc C845     	 cmp r8,r9
 180:../DSP_LIB/src/dsp_lib.c ****                         - (a1 * arm_cos_f32( (2.0f * M_PI * (float)i) / (window_size - 1) ))
 671              	 .loc 1 180 0
 672 03de AAEC018A 	 fstmias r10!,{s16}
 178:../DSP_LIB/src/dsp_lib.c ****    {
 673              	 .loc 1 178 0
 674 03e2 B2D1     	 bne .L21
 675 03e4 49E7     	 b .L19
 676              	.LVL83:
 677              	.L54:
 678 03e6 78EEA88A 	 fadds s17,s17,s17
 679              	.LVL84:
 680              	.L24:
 681              	.LBE75:
 682              	.LBE76:
 683              	.LBE72:
 684              	.LBE71:
 685              	.LBB77:
 686              	.LBB62:
 687              	.LBB60:
 688              	.LBB57:
 689              	.LBB47:
 220:../DSP_LIB/src/dsp_lib.c ****       window_buffer[window_size - j - 1] = window_buffer[j];
 690              	 .loc 1 220 0
 691 03ea 019A     	 ldr r2,[sp,#4]
 221:../DSP_LIB/src/dsp_lib.c **** 
 692              	 .loc 1 221 0
 693 03ec 009B     	 ldr r3,[sp]
 220:../DSP_LIB/src/dsp_lib.c ****       window_buffer[window_size - j - 1] = window_buffer[j];
 694              	 .loc 1 220 0
 695 03ee 7BEEA88A 	 fadds s17,s23,s17
 696              	.LBE47:
 208:../DSP_LIB/src/dsp_lib.c ****     {
 697              	 .loc 1 208 0
 698 03f2 09F10109 	 add r9,r9,#1
 699              	.LVL85:
 700              	.LBB48:
 220:../DSP_LIB/src/dsp_lib.c ****       window_buffer[window_size - j - 1] = window_buffer[j];
 701              	 .loc 1 220 0
 702 03f6 C2ED008A 	 fsts s17,[r2]
 221:../DSP_LIB/src/dsp_lib.c **** 
 703              	 .loc 1 221 0
 704 03fa 63ED018A 	 fstmdbs r3!,{s17}
 705 03fe 0093     	 str r3,[sp]
 223:../DSP_LIB/src/dsp_lib.c ****       {
 706              	 .loc 1 223 0
 707 0400 1346     	 mov r3,r2
 708 0402 F3EC017A 	 fldmias r3!,{s15}
 225:../DSP_LIB/src/dsp_lib.c ****       }
 709              	 .loc 1 225 0
 710 0406 B4EE67BA 	 fcmps s22,s15
 223:../DSP_LIB/src/dsp_lib.c ****       {
 711              	 .loc 1 223 0
 712 040a 0193     	 str r3,[sp,#4]
 713              	.LBE48:
 208:../DSP_LIB/src/dsp_lib.c ****     {
 714              	 .loc 1 208 0
 715 040c 029B     	 ldr r3,[sp,#8]
 716              	.LBB49:
 225:../DSP_LIB/src/dsp_lib.c ****       }
 717              	 .loc 1 225 0
 718 040e F1EE10FA 	 fmstat
 719 0412 48BF     	 it mi
 720 0414 B0EE67BA 	 fcpysmi s22,s15
 721              	.LVL86:
 722              	.LBE49:
 208:../DSP_LIB/src/dsp_lib.c ****     {
 723              	 .loc 1 208 0
 724 0418 9945     	 cmp r9,r3
 725 041a 7FF476AE 	 bne .L32
 726 041e DDF814A0 	 ldr r10,[sp,#20]
 727              	.LVL87:
 728 0422 049A     	 ldr r2,[sp,#16]
 729 0424 5346     	 mov r3,r10
 730 0426 5244     	 add r2,r2,r10
 731              	.LVL88:
 732              	.L33:
 733              	.LBE57:
 734              	.LBB58:
 231:../DSP_LIB/src/dsp_lib.c ****     }
 735              	 .loc 1 231 0
 736 0428 D3ED007A 	 flds s15,[r3]
 737 042c C7EE8B7A 	 fdivs s15,s15,s22
 738 0430 E3EC017A 	 fstmias r3!,{s15}
 229:../DSP_LIB/src/dsp_lib.c ****     {
 739              	 .loc 1 229 0
 740 0434 9342     	 cmp r3,r2
 741 0436 F7D1     	 bne .L33
 742 0438 1FE7     	 b .L19
 743              	.LVL89:
 744              	.L52:
 745              	.LBE58:
 746              	.LBE60:
 194:../DSP_LIB/src/dsp_lib.c ****   }
 747              	 .loc 1 194 0
 748 043a 4FF07E53 	 mov r3,#1065353216
 749              	.LBE62:
 750              	.LBE77:
 277:../DSP_LIB/src/dsp_lib.c **** 	  break;
 751              	 .loc 1 277 0
 752 043e 4846     	 mov r0,r9
 753              	.LVL90:
 754              	.LBB78:
 755              	.LBB63:
 194:../DSP_LIB/src/dsp_lib.c ****   }
 756              	 .loc 1 194 0
 757 0440 CAF80030 	 str r3,[r10]
 758              	.LVL91:
 759 0444 03E6     	 b .L2
 760              	.LVL92:
 761              	.L48:
 762              	.LBB61:
 763              	.LBB59:
 764              	.LBB50:
 765              	.LBB45:
 213:../DSP_LIB/src/dsp_lib.c ****       {
 766              	 .loc 1 213 0
 767 0446 DFED038A 	 flds s17,.L57+4
 768 044a CEE7     	 b .L24
 769              	.L58:
 770 044c AFF30080 	 .align 3
 771              	.L57:
 772 0450 795D3F3C 	 .word 1010785657
 773 0454 00000000 	 .word 0
 774 0458 182D4454 	 .word 1413754136
 775 045c FB211940 	 .word 1075388923
 776 0460 182D4454 	 .word 1413754136
 777 0464 FB212940 	 .word 1076437499
 778 0468 D221337F 	 .word 2134057426
 779 046c 7CD93240 	 .word 1077074300
 780              	.LBE45:
 781              	.LBE50:
 782              	.LBE59:
 783              	.LBE61:
 784              	.LBE63:
 785              	.LBE78:
 786              	.LBE80:
 787              	.LBE82:
 788              	 .cfi_endproc
 789              	.LFE535:
 791              	 .global __aeabi_dadd
 792              	 .section .text.compute_fft_signal,"ax",%progbits
 793              	 .align 2
 794              	 .global compute_fft_signal
 795              	 .thumb
 796              	 .thumb_func
 798              	compute_fft_signal:
 799              	.LFB536:
 333:../DSP_LIB/src/dsp_lib.c **** 
 334:../DSP_LIB/src/dsp_lib.c **** /*-------------------------- compute_fft_signal() --------------------------*/
 335:../DSP_LIB/src/dsp_lib.c **** void compute_fft_signal(FFT_Window_Struct_t fft_window, float* i_data, float* q_data, uint16_t Nd,
 336:../DSP_LIB/src/dsp_lib.c **** 		                uint16_t Nf, float if_scale, FFT_Input_t fft_type,
 337:../DSP_LIB/src/dsp_lib.c **** 						float* p_i_mean, float* p_q_mean, float* complex_fft_signal)
 338:../DSP_LIB/src/dsp_lib.c **** {
 800              	 .loc 1 338 0
 801              	 .cfi_startproc
 802              	 
 803              	 
 804              	.LVL93:
 805 0000 84B0     	 sub sp,sp,#16
 806              	.LCFI6:
 807              	 .cfi_def_cfa_offset 16
 808 0002 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 809              	.LCFI7:
 810              	 .cfi_def_cfa_offset 52
 811              	 .cfi_offset 4,-52
 812              	 .cfi_offset 5,-48
 813              	 .cfi_offset 6,-44
 814              	 .cfi_offset 7,-40
 815              	 .cfi_offset 8,-36
 816              	 .cfi_offset 9,-32
 817              	 .cfi_offset 10,-28
 818              	 .cfi_offset 11,-24
 819              	 .cfi_offset 14,-20
 820 0006 2DED028B 	 fstmfdd sp!,{d8}
 821              	.LCFI8:
 822              	 .cfi_def_cfa_offset 60
 823              	 .cfi_offset 80,-60
 824              	 .cfi_offset 81,-56
 825 000a 87B0     	 sub sp,sp,#28
 826              	.LCFI9:
 827              	 .cfi_def_cfa_offset 88
 828              	 .loc 1 338 0
 829 000c 12AC     	 add r4,sp,#72
 830 000e 84E80F00 	 stmia r4,{r0,r1,r2,r3}
 831 0012 1F9E     	 ldr r6,[sp,#124]
 339:../DSP_LIB/src/dsp_lib.c **** 	float i_mean = 0.0f;
 340:../DSP_LIB/src/dsp_lib.c **** 	float q_mean = 0.0f;
 341:../DSP_LIB/src/dsp_lib.c **** 	uint32_t idx;
 342:../DSP_LIB/src/dsp_lib.c **** 	float *fft_window_buffer = fft_window.fft_window_buffer;
 832              	 .loc 1 342 0
 833 0014 DDF854B0 	 ldr fp,[sp,#84]
 834              	.LVL94:
 338:../DSP_LIB/src/dsp_lib.c **** 	float i_mean = 0.0f;
 835              	 .loc 1 338 0
 836 0018 BDF86440 	 ldrh r4,[sp,#100]
 837 001c BDF86870 	 ldrh r7,[sp,#104]
 838 0020 9DED1B8A 	 flds s16,[sp,#108]
 839 0024 9DF87030 	 ldrb r3,[sp,#112]
 339:../DSP_LIB/src/dsp_lib.c **** 	float i_mean = 0.0f;
 840              	 .loc 1 339 0
 841 0028 0025     	 movs r5,#0
 842 002a 0495     	 str r5,[sp,#16]
 340:../DSP_LIB/src/dsp_lib.c **** 	uint32_t idx;
 843              	 .loc 1 340 0
 844 002c 0595     	 str r5,[sp,#20]
 343:../DSP_LIB/src/dsp_lib.c **** 
 344:../DSP_LIB/src/dsp_lib.c **** 	if (!complex_fft_signal)
 845              	 .loc 1 344 0
 846 002e 002E     	 cmp r6,#0
 847 0030 54D0     	 beq .L59
 345:../DSP_LIB/src/dsp_lib.c **** 		return;
 346:../DSP_LIB/src/dsp_lib.c **** 
 347:../DSP_LIB/src/dsp_lib.c **** 	if (!fft_window_buffer)
 848              	 .loc 1 347 0
 849 0032 BBF1000F 	 cmp fp,#0
 850 0036 51D0     	 beq .L59
 348:../DSP_LIB/src/dsp_lib.c **** 		return;
 349:../DSP_LIB/src/dsp_lib.c **** 
 350:../DSP_LIB/src/dsp_lib.c **** 	if (fft_type == FFT_INPUT_REAL_I)
 851              	 .loc 1 350 0
 852 0038 012B     	 cmp r3,#1
 853 003a 00F09880 	 beq .L96
 351:../DSP_LIB/src/dsp_lib.c **** 	{
 352:../DSP_LIB/src/dsp_lib.c **** 		/* Find the mean in i_data */
 353:../DSP_LIB/src/dsp_lib.c **** 		arm_mean_f32(i_data, Nd, &i_mean);
 354:../DSP_LIB/src/dsp_lib.c **** 
 355:../DSP_LIB/src/dsp_lib.c **** 		/* Interleaved (re = I & im = 0) samples as {re[0], im[0], re[1], im[1], ...} */
 356:../DSP_LIB/src/dsp_lib.c **** 		for (idx = 0; idx < Nd; idx++)
 357:../DSP_LIB/src/dsp_lib.c **** 		{
 358:../DSP_LIB/src/dsp_lib.c **** 			complex_fft_signal[2 * idx + 0] = 2.0 * (float)(i_data[idx] - i_mean) * if_scale * fft_window_bu
 359:../DSP_LIB/src/dsp_lib.c **** 			complex_fft_signal[2 * idx + 1] = 0;
 360:../DSP_LIB/src/dsp_lib.c **** 		}
 361:../DSP_LIB/src/dsp_lib.c **** 	}
 362:../DSP_LIB/src/dsp_lib.c **** 	else if (fft_type == FFT_INPUT_REAL_Q)
 854              	 .loc 1 362 0
 855 003e 022B     	 cmp r3,#2
 363:../DSP_LIB/src/dsp_lib.c **** 	{
 364:../DSP_LIB/src/dsp_lib.c **** 		/* Find the mean in q_data */
 365:../DSP_LIB/src/dsp_lib.c **** 		arm_mean_f32(q_data, Nd, &q_mean);
 856              	 .loc 1 365 0
 857 0040 1898     	 ldr r0,[sp,#96]
 858 0042 2146     	 mov r1,r4
 859 0044 05AA     	 add r2,sp,#20
 362:../DSP_LIB/src/dsp_lib.c **** 	{
 860              	 .loc 1 362 0
 861 0046 50D0     	 beq .L97
 366:../DSP_LIB/src/dsp_lib.c **** 
 367:../DSP_LIB/src/dsp_lib.c **** 		/* Interleaved (re = Q & im = 0) samples as {re[0], im[0], re[1], im[1], ...} */
 368:../DSP_LIB/src/dsp_lib.c **** 		for (idx = 0; idx < Nd; idx++)
 369:../DSP_LIB/src/dsp_lib.c **** 		{
 370:../DSP_LIB/src/dsp_lib.c **** 			complex_fft_signal[2 * idx + 0] = 2.0 * (float)(q_data[idx] - q_mean) * if_scale * fft_window_bu
 371:../DSP_LIB/src/dsp_lib.c **** 			complex_fft_signal[2 * idx + 1] = 0;
 372:../DSP_LIB/src/dsp_lib.c **** 		}
 373:../DSP_LIB/src/dsp_lib.c **** 	}
 374:../DSP_LIB/src/dsp_lib.c **** 	else
 375:../DSP_LIB/src/dsp_lib.c **** 	{
 376:../DSP_LIB/src/dsp_lib.c **** 		/* Find the mean in q_data */
 377:../DSP_LIB/src/dsp_lib.c **** 		arm_mean_f32(q_data, Nd, &q_mean);
 862              	 .loc 1 377 0
 863 0048 FFF7FEFF 	 bl arm_mean_f32
 864              	.LVL95:
 378:../DSP_LIB/src/dsp_lib.c **** 
 379:../DSP_LIB/src/dsp_lib.c **** 		/* Find the mean in i_data */
 380:../DSP_LIB/src/dsp_lib.c **** 		arm_mean_f32(i_data, Nd, &i_mean);
 865              	 .loc 1 380 0
 866 004c 1798     	 ldr r0,[sp,#92]
 867 004e 2146     	 mov r1,r4
 868 0050 04AA     	 add r2,sp,#16
 869 0052 FFF7FEFF 	 bl arm_mean_f32
 870              	.LVL96:
 381:../DSP_LIB/src/dsp_lib.c **** 
 382:../DSP_LIB/src/dsp_lib.c **** 		/* Interleaved (re = I & im = Q) samples as {re[0], im[0], re[1], im[1], ...} */
 383:../DSP_LIB/src/dsp_lib.c **** 		for (idx = 0; idx < Nd; idx++)
 871              	 .loc 1 383 0
 872 0056 2CB3     	 cbz r4,.L66
 873 0058 179A     	 ldr r2,[sp,#92]
 874 005a 9DED046A 	 flds s12,[sp,#16]
 875 005e DDED056A 	 flds s13,[sp,#20]
 876 0062 1899     	 ldr r1,[sp,#96]
 877 0064 02EB8405 	 add r5,r2,r4,lsl#2
 878 0068 3346     	 mov r3,r6
 879              	.LVL97:
 880              	.L71:
 384:../DSP_LIB/src/dsp_lib.c **** 		{
 385:../DSP_LIB/src/dsp_lib.c **** 			complex_fft_signal[2 * idx + 0] = (float)(i_data[idx] - i_mean) * if_scale * fft_window_buffer[i
 881              	 .loc 1 385 0 discriminator 3
 882 006a F2EC017A 	 fldmias r2!,{s15}
 883 006e 77EEC67A 	 fsubs s15,s15,s12
 884 0072 5846     	 mov r0,fp
 885 0074 27EE887A 	 fmuls s14,s15,s16
 886 0078 FBEC017A 	 fldmias fp!,{s15}
 887 007c 67EE277A 	 fmuls s15,s14,s15
 383:../DSP_LIB/src/dsp_lib.c **** 		{
 888              	 .loc 1 383 0 discriminator 3
 889 0080 AA42     	 cmp r2,r5
 890              	 .loc 1 385 0 discriminator 3
 891 0082 C3ED007A 	 fsts s15,[r3]
 386:../DSP_LIB/src/dsp_lib.c **** 			complex_fft_signal[2 * idx + 1] = (float)(q_data[idx] - q_mean) * if_scale * fft_window_buffer[i
 892              	 .loc 1 386 0 discriminator 3
 893 0086 F1EC017A 	 fldmias r1!,{s15}
 894 008a 90ED007A 	 flds s14,[r0]
 895 008e 77EEE67A 	 fsubs s15,s15,s13
 896 0092 03F10803 	 add r3,r3,#8
 897 0096 67EE887A 	 fmuls s15,s15,s16
 898 009a 67EE877A 	 fmuls s15,s15,s14
 899 009e 43ED017A 	 fsts s15,[r3,#-4]
 383:../DSP_LIB/src/dsp_lib.c **** 		{
 900              	 .loc 1 383 0 discriminator 3
 901 00a2 E2D1     	 bne .L71
 902              	.L66:
 903              	.LVL98:
 904              	.LBB83:
 387:../DSP_LIB/src/dsp_lib.c **** 		}
 388:../DSP_LIB/src/dsp_lib.c **** 	}
 389:../DSP_LIB/src/dsp_lib.c **** 
 390:../DSP_LIB/src/dsp_lib.c **** 	/* Zero Padding */
 391:../DSP_LIB/src/dsp_lib.c **** 	for (uint16_t idx = Nd; idx < Nf; idx++)
 905              	 .loc 1 391 0
 906 00a4 BC42     	 cmp r4,r7
 392:../DSP_LIB/src/dsp_lib.c **** 	{
 393:../DSP_LIB/src/dsp_lib.c **** 		complex_fft_signal[2 * idx + 0] = 0;
 907              	 .loc 1 393 0
 908 00a6 38BF     	 it cc
 909 00a8 0022     	 movcc r2,#0
 391:../DSP_LIB/src/dsp_lib.c **** 	{
 910              	 .loc 1 391 0
 911 00aa 07D2     	 bcs .L64
 912              	.L72:
 391:../DSP_LIB/src/dsp_lib.c **** 	{
 913              	 .loc 1 391 0 is_stmt 0 discriminator 3
 914 00ac 611C     	 adds r1,r4,#1
 915              	 .loc 1 393 0 is_stmt 1 discriminator 3
 916 00ae 06EBC403 	 add r3,r6,r4,lsl#3
 391:../DSP_LIB/src/dsp_lib.c **** 	{
 917              	 .loc 1 391 0 discriminator 3
 918 00b2 8CB2     	 uxth r4,r1
 919              	.LVL99:
 920 00b4 BC42     	 cmp r4,r7
 921              	 .loc 1 393 0 discriminator 3
 922 00b6 1A60     	 str r2,[r3]
 394:../DSP_LIB/src/dsp_lib.c **** 		complex_fft_signal[2 * idx + 1] = 0;
 923              	 .loc 1 394 0 discriminator 3
 924 00b8 5A60     	 str r2,[r3,#4]
 391:../DSP_LIB/src/dsp_lib.c **** 	{
 925              	 .loc 1 391 0 discriminator 3
 926 00ba F7D1     	 bne .L72
 927              	.L64:
 928              	.LBE83:
 395:../DSP_LIB/src/dsp_lib.c **** 	}
 396:../DSP_LIB/src/dsp_lib.c **** 
 397:../DSP_LIB/src/dsp_lib.c **** 	/* copy mean values into output pointers */
 398:../DSP_LIB/src/dsp_lib.c **** 	if ( p_i_mean )
 929              	 .loc 1 398 0
 930 00bc 1D9B     	 ldr r3,[sp,#116]
 931 00be 13B1     	 cbz r3,.L70
 932 00c0 1A46     	 mov r2,r3
 399:../DSP_LIB/src/dsp_lib.c **** 		*p_i_mean = i_mean;
 933              	 .loc 1 399 0
 934 00c2 049B     	 ldr r3,[sp,#16]
 935 00c4 1360     	 str r3,[r2]
 936              	.L70:
 400:../DSP_LIB/src/dsp_lib.c **** 
 401:../DSP_LIB/src/dsp_lib.c **** 	if ( p_q_mean )
 937              	 .loc 1 401 0
 938 00c6 1E9B     	 ldr r3,[sp,#120]
 939 00c8 13B1     	 cbz r3,.L73
 940 00ca 1A46     	 mov r2,r3
 402:../DSP_LIB/src/dsp_lib.c **** 		*p_q_mean = q_mean;
 941              	 .loc 1 402 0
 942 00cc 059B     	 ldr r3,[sp,#20]
 943 00ce 1360     	 str r3,[r2]
 944              	.L73:
 403:../DSP_LIB/src/dsp_lib.c **** 
 404:../DSP_LIB/src/dsp_lib.c **** 	/* Processing the floating-point complex FFT. */
 405:../DSP_LIB/src/dsp_lib.c **** 	arm_cfft_f32(fft_window.fft_time_twiddle_table, complex_fft_signal, 0, 1);
 945              	 .loc 1 405 0
 946 00d0 3146     	 mov r1,r6
 947 00d2 1698     	 ldr r0,[sp,#88]
 948 00d4 0022     	 movs r2,#0
 949 00d6 0123     	 movs r3,#1
 950 00d8 FFF7FEFF 	 bl arm_cfft_f32
 951              	.LVL100:
 952              	.L59:
 406:../DSP_LIB/src/dsp_lib.c **** }
 953              	 .loc 1 406 0
 954 00dc 07B0     	 add sp,sp,#28
 955              	.LCFI10:
 956              	 .cfi_remember_state
 957              	 .cfi_def_cfa_offset 60
 958              	 
 959 00de BDEC028B 	 fldmfdd sp!,{d8}
 960              	.LCFI11:
 961              	 .cfi_restore 80
 962              	 .cfi_restore 81
 963              	 .cfi_def_cfa_offset 52
 964 00e2 BDE8F04F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 965              	.LCFI12:
 966              	 .cfi_restore 14
 967              	 .cfi_restore 11
 968              	 .cfi_restore 10
 969              	 .cfi_restore 9
 970              	 .cfi_restore 8
 971              	 .cfi_restore 7
 972              	 .cfi_restore 6
 973              	 .cfi_restore 5
 974              	 .cfi_restore 4
 975              	 .cfi_def_cfa_offset 16
 976 00e6 04B0     	 add sp,sp,#16
 977              	.LCFI13:
 978              	 .cfi_def_cfa_offset 0
 979 00e8 7047     	 bx lr
 980              	.LVL101:
 981              	.L97:
 982              	.LCFI14:
 983              	 .cfi_restore_state
 365:../DSP_LIB/src/dsp_lib.c **** 
 984              	 .loc 1 365 0
 985 00ea FFF7FEFF 	 bl arm_mean_f32
 986              	.LVL102:
 368:../DSP_LIB/src/dsp_lib.c **** 		{
 987              	 .loc 1 368 0
 988 00ee 002C     	 cmp r4,#0
 989 00f0 D8D0     	 beq .L66
 990 00f2 18EE100A 	 fmrs r0,s16
 991 00f6 FFF7FEFF 	 bl __aeabi_f2d
 992              	.LVL103:
 371:../DSP_LIB/src/dsp_lib.c **** 		}
 993              	 .loc 1 371 0
 994 00fa 08EE105A 	 fmsr s16,r5
 995 00fe 189D     	 ldr r5,[sp,#96]
 996 0100 DDED058A 	 flds s17,[sp,#20]
 997 0104 0397     	 str r7,[sp,#12]
 998 0106 05EB8403 	 add r3,r5,r4,lsl#2
 999 010a B246     	 mov r10,r6
 1000 010c 1F96     	 str r6,[sp,#124]
 1001 010e 0193     	 str r3,[sp,#4]
 1002 0110 0294     	 str r4,[sp,#8]
 1003 0112 0646     	 mov r6,r0
 1004 0114 0F46     	 mov r7,r1
 1005              	.LVL104:
 1006              	.L68:
 370:../DSP_LIB/src/dsp_lib.c **** 			complex_fft_signal[2 * idx + 1] = 0;
 1007              	 .loc 1 370 0 discriminator 3
 1008 0116 F5EC017A 	 fldmias r5!,{s15}
 1009 011a 5BF8044B 	 ldr r4,[fp],#4
 1010 011e 77EEE87A 	 fsubs s15,s15,s17
 1011 0122 0AF1080A 	 add r10,r10,#8
 1012 0126 17EE900A 	 fmrs r0,s15
 1013 012a FFF7FEFF 	 bl __aeabi_f2d
 1014              	.LVL105:
 1015 012e 0246     	 mov r2,r0
 1016 0130 0B46     	 mov r3,r1
 1017 0132 FFF7FEFF 	 bl __aeabi_dadd
 1018              	.LVL106:
 1019 0136 3246     	 mov r2,r6
 1020 0138 3B46     	 mov r3,r7
 1021 013a FFF7FEFF 	 bl __aeabi_dmul
 1022              	.LVL107:
 1023 013e 8046     	 mov r8,r0
 1024 0140 2046     	 mov r0,r4
 1025 0142 8946     	 mov r9,r1
 1026 0144 FFF7FEFF 	 bl __aeabi_f2d
 1027              	.LVL108:
 1028 0148 0B46     	 mov r3,r1
 1029 014a 0246     	 mov r2,r0
 1030 014c 4946     	 mov r1,r9
 1031 014e 4046     	 mov r0,r8
 1032 0150 FFF7FEFF 	 bl __aeabi_dmul
 1033              	.LVL109:
 1034 0154 FFF7FEFF 	 bl __aeabi_d2f
 1035              	.LVL110:
 368:../DSP_LIB/src/dsp_lib.c **** 		{
 1036              	 .loc 1 368 0 discriminator 3
 1037 0158 019B     	 ldr r3,[sp,#4]
 371:../DSP_LIB/src/dsp_lib.c **** 		}
 1038              	 .loc 1 371 0 discriminator 3
 1039 015a 0AED018A 	 fsts s16,[r10,#-4]
 368:../DSP_LIB/src/dsp_lib.c **** 		{
 1040              	 .loc 1 368 0 discriminator 3
 1041 015e 9D42     	 cmp r5,r3
 370:../DSP_LIB/src/dsp_lib.c **** 			complex_fft_signal[2 * idx + 1] = 0;
 1042              	 .loc 1 370 0 discriminator 3
 1043 0160 4AF8080C 	 str r0,[r10,#-8]
 368:../DSP_LIB/src/dsp_lib.c **** 		{
 1044              	 .loc 1 368 0 discriminator 3
 1045 0164 D7D1     	 bne .L68
 1046              	.L95:
 1047 0166 029C     	 ldr r4,[sp,#8]
 1048 0168 039F     	 ldr r7,[sp,#12]
 1049 016a 1F9E     	 ldr r6,[sp,#124]
 1050 016c 9AE7     	 b .L66
 1051              	.LVL111:
 1052              	.L96:
 353:../DSP_LIB/src/dsp_lib.c **** 
 1053              	 .loc 1 353 0
 1054 016e 1798     	 ldr r0,[sp,#92]
 1055 0170 2146     	 mov r1,r4
 1056 0172 04AA     	 add r2,sp,#16
 1057 0174 FFF7FEFF 	 bl arm_mean_f32
 1058              	.LVL112:
 356:../DSP_LIB/src/dsp_lib.c **** 		{
 1059              	 .loc 1 356 0
 1060 0178 002C     	 cmp r4,#0
 1061 017a 93D0     	 beq .L66
 1062 017c 18EE100A 	 fmrs r0,s16
 1063 0180 FFF7FEFF 	 bl __aeabi_f2d
 1064              	.LVL113:
 359:../DSP_LIB/src/dsp_lib.c **** 		}
 1065              	 .loc 1 359 0
 1066 0184 08EE105A 	 fmsr s16,r5
 1067 0188 179D     	 ldr r5,[sp,#92]
 1068 018a DDED048A 	 flds s17,[sp,#16]
 1069 018e 0397     	 str r7,[sp,#12]
 1070 0190 05EB8403 	 add r3,r5,r4,lsl#2
 1071 0194 B246     	 mov r10,r6
 1072 0196 1F96     	 str r6,[sp,#124]
 1073 0198 0193     	 str r3,[sp,#4]
 1074 019a 0294     	 str r4,[sp,#8]
 1075 019c 0646     	 mov r6,r0
 1076 019e 0F46     	 mov r7,r1
 1077              	.LVL114:
 1078              	.L65:
 358:../DSP_LIB/src/dsp_lib.c **** 			complex_fft_signal[2 * idx + 1] = 0;
 1079              	 .loc 1 358 0 discriminator 3
 1080 01a0 F5EC017A 	 fldmias r5!,{s15}
 1081 01a4 5BF8044B 	 ldr r4,[fp],#4
 1082 01a8 77EEE87A 	 fsubs s15,s15,s17
 1083 01ac 0AF1080A 	 add r10,r10,#8
 1084 01b0 17EE900A 	 fmrs r0,s15
 1085 01b4 FFF7FEFF 	 bl __aeabi_f2d
 1086              	.LVL115:
 1087 01b8 0246     	 mov r2,r0
 1088 01ba 0B46     	 mov r3,r1
 1089 01bc FFF7FEFF 	 bl __aeabi_dadd
 1090              	.LVL116:
 1091 01c0 3246     	 mov r2,r6
 1092 01c2 3B46     	 mov r3,r7
 1093 01c4 FFF7FEFF 	 bl __aeabi_dmul
 1094              	.LVL117:
 1095 01c8 8046     	 mov r8,r0
 1096 01ca 2046     	 mov r0,r4
 1097 01cc 8946     	 mov r9,r1
 1098 01ce FFF7FEFF 	 bl __aeabi_f2d
 1099              	.LVL118:
 1100 01d2 0B46     	 mov r3,r1
 1101 01d4 0246     	 mov r2,r0
 1102 01d6 4946     	 mov r1,r9
 1103 01d8 4046     	 mov r0,r8
 1104 01da FFF7FEFF 	 bl __aeabi_dmul
 1105              	.LVL119:
 1106 01de FFF7FEFF 	 bl __aeabi_d2f
 1107              	.LVL120:
 356:../DSP_LIB/src/dsp_lib.c **** 		{
 1108              	 .loc 1 356 0 discriminator 3
 1109 01e2 019B     	 ldr r3,[sp,#4]
 359:../DSP_LIB/src/dsp_lib.c **** 		}
 1110              	 .loc 1 359 0 discriminator 3
 1111 01e4 0AED018A 	 fsts s16,[r10,#-4]
 356:../DSP_LIB/src/dsp_lib.c **** 		{
 1112              	 .loc 1 356 0 discriminator 3
 1113 01e8 9D42     	 cmp r5,r3
 358:../DSP_LIB/src/dsp_lib.c **** 			complex_fft_signal[2 * idx + 1] = 0;
 1114              	 .loc 1 358 0 discriminator 3
 1115 01ea 4AF8080C 	 str r0,[r10,#-8]
 356:../DSP_LIB/src/dsp_lib.c **** 		{
 1116              	 .loc 1 356 0 discriminator 3
 1117 01ee D7D1     	 bne .L65
 1118 01f0 B9E7     	 b .L95
 1119              	 .cfi_endproc
 1120              	.LFE536:
 1122 01f2 00BF     	 .section .text.compute_fft_spectrum,"ax",%progbits
 1123              	 .align 2
 1124              	 .global compute_fft_spectrum
 1125              	 .thumb
 1126              	 .thumb_func
 1128              	compute_fft_spectrum:
 1129              	.LFB537:
 407:../DSP_LIB/src/dsp_lib.c **** 
 408:../DSP_LIB/src/dsp_lib.c **** /*-------------------------- compute_fft_spectrum() ------------------------*/
 409:../DSP_LIB/src/dsp_lib.c **** void compute_fft_spectrum(float* fft_input_signal, uint32_t Nf, float* fft_output_spectrum)
 410:../DSP_LIB/src/dsp_lib.c **** {
 1130              	 .loc 1 410 0
 1131              	 .cfi_startproc
 1132              	 
 1133              	 
 1134              	 
 1135              	.LVL121:
 1136              	 .loc 1 410 0
 1137 0000 0B46     	 mov r3,r1
 411:../DSP_LIB/src/dsp_lib.c **** 	/* Convert to real magnitude data */
 412:../DSP_LIB/src/dsp_lib.c **** 	arm_cmplx_mag_f32(fft_input_signal, fft_output_spectrum, Nf);
 1138              	 .loc 1 412 0
 1139 0002 1146     	 mov r1,r2
 1140              	.LVL122:
 1141 0004 1A46     	 mov r2,r3
 1142              	.LVL123:
 1143 0006 FFF7FEBF 	 b arm_cmplx_mag_f32
 1144              	.LVL124:
 1145              	 .cfi_endproc
 1146              	.LFE537:
 1148 000a 00BF     	 .text
 1149              	.Letext0:
 1150              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1151              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1152              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1153              	 .file 5 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_vadc.h"
 1154              	 .file 6 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
 1155              	 .file 7 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 1156              	 .file 8 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_usbd.h"
 1157              	 .file 9 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/USBD/usbd.h"
 1158              	 .file 10 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/DSP_LIB/inc/dsp_lib.h"
 1159              	 .file 11 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Include/core_cm4.h"
 1160              	 .file 12 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 1161              	 .file 13 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 1162              	 .file 14 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/USBD/usbd_extern.h"
 1163              	 .file 15 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_const_structs.h"
 1164              	 .file 16 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 dsp_lib.c
    {standard input}:25     .text.fft_window_gen:00000000 $t
    {standard input}:30     .text.fft_window_gen:00000000 fft_window_gen
    {standard input}:106    .text.fft_window_gen:00000044 $d
    {standard input}:111    .text.fft_window_gen:0000004c $t
    {standard input}:551    .text.fft_window_gen:000002e8 $d
    {standard input}:575    .text.fft_window_gen:00000328 $t
    {standard input}:772    .text.fft_window_gen:00000450 $d
    {standard input}:793    .text.compute_fft_signal:00000000 $t
    {standard input}:798    .text.compute_fft_signal:00000000 compute_fft_signal
    {standard input}:1123   .text.compute_fft_spectrum:00000000 $t
    {standard input}:1128   .text.compute_fft_spectrum:00000000 compute_fft_spectrum
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
__aeabi_ui2d
powf
acoshf
coshf
arm_cos_f32
acosf
arm_cfft_sR_f32_len32
arm_cfft_sR_f32_len256
arm_cfft_sR_f32_len64
arm_cfft_sR_f32_len16
arm_cfft_sR_f32_len128
__aeabi_dadd
arm_mean_f32
arm_cfft_f32
arm_cmplx_mag_f32
