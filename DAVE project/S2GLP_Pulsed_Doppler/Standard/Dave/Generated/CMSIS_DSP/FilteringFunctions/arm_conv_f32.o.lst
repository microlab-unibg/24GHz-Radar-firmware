   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Title:        arm_conv_f32.c
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Description:  Convolution of floating-point sequences
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * @defgroup Conv Convolution
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Convolution is a mathematical operation that operates on two finite length vectors to generate a
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Convolution is similar to correlation and is frequently used in filtering and data analysis.
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * The CMSIS DSP library contains functions for convolving Q7, Q15, Q31, and floating-point data ty
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * The library also provides fast versions of the Q15 and Q31 functions on Cortex-M4 and Cortex-M3.
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * \par Algorithm
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Let <code>a[n]</code> and <code>b[n]</code> be sequences of length <code>srcALen</code> and <cod
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Then the convolution
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * <pre>
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *                   c[n] = a[n] * b[n]
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * </pre>
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * \par
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * is defined as
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * \image html ConvolutionEquation.gif
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * \par
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Note that <code>c[n]</code> is of length <code>srcALen + srcBLen - 1</code> and is defined over 
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * <code>pSrcA</code> points to the first input vector of length <code>srcALen</code> and
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * <code>pSrcB</code> points to the second input vector of length <code>srcBLen</code>.
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * The output result is written to <code>pDst</code> and the calling function must allocate <code>s
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * \par
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Conceptually, when two signals <code>a[n]</code> and <code>b[n]</code> are convolved,
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * the signal <code>b[n]</code> slides over <code>a[n]</code>.
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * For each offset \c n, the overlapping portions of a[n] and b[n] are multiplied and summed togeth
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * \par
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Note that convolution is a commutative operation:
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * <pre>
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *                   a[n] * b[n] = b[n] * a[n].
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * </pre>
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * \par
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * This means that switching the A and B arguments to the convolution functions has no effect.
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * <b>Fixed-Point Behavior</b>
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * \par
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Convolution requires summing up a large number of intermediate products.
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * As such, the Q7, Q15, and Q31 functions run a risk of overflow and saturation.
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Refer to the function specific documentation below for further details of the particular algorit
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * <b>Fast Versions</b>
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * \par
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Fast versions are supported for Q31 and Q15.  Cycles for Fast versions are less compared to Q31 
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * the input signals should be scaled down to avoid intermediate overflows.
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * <b>Opt Versions</b>
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  *
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * \par
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * Opt versions are supported for Q15 and Q7.  Design uses internal scratch buffer for getting good
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * These versions are optimised in cycles and consumes more memory(Scratch memory) compared to Q15 
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  */
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** /**
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * @addtogroup Conv
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * @{
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  */
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** /**
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * @brief Convolution of floating-point sequences.
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * @param[in] *pSrcA points to the first input sequence.
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * @param[in] srcALen length of the first input sequence.
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * @param[in] *pSrcB points to the second input sequence.
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * @param[in] srcBLen length of the second input sequence.
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * @param[out] *pDst points to the location where the output result is written.  Length srcALen+src
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  * @return none.
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****  */
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** void arm_conv_f32(
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t * pSrcA,
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   uint32_t srcALen,
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t * pSrcB,
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   uint32_t srcBLen,
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t * pDst)
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** {
  28              	 .loc 1 118 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 36
  36              	 .cfi_offset 4,-36
  37              	 .cfi_offset 5,-32
  38              	 .cfi_offset 6,-28
  39              	 .cfi_offset 7,-24
  40              	 .cfi_offset 8,-20
  41              	 .cfi_offset 9,-16
  42              	 .cfi_offset 10,-12
  43              	 .cfi_offset 11,-8
  44              	 .cfi_offset 14,-4
  45 0004 87B0     	 sub sp,sp,#28
  46              	.LCFI1:
  47              	 .cfi_def_cfa_offset 64
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** #if defined (ARM_MATH_DSP)
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t *pIn1;                               /* inputA pointer */
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t *pIn2;                               /* inputB pointer */
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t *pOut = pDst;                        /* output pointer */
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t *px;                                 /* Intermediate inputA pointer */
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t *py;                                 /* Intermediate inputB pointer */
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t *pSrc1, *pSrc2;                      /* Intermediate pointers */
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t sum, acc0, acc1, acc2, acc3;         /* Accumulator */
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t x0, x1, x2, x3, c0;                  /* Temporary variables to hold state and coefficie
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   uint32_t j, k, count, blkCnt, blockSize1, blockSize2, blockSize3;     /* loop counters */
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* srcB is always made to slide across srcA. */
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   if (srcALen >= srcBLen)
  48              	 .loc 1 138 0
  49 0006 9942     	 cmp r1,r3
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
  50              	 .loc 1 118 0
  51 0008 8046     	 mov r8,r0
  52 000a 109E     	 ldr r6,[sp,#64]
  53              	.LVL1:
  54              	 .loc 1 138 0
  55 000c 05D2     	 bcs .L2
  56 000e 0446     	 mov r4,r0
  57 0010 0846     	 mov r0,r1
  58              	.LVL2:
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Initialization of inputA pointer */
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     pIn1 = pSrcA;
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Initialization of inputB pointer */
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     pIn2 = pSrcB;
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   }
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   else
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Initialization of inputA pointer */
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     pIn1 = pSrcB;
  59              	 .loc 1 149 0
  60 0012 9046     	 mov r8,r2
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
  61              	 .loc 1 138 0
  62 0014 1946     	 mov r1,r3
  63              	.LVL3:
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Initialization of inputB pointer */
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     pIn2 = pSrcA;
  64              	 .loc 1 152 0
  65 0016 2246     	 mov r2,r4
  66              	.LVL4:
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
  67              	 .loc 1 138 0
  68 0018 0346     	 mov r3,r0
  69              	.LVL5:
  70              	.L2:
  71 001a 0131     	 adds r1,r1,#1
  72              	.LVL6:
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     j = srcBLen;
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     srcBLen = srcALen;
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     srcALen = j;
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   }
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* The function is internally
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * divided into three stages according to the number of multiplications that has to be
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * taken place between inputA samples and inputB samples. In the first stage of the
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * algorithm, the multiplications increase by one for every iteration.
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * In the second stage of the algorithm, srcBLen number of multiplications are done.
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * In the third stage of the algorithm, the multiplications decrease by one
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * for every iteration. */
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* The algorithm is implemented in three stages.
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****      The loop counters of each stage is initiated here. */
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   blockSize1 = srcBLen - 1u;
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   blockSize2 = srcALen - (srcBLen - 1u);
  73              	 .loc 1 172 0
  74 001c C91A     	 subs r1,r1,r3
  75              	.LVL7:
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   blockSize3 = blockSize1;
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* --------------------------
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * initializations of stage1
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * -------------------------*/
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* sum = x[0] * y[0]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * sum = x[0] * y[1] + x[1] * y[0]
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * ....
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    */
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* In this stage the MAC operations are increased by 1 for every iteration.
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****      The count variable holds the number of MAC operations performed */
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   count = 1u;
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputA */
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   px = pIn1;
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputB */
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   py = pIn2;
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* ------------------------
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * Stage1 process
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * ----------------------*/
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* The first stage starts here */
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   while (blockSize1 > 0u)
  76              	 .loc 1 201 0
  77 001e 5C1E     	 subs r4,r3,#1
  78              	.LVL8:
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   blockSize3 = blockSize1;
  79              	 .loc 1 172 0
  80 0020 0191     	 str r1,[sp,#4]
  81              	.LVL9:
  82              	 .loc 1 201 0
  83 0022 00F0CB81 	 beq .L72
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Accumulator is made zero for every iteration */
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     sum = 0.0f;
  84              	 .loc 1 204 0
  85 0026 DFEDE47A 	 flds s15,.L75
  86 002a 02F1040C 	 add ip,r2,#4
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
  87              	 .loc 1 201 0
  88 002e B146     	 mov r9,r6
  89 0030 1046     	 mov r0,r2
  90 0032 4746     	 mov r7,r8
  91 0034 4FF0010E 	 mov lr,#1
  92              	.LVL10:
  93              	.L4:
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     k = count >> 2u;
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     while (k > 0u)
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* x[0] * y[srcBLen - 1] */
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* x[1] * y[srcBLen - 2] */
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* x[2] * y[srcBLen - 3] */
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* x[3] * y[srcBLen - 4] */
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       k--;
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     }
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* If the count is not a multiple of 4, compute any remaining MACs here.
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****      ** No loop unrolling is used. */
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     k = count % 0x4u;
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     while (k > 0u)
  94              	 .loc 1 233 0
  95 0038 1EF00301 	 ands r1,lr,#3
  96              	.LVL11:
  97 003c 08D0     	 beq .L7
  98 003e 0430     	 adds r0,r0,#4
  99              	.LVL12:
 100              	.L8:
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Perform the multiply-accumulate */
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 101              	 .loc 1 236 0
 102 0040 F7EC016A 	 fldmias r7!,{s13}
 103              	.LVL13:
 104 0044 30ED017A 	 fldmdbs r0!,{s14}
 105              	.LVL14:
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 106              	 .loc 1 233 0
 107 0048 0139     	 subs r1,r1,#1
 108              	.LVL15:
 109              	 .loc 1 236 0
 110 004a E6EE877A 	 vfma.f32 s15,s13,s14
 111              	.LVL16:
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 112              	 .loc 1 233 0
 113 004e F7D1     	 bne .L8
 114              	.LVL17:
 115              	.L7:
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       k--;
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     }
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Store the result in the accumulator in the destination buffer. */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     *pOut++ = sum;
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     py = pIn2 + count;
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     px = pIn1;
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Increment the MAC count */
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     count++;
 116              	 .loc 1 250 0
 117 0050 0EF1010E 	 add lr,lr,#1
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 118              	 .loc 1 201 0
 119 0054 9E45     	 cmp lr,r3
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 120              	 .loc 1 243 0
 121 0056 E9EC017A 	 fstmias r9!,{s15}
 122              	.LVL18:
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     px = pIn1;
 123              	 .loc 1 246 0
 124 005a 6046     	 mov r0,ip
 125              	.LVL19:
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 126              	 .loc 1 201 0
 127 005c 2FD0     	 beq .L73
 128              	.LVL20:
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 129              	 .loc 1 211 0
 130 005e 5FEA9E0A 	 lsrs r10,lr,#2
 131              	.LVL21:
 132 0062 DFEDD57A 	 flds s15,.L75
 133 0066 00F0EF81 	 beq .L35
 134 006a 08F11000 	 add r0,r8,#16
 135              	.LVL22:
 136 006e ACF11001 	 sub r1,ip,#16
 137 0072 5546     	 mov r5,r10
 138              	.LVL23:
 139              	.L6:
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 140              	 .loc 1 214 0
 141 0074 50ED043A 	 flds s7,[r0,#-16]
 142 0078 91ED044A 	 flds s8,[r1,#16]
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 143              	 .loc 1 217 0
 144 007c 50ED034A 	 flds s9,[r0,#-12]
 145 0080 91ED035A 	 flds s10,[r1,#12]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 146              	 .loc 1 220 0
 147 0084 50ED025A 	 flds s11,[r0,#-8]
 148 0088 91ED026A 	 flds s12,[r1,#8]
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 149              	 .loc 1 223 0
 150 008c 50ED016A 	 flds s13,[r0,#-4]
 151 0090 91ED017A 	 flds s14,[r1,#4]
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 152              	 .loc 1 214 0
 153 0094 E3EE847A 	 vfma.f32 s15,s7,s8
 154              	.LVL24:
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 155              	 .loc 1 211 0
 156 0098 013D     	 subs r5,r5,#1
 157              	.LVL25:
 158 009a 00F11000 	 add r0,r0,#16
 159              	.LVL26:
 160 009e A1F11001 	 sub r1,r1,#16
 161              	.LVL27:
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 162              	 .loc 1 217 0
 163 00a2 E4EE857A 	 vfma.f32 s15,s9,s10
 164              	.LVL28:
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 165              	 .loc 1 220 0
 166 00a6 E5EE867A 	 vfma.f32 s15,s11,s12
 167              	.LVL29:
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 168              	 .loc 1 223 0
 169 00aa E6EE877A 	 vfma.f32 s15,s13,s14
 170              	.LVL30:
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 171              	 .loc 1 211 0
 172 00ae E1D1     	 bne .L6
 173 00b0 08EB0A17 	 add r7,r8,r10,lsl#4
 174 00b4 ACEB0A10 	 sub r0,ip,r10,lsl#4
 175              	.LVL31:
 176              	.L5:
 177 00b8 0CF1040C 	 add ip,ip,#4
 178 00bc BCE7     	 b .L4
 179              	.LVL32:
 180              	.L73:
 181 00be 03F18045 	 add r5,r3,#1073741824
 182 00c2 013D     	 subs r5,r5,#1
 183 00c4 06EB8506 	 add r6,r6,r5,lsl#2
 184              	.LVL33:
 185              	.L3:
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Decrement the loop counter */
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     blockSize1--;
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   }
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* --------------------------
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * Initializations of stage2
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * ------------------------*/
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * ....
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y[0
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    */
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputA */
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   px = pIn1;
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputB */
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   py = pSrc2;
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* count is index by which the pointer pIn1 to be incremented */
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   count = 0u;
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* -------------------
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * Stage2 process
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * ------------------*/
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * So, to loop unroll over blockSize2,
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * srcBLen should be greater than or equal to 4 */
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   if (srcBLen >= 4u)
 186              	 .loc 1 283 0
 187 00c8 032B     	 cmp r3,#3
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   py = pSrc2;
 188              	 .loc 1 270 0
 189 00ca 02EB8505 	 add r5,r2,r5,lsl#2
 190              	.LVL34:
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Loop unroll over blockSize2, by 4 */
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     blkCnt = blockSize2 >> 2u;
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     while (blkCnt > 0u)
 191              	 .loc 1 288 0
 192 00ce 019A     	 ldr r2,[sp,#4]
 193              	.LVL35:
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 194              	 .loc 1 283 0
 195 00d0 36D8     	 bhi .L10
 196              	.LVL36:
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Set all accumulators to zero */
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       acc0 = 0.0f;
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       acc1 = 0.0f;
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       acc2 = 0.0f;
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       acc3 = 0.0f;
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* read x[0], x[1], x[2] samples */
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       x0 = *(px++);
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       x1 = *(px++);
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       x2 = *(px++);
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen >> 2u;
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       do
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Read y[srcBLen - 1] sample */
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         c0 = *(py--);
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Read x[3] sample */
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         x3 = *(px);
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc0 +=  x[0] * y[srcBLen - 1] */
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc0 += x0 * c0;
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[1] * y[srcBLen - 1] */
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc1 += x1 * c0;
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[2] * y[srcBLen - 1] */
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc2 += x2 * c0;
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[3] * y[srcBLen - 1] */
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc3 += x3 * c0;
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Read y[srcBLen - 2] sample */
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         c0 = *(py--);
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Read x[4] sample */
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         x0 = *(px + 1u);
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc0 +=  x[1] * y[srcBLen - 2] */
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc0 += x1 * c0;
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[2] * y[srcBLen - 2] */
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc1 += x2 * c0;
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[3] * y[srcBLen - 2] */
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc2 += x3 * c0;
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[4] * y[srcBLen - 2] */
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc3 += x0 * c0;
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Read y[srcBLen - 3] sample */
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         c0 = *(py--);
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Read x[5] sample */
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         x1 = *(px + 2u);
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulates */
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc0 +=  x[2] * y[srcBLen - 3] */
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc0 += x2 * c0;
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[3] * y[srcBLen - 2] */
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc1 += x3 * c0;
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[4] * y[srcBLen - 2] */
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc2 += x0 * c0;
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[5] * y[srcBLen - 2] */
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc3 += x1 * c0;
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Read y[srcBLen - 4] sample */
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         c0 = *(py--);
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Read x[6] sample */
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         x2 = *(px + 3u);
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         px += 4u;
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulates */
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc0 +=  x[3] * y[srcBLen - 4] */
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc0 += x3 * c0;
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[4] * y[srcBLen - 4] */
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc1 += x0 * c0;
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[5] * y[srcBLen - 4] */
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc2 += x1 * c0;
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[6] * y[srcBLen - 4] */
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc3 += x2 * c0;
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       } while (--k);
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****        ** No loop unrolling is used. */
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen % 0x4u;
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       while (k > 0u)
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Read y[srcBLen - 5] sample */
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         c0 = *(py--);
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Read x[7] sample */
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         x3 = *(px++);
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulates */
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc0 +=  x[4] * y[srcBLen - 5] */
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc0 += x0 * c0;
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[5] * y[srcBLen - 5] */
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc1 += x1 * c0;
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[6] * y[srcBLen - 5] */
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc2 += x2 * c0;
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[7] * y[srcBLen - 5] */
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         acc3 += x3 * c0;
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Reuse the present samples for the next MAC */
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         x0 = x1;
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         x1 = x2;
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         x2 = x3;
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Decrement the loop counter */
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         k--;
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       }
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = acc0;
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = acc1;
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = acc2;
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = acc3;
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Increment the pointer pIn1 index, count by 4 */
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       count += 4u;
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       px = pIn1 + count;
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       py = pSrc2;
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       blkCnt--;
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     }
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* If the blockSize2 is not a multiple of 4, compute any remaining output samples here.
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****      ** No loop unrolling is used. */
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     blkCnt = blockSize2 % 0x4u;
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     while (blkCnt > 0u)
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Accumulator is made zero for every iteration */
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum = 0.0f;
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen >> 2u;
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       while (k > 0u)
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulates */
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Decrement the loop counter */
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         k--;
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       }
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****        ** No loop unrolling is used. */
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen % 0x4u;
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       while (k > 0u)
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Decrement the loop counter */
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         k--;
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       }
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = sum;
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Increment the MAC count */
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       count++;
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       px = pIn1 + count;
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       py = pSrc2;
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       blkCnt--;
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     }
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   }
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   else
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* If the srcBLen is not a multiple of 4,
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****      * the blockSize2 loop cannot be unrolled by 4 */
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     blkCnt = blockSize2;
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     while (blkCnt > 0u)
 197              	 .loc 1 488 0
 198 00d2 002A     	 cmp r2,#0
 199 00d4 00F06B81 	 beq .L36
 200 00d8 002B     	 cmp r3,#0
 201 00da 00F07381 	 beq .L12
 202 00de 002C     	 cmp r4,#0
 203 00e0 00F09D81 	 beq .L13
 204 00e4 022B     	 cmp r3,#2
 205 00e6 00F07C81 	 beq .L14
 206 00ea 4FEA8209 	 lsl r9,r2,#2
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Accumulator is made zero for every iteration */
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum = 0.0f;
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* srcBLen number of MACS should be performed */
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       k = srcBLen;
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       while (k > 0u)
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Perform the multiply-accumulate */
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 207              	 .loc 1 499 0
 208 00ee DFEDB24A 	 flds s9,.L75
 209 00f2 06EB0907 	 add r7,r6,r9
 210 00f6 4246     	 mov r2,r8
 211              	.LVL37:
 212 00f8 08F10403 	 add r3,r8,#4
 213              	.LVL38:
 214              	.L15:
 215 00fc D5ED007A 	 flds s15,[r5]
 216 0100 B2EC015A 	 fldmias r2!,{s10}
 217              	.LVL39:
 218 0104 D3ED005A 	 flds s11,[r3]
 219 0108 15ED016A 	 flds s12,[r5,#-4]
 220 010c D3ED016A 	 flds s13,[r3,#4]
 221 0110 15ED027A 	 flds s14,[r5,#-8]
 222 0114 B0EE644A 	 fcpys s8,s9
 223 0118 A5EE274A 	 vfma.f32 s8,s10,s15
 224 011c 0433     	 adds r3,r3,#4
 225 011e F0EE447A 	 fcpys s15,s8
 226              	.LVL40:
 227 0122 E5EE867A 	 vfma.f32 s15,s11,s12
 228              	.LVL41:
 229 0126 E6EE877A 	 vfma.f32 s15,s13,s14
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* Decrement the loop counter */
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         k--;
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       }
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = sum;
 230              	 .loc 1 506 0
 231 012a E6EC017A 	 fstmias r6!,{s15}
 232              	.LVL42:
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 233              	 .loc 1 488 0
 234 012e BE42     	 cmp r6,r7
 235 0130 E4D1     	 bne .L15
 236              	.LVL43:
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Increment the MAC count */
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       count++;
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       px = pIn1 + count;
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       py = pSrc2;
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       blkCnt--;
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     }
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   }
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* --------------------------
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * Initializations of stage3
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * -------------------------*/
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[srcAL
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[srcAL
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * ....
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 529:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * sum +=  x[srcALen-1] * y[srcBLen-1]
 530:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    */
 531:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 532:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* In this stage the MAC operations are decreased by 1 for every iteration.
 533:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****      The blockSize3 variable holds the number of MAC operations performed */
 534:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 535:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputA */
 536:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   pSrc1 = (pIn1 + srcALen) - (srcBLen - 1u);
 237              	 .loc 1 536 0
 238 0132 C844     	 add r8,r8,r9
 239              	.LVL44:
 537:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   px = pSrc1;
 538:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 539:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* Working pointer of inputB */
 540:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   pSrc2 = pIn2 + (srcBLen - 1u);
 541:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   py = pSrc2;
 542:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 543:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* -------------------
 544:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * Stage3 process
 545:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****    * ------------------*/
 546:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   while (blockSize3 > 0u)
 240              	 .loc 1 547 0
 241 0134 002C     	 cmp r4,#0
 242 0136 40F0F580 	 bne .L33
 243              	.LVL45:
 244              	.L1:
 548:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 549:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Accumulator is made zero for every iteration */
 550:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     sum = 0.0f;
 551:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 552:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Apply loop unrolling and compute 4 MACs simultaneously. */
 553:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     k = blockSize3 >> 2u;
 554:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 555:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 556:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     while (k > 0u)
 558:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 559:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* sum += x[srcALen - srcBLen + 1] * y[srcBLen - 1] */
 560:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 561:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 562:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* sum += x[srcALen - srcBLen + 2] * y[srcBLen - 2] */
 563:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 564:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 565:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* sum += x[srcALen - srcBLen + 3] * y[srcBLen - 3] */
 566:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 567:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 568:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* sum += x[srcALen - srcBLen + 4] * y[srcBLen - 4] */
 569:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 570:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 571:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 572:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       k--;
 573:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     }
 574:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 575:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* If the blockSize3 is not a multiple of 4, compute any remaining MACs here.
 576:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****      ** No loop unrolling is used. */
 577:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     k = blockSize3 % 0x4u;
 578:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 579:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     while (k > 0u)
 580:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 581:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Perform the multiply-accumulates */
 582:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 583:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       sum += *px++ * *py--;
 584:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 585:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Decrement the loop counter */
 586:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       k--;
 587:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     }
 588:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 589:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Store the result in the accumulator in the destination buffer. */
 590:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     *pOut++ = sum;
 591:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 592:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 593:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     px = ++pSrc1;
 594:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     py = pSrc2;
 595:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 596:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Decrement the loop counter */
 597:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     blockSize3--;
 598:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   }
 599:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 600:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** #else
 601:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 602:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* Run the below code for Cortex-M0 */
 603:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 604:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t *pIn1 = pSrcA;                       /* inputA pointer */
 605:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t *pIn2 = pSrcB;                       /* inputB pointer */
 606:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   float32_t sum;                                 /* Accumulator */
 607:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   uint32_t i, j;                                 /* loop counters */
 608:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 609:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   /* Loop to calculate convolution for output length number of times */
 610:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   for (i = 0u; i < ((srcALen + srcBLen) - 1u); i++)
 611:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 612:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Initialize sum with zero to carry out MAC operations */
 613:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     sum = 0.0f;
 614:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 615:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Loop to perform MAC operations according to convolution equation */
 616:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     for (j = 0u; j <= i; j++)
 617:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 618:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       /* Check the array limitations */
 619:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       if ((((i - j) < srcBLen) && (j < srcALen)))
 620:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 621:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* z[i] += x[i-j] * y[j] */
 622:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += pIn1[j] * pIn2[i - j];
 623:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       }
 624:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     }
 625:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     /* Store the output in the destination buffer */
 626:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     pDst[i] = sum;
 627:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   }
 628:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 629:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** #endif /*   #if defined (ARM_MATH_DSP)        */
 630:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 631:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** }
 245              	 .loc 1 631 0
 246 013a 07B0     	 add sp,sp,#28
 247              	.LCFI2:
 248              	 .cfi_remember_state
 249              	 .cfi_def_cfa_offset 36
 250              	 
 251 013c BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 252              	.LVL46:
 253              	.L10:
 254              	.LCFI3:
 255              	 .cfi_restore_state
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 256              	 .loc 1 288 0
 257 0140 9208     	 lsrs r2,r2,#2
 258 0142 1146     	 mov r1,r2
 259 0144 0292     	 str r2,[sp,#8]
 260 0146 00F03581 	 beq .L37
 261 014a 4FEA930A 	 lsr r10,r3,#2
 262 014e 4FEA0A12 	 lsl r2,r10,#4
 263 0152 4FEA0A19 	 lsl r9,r10,#4
 264 0156 0131     	 adds r1,r1,#1
 265 0158 C2F10402 	 rsb r2,r2,#4
 266 015c 0901     	 lsls r1,r1,#4
 267 015e AA18     	 adds r2,r5,r2
 268 0160 A9F11000 	 sub r0,r9,#16
 269 0164 03F0030C 	 and ip,r3,#3
 270 0168 A5F11009 	 sub r9,r5,#16
 271 016c 0495     	 str r5,[sp,#16]
 272 016e 0594     	 str r4,[sp,#20]
 273 0170 0391     	 str r1,[sp,#12]
 274 0172 6446     	 mov r4,ip
 275              	.LVL47:
 276 0174 06EB010B 	 add fp,r6,r1
 277 0178 06F1100E 	 add lr,r6,#16
 278 017c 08F11C07 	 add r7,r8,#28
 279 0180 9446     	 mov ip,r2
 280 0182 0546     	 mov r5,r0
 281              	.LVL48:
 282              	.L23:
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 283              	 .loc 1 294 0
 284 0184 DFED8C7A 	 flds s15,.L75
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       x1 = *(px++);
 285              	 .loc 1 297 0
 286 0188 57ED074A 	 flds s9,[r7,#-28]
 287              	.LVL49:
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       x2 = *(px++);
 288              	 .loc 1 298 0
 289 018c 57ED065A 	 flds s11,[r7,#-24]
 290              	.LVL50:
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 291              	 .loc 1 299 0
 292 0190 17ED055A 	 flds s10,[r7,#-20]
 293              	.LVL51:
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       acc3 = 0.0f;
 294              	 .loc 1 293 0
 295 0194 B0EE677A 	 fcpys s14,s15
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       acc2 = 0.0f;
 296              	 .loc 1 292 0
 297 0198 F0EE676A 	 fcpys s13,s15
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       acc1 = 0.0f;
 298              	 .loc 1 291 0
 299 019c B0EE676A 	 fcpys s12,s15
 300 01a0 4946     	 mov r1,r9
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 301              	 .loc 1 299 0
 302 01a2 3A46     	 mov r2,r7
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 303              	 .loc 1 302 0
 304 01a4 5046     	 mov r0,r10
 305              	.LVL52:
 306              	.L20:
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 307              	 .loc 1 309 0 discriminator 1
 308 01a6 91ED042A 	 flds s4,[r1,#16]
 309              	.LVL53:
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 310              	 .loc 1 312 0 discriminator 1
 311 01aa 52ED043A 	 flds s7,[r2,#-16]
 312              	.LVL54:
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 313              	 .loc 1 328 0 discriminator 1
 314 01ae D1ED032A 	 flds s5,[r1,#12]
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 315              	 .loc 1 344 0 discriminator 1
 316 01b2 91ED023A 	 flds s6,[r1,#8]
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 317              	 .loc 1 360 0 discriminator 1
 318 01b6 91ED014A 	 flds s8,[r1,#4]
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 319              	 .loc 1 316 0 discriminator 1
 320 01ba A4EE826A 	 vfma.f32 s12,s9,s4
 321              	.LVL55:
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 322              	 .loc 1 377 0 discriminator 1
 323 01be 0138     	 subs r0,r0,#1
 324              	.LVL56:
 325 01c0 A1F11001 	 sub r1,r1,#16
 326              	.LVL57:
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 327              	 .loc 1 319 0 discriminator 1
 328 01c4 E5EE826A 	 vfma.f32 s13,s11,s4
 329              	.LVL58:
 330 01c8 02F11002 	 add r2,r2,#16
 331              	.LVL59:
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 332              	 .loc 1 322 0 discriminator 1
 333 01cc A5EE027A 	 vfma.f32 s14,s10,s4
 334              	.LVL60:
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 335              	 .loc 1 325 0 discriminator 1
 336 01d0 E3EE827A 	 vfma.f32 s15,s7,s4
 337              	.LVL61:
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 338              	 .loc 1 331 0 discriminator 1
 339 01d4 52ED074A 	 flds s9,[r2,#-28]
 340              	.LVL62:
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[2] * y[srcBLen - 2] */
 341              	 .loc 1 335 0 discriminator 1
 342 01d8 A5EEA26A 	 vfma.f32 s12,s11,s5
 343              	.LVL63:
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[3] * y[srcBLen - 2] */
 344              	 .loc 1 337 0 discriminator 1
 345 01dc E5EE226A 	 vfma.f32 s13,s10,s5
 346              	.LVL64:
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[4] * y[srcBLen - 2] */
 347              	 .loc 1 339 0 discriminator 1
 348 01e0 A3EEA27A 	 vfma.f32 s14,s7,s5
 349              	.LVL65:
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 350              	 .loc 1 341 0 discriminator 1
 351 01e4 E4EEA27A 	 vfma.f32 s15,s9,s5
 352              	.LVL66:
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 353              	 .loc 1 347 0 discriminator 1
 354 01e8 52ED065A 	 flds s11,[r2,#-24]
 355              	.LVL67:
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[3] * y[srcBLen - 2] */
 356              	 .loc 1 351 0 discriminator 1
 357 01ec A5EE036A 	 vfma.f32 s12,s10,s6
 358              	.LVL68:
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[4] * y[srcBLen - 2] */
 359              	 .loc 1 353 0 discriminator 1
 360 01f0 E3EE836A 	 vfma.f32 s13,s7,s6
 361              	.LVL69:
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[5] * y[srcBLen - 2] */
 362              	 .loc 1 355 0 discriminator 1
 363 01f4 A4EE837A 	 vfma.f32 s14,s9,s6
 364              	.LVL70:
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 365              	 .loc 1 357 0 discriminator 1
 366 01f8 E5EE837A 	 vfma.f32 s15,s11,s6
 367              	.LVL71:
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         px += 4u;
 368              	 .loc 1 363 0 discriminator 1
 369 01fc 12ED055A 	 flds s10,[r2,#-20]
 370              	.LVL72:
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[4] * y[srcBLen - 4] */
 371              	 .loc 1 368 0 discriminator 1
 372 0200 A3EE846A 	 vfma.f32 s12,s7,s8
 373              	.LVL73:
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[5] * y[srcBLen - 4] */
 374              	 .loc 1 370 0 discriminator 1
 375 0204 E4EE846A 	 vfma.f32 s13,s9,s8
 376              	.LVL74:
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[6] * y[srcBLen - 4] */
 377              	 .loc 1 372 0 discriminator 1
 378 0208 A5EE847A 	 vfma.f32 s14,s11,s8
 379              	.LVL75:
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 380              	 .loc 1 374 0 discriminator 1
 381 020c E5EE047A 	 vfma.f32 s15,s10,s8
 382              	.LVL76:
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 383              	 .loc 1 377 0 discriminator 1
 384 0210 C9D1     	 bne .L20
 385 0212 E919     	 adds r1,r5,r7
 386              	.LVL77:
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 387              	 .loc 1 383 0
 388 0214 ACB1     	 cbz r4,.L21
 389 0216 6046     	 mov r0,ip
 390 0218 2246     	 mov r2,r4
 391              	.LVL78:
 392              	.L22:
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 393              	 .loc 1 386 0
 394 021a 30ED014A 	 fldmdbs r0!,{s8}
 395              	.LVL79:
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 396              	 .loc 1 389 0
 397 021e F1EC013A 	 fldmias r1!,{s7}
 398              	.LVL80:
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 399              	 .loc 1 383 0
 400 0222 013A     	 subs r2,r2,#1
 401              	.LVL81:
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc1 +=  x[5] * y[srcBLen - 5] */
 402              	 .loc 1 393 0
 403 0224 A4EE846A 	 vfma.f32 s12,s9,s8
 404              	.LVL82:
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc2 +=  x[6] * y[srcBLen - 5] */
 405              	 .loc 1 395 0
 406 0228 E5EE846A 	 vfma.f32 s13,s11,s8
 407              	.LVL83:
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         /* acc3 +=  x[7] * y[srcBLen - 5] */
 408              	 .loc 1 397 0
 409 022c A5EE047A 	 vfma.f32 s14,s10,s8
 410              	.LVL84:
 411 0230 F0EE654A 	 fcpys s9,s11
 412              	.LVL85:
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 413              	 .loc 1 399 0
 414 0234 E3EE847A 	 vfma.f32 s15,s7,s8
 415              	.LVL86:
 416 0238 F0EE455A 	 fcpys s11,s10
 417              	.LVL87:
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 418              	 .loc 1 404 0
 419 023c B0EE635A 	 fcpys s10,s7
 420              	.LVL88:
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 421              	 .loc 1 383 0
 422 0240 EBD1     	 bne .L22
 423              	.LVL89:
 424              	.L21:
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = acc1;
 425              	 .loc 1 411 0
 426 0242 0EED046A 	 fsts s12,[lr,#-16]
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = acc2;
 427              	 .loc 1 412 0
 428 0246 4EED036A 	 fsts s13,[lr,#-12]
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       *pOut++ = acc3;
 429              	 .loc 1 413 0
 430 024a 0EED027A 	 fsts s14,[lr,#-8]
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 431              	 .loc 1 414 0
 432 024e 4EED017A 	 fsts s15,[lr,#-4]
 433              	.LVL90:
 434 0252 0EF1100E 	 add lr,lr,#16
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 435              	 .loc 1 288 0
 436 0256 DE45     	 cmp lr,fp
 437 0258 07F11007 	 add r7,r7,#16
 438              	.LVL91:
 439 025c 92D1     	 bne .L23
 440 025e 039A     	 ldr r2,[sp,#12]
 441 0260 049D     	 ldr r5,[sp,#16]
 442 0262 059C     	 ldr r4,[sp,#20]
 443 0264 A2F11000 	 sub r0,r2,#16
 444 0268 029A     	 ldr r2,[sp,#8]
 445 026a 0644     	 add r6,r6,r0
 446 026c 9200     	 lsls r2,r2,#2
 447 026e 4044     	 add r0,r0,r8
 448              	.LVL92:
 449              	.L19:
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 450              	 .loc 1 433 0
 451 0270 0199     	 ldr r1,[sp,#4]
 452 0272 11F00307 	 ands r7,r1,#3
 453              	.LVL93:
 454 0276 00F0B080 	 beq .L38
 455 027a 4FEA930A 	 lsr r10,r3,#2
 456 027e 4FEA0A19 	 lsl r9,r10,#4
 457 0282 C9F10409 	 rsb r9,r9,#4
 458 0286 03F0030E 	 and lr,r3,#3
 459 028a 0132     	 adds r2,r2,#1
 460              	.LVL94:
 461 028c 05EB0903 	 add r3,r5,r9
 462              	.LVL95:
 463 0290 0295     	 str r5,[sp,#8]
 464 0292 A5F11009 	 sub r9,r5,#16
 465 0296 08EB820C 	 add ip,r8,r2,lsl#2
 466 029a 7546     	 mov r5,lr
 467              	.LVL96:
 468 029c 06EB8707 	 add r7,r6,r7,lsl#2
 469              	.LVL97:
 470 02a0 4FEA0A1B 	 lsl fp,r10,#4
 471 02a4 9E46     	 mov lr,r3
 472              	.LVL98:
 473              	.L27:
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 474              	 .loc 1 436 0
 475 02a6 DFED447A 	 flds s15,.L75
 476 02aa 00F11002 	 add r2,r0,#16
 477 02ae 4B46     	 mov r3,r9
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 478              	 .loc 1 439 0
 479 02b0 5146     	 mov r1,r10
 480              	.LVL99:
 481              	.L24:
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 482              	 .loc 1 446 0
 483 02b2 52ED043A 	 flds s7,[r2,#-16]
 484 02b6 93ED044A 	 flds s8,[r3,#16]
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 485              	 .loc 1 447 0
 486 02ba 52ED034A 	 flds s9,[r2,#-12]
 487 02be 93ED035A 	 flds s10,[r3,#12]
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 488              	 .loc 1 448 0
 489 02c2 52ED025A 	 flds s11,[r2,#-8]
 490 02c6 93ED026A 	 flds s12,[r3,#8]
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 491              	 .loc 1 449 0
 492 02ca 52ED016A 	 flds s13,[r2,#-4]
 493 02ce 93ED017A 	 flds s14,[r3,#4]
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 494              	 .loc 1 446 0
 495 02d2 E3EE847A 	 vfma.f32 s15,s7,s8
 496              	.LVL100:
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 497              	 .loc 1 443 0
 498 02d6 0139     	 subs r1,r1,#1
 499              	.LVL101:
 500 02d8 02F11002 	 add r2,r2,#16
 501              	.LVL102:
 502 02dc A3F11003 	 sub r3,r3,#16
 503              	.LVL103:
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 504              	 .loc 1 447 0
 505 02e0 E4EE857A 	 vfma.f32 s15,s9,s10
 506              	.LVL104:
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****         sum += *px++ * *py--;
 507              	 .loc 1 448 0
 508 02e4 E5EE867A 	 vfma.f32 s15,s11,s12
 509              	.LVL105:
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 510              	 .loc 1 449 0
 511 02e8 E6EE877A 	 vfma.f32 s15,s13,s14
 512              	.LVL106:
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 513              	 .loc 1 443 0
 514 02ec E1D1     	 bne .L24
 515 02ee 5844     	 add r0,r0,fp
 516              	.LVL107:
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 517              	 .loc 1 459 0
 518 02f0 4DB1     	 cbz r5,.L25
 519 02f2 7246     	 mov r2,lr
 520 02f4 2B46     	 mov r3,r5
 521              	.LVL108:
 522              	.L26:
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 523              	 .loc 1 462 0
 524 02f6 F0EC016A 	 fldmias r0!,{s13}
 525              	.LVL109:
 526 02fa 32ED017A 	 fldmdbs r2!,{s14}
 527              	.LVL110:
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 528              	 .loc 1 459 0
 529 02fe 013B     	 subs r3,r3,#1
 530              	.LVL111:
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 531              	 .loc 1 462 0
 532 0300 E6EE877A 	 vfma.f32 s15,s13,s14
 533              	.LVL112:
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       {
 534              	 .loc 1 459 0
 535 0304 F7D1     	 bne .L26
 536              	.LVL113:
 537              	.L25:
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 538              	 .loc 1 469 0
 539 0306 E6EC017A 	 fstmias r6!,{s15}
 540              	.LVL114:
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 541              	 .loc 1 433 0
 542 030a BE42     	 cmp r6,r7
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****       py = pSrc2;
 543              	 .loc 1 475 0
 544 030c 6046     	 mov r0,ip
 545              	.LVL115:
 546 030e 0CF1040C 	 add ip,ip,#4
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 547              	 .loc 1 433 0
 548 0312 C8D1     	 bne .L27
 549 0314 019B     	 ldr r3,[sp,#4]
 550 0316 029D     	 ldr r5,[sp,#8]
 551 0318 4FEA8309 	 lsl r9,r3,#2
 552              	.LVL116:
 553              	.L11:
 536:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   px = pSrc1;
 554              	 .loc 1 536 0
 555 031c C844     	 add r8,r8,r9
 556              	.LVL117:
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 557              	 .loc 1 547 0
 558 031e 002C     	 cmp r4,#0
 559 0320 3FF40BAF 	 beq .L1
 560              	.L33:
 561              	.LVL118:
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 562              	 .loc 1 557 0
 563 0324 A008     	 lsrs r0,r4,#2
 564              	.LVL119:
 565 0326 DFED247A 	 flds s15,.L75
 566 032a 3DD0     	 beq .L39
 567              	.L74:
 568 032c 08F11002 	 add r2,r8,#16
 569 0330 A5F11003 	 sub r3,r5,#16
 570 0334 0146     	 mov r1,r0
 571              	.LVL120:
 572              	.L30:
 560:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 573              	 .loc 1 560 0
 574 0336 52ED043A 	 flds s7,[r2,#-16]
 575 033a 93ED044A 	 flds s8,[r3,#16]
 563:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 576              	 .loc 1 563 0
 577 033e 52ED034A 	 flds s9,[r2,#-12]
 578 0342 93ED035A 	 flds s10,[r3,#12]
 566:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 579              	 .loc 1 566 0
 580 0346 52ED025A 	 flds s11,[r2,#-8]
 581 034a 93ED026A 	 flds s12,[r3,#8]
 569:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 582              	 .loc 1 569 0
 583 034e 52ED016A 	 flds s13,[r2,#-4]
 584 0352 93ED017A 	 flds s14,[r3,#4]
 560:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 585              	 .loc 1 560 0
 586 0356 E3EE847A 	 vfma.f32 s15,s7,s8
 587              	.LVL121:
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 588              	 .loc 1 557 0
 589 035a 0139     	 subs r1,r1,#1
 590              	.LVL122:
 591 035c 02F11002 	 add r2,r2,#16
 592              	.LVL123:
 593 0360 A3F11003 	 sub r3,r3,#16
 594              	.LVL124:
 563:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 595              	 .loc 1 563 0
 596 0364 E4EE857A 	 vfma.f32 s15,s9,s10
 597              	.LVL125:
 566:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 598              	 .loc 1 566 0
 599 0368 E5EE867A 	 vfma.f32 s15,s11,s12
 600              	.LVL126:
 569:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 601              	 .loc 1 569 0
 602 036c E6EE877A 	 vfma.f32 s15,s13,s14
 603              	.LVL127:
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 604              	 .loc 1 557 0
 605 0370 E1D1     	 bne .L30
 606 0372 08EB0011 	 add r1,r8,r0,lsl#4
 607 0376 A5EB0012 	 sub r2,r5,r0,lsl#4
 608              	.LVL128:
 609              	.L29:
 579:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 610              	 .loc 1 579 0
 611 037a 14F00303 	 ands r3,r4,#3
 612              	.LVL129:
 613 037e 08D0     	 beq .L31
 614 0380 0432     	 adds r2,r2,#4
 615              	.LVL130:
 616              	.L32:
 583:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 617              	 .loc 1 583 0
 618 0382 F1EC016A 	 fldmias r1!,{s13}
 619              	.LVL131:
 620 0386 32ED017A 	 fldmdbs r2!,{s14}
 621              	.LVL132:
 579:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 622              	 .loc 1 579 0
 623 038a 013B     	 subs r3,r3,#1
 624              	.LVL133:
 583:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 625              	 .loc 1 583 0
 626 038c E6EE877A 	 vfma.f32 s15,s13,s14
 627              	.LVL134:
 579:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 628              	 .loc 1 579 0
 629 0390 F7D1     	 bne .L32
 630              	.LVL135:
 631              	.L31:
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 632              	 .loc 1 547 0
 633 0392 013C     	 subs r4,r4,#1
 634              	.LVL136:
 590:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 635              	 .loc 1 590 0
 636 0394 E7EC017A 	 fstmias r7!,{s15}
 637              	.LVL137:
 593:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     py = pSrc2;
 638              	 .loc 1 593 0
 639 0398 08F10408 	 add r8,r8,#4
 640              	.LVL138:
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   {
 641              	 .loc 1 547 0
 642 039c 3FF4CDAE 	 beq .L1
 643              	.LVL139:
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 644              	 .loc 1 557 0
 645 03a0 A008     	 lsrs r0,r4,#2
 646              	.LVL140:
 647 03a2 DFED057A 	 flds s15,.L75
 648 03a6 C1D1     	 bne .L74
 649              	.L39:
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****   py = pSrc2;
 650              	 .loc 1 270 0
 651 03a8 2A46     	 mov r2,r5
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 652              	 .loc 1 557 0
 653 03aa 4146     	 mov r1,r8
 654 03ac E5E7     	 b .L29
 655              	.LVL141:
 656              	.L36:
 657 03ae 9146     	 mov r9,r2
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 658              	 .loc 1 488 0
 659 03b0 3746     	 mov r7,r6
 660 03b2 B3E7     	 b .L11
 661              	.LVL142:
 662              	.L37:
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 663              	 .loc 1 267 0
 664 03b4 4046     	 mov r0,r8
 665 03b6 5BE7     	 b .L19
 666              	.L76:
 667              	 .align 2
 668              	.L75:
 669 03b8 00000000 	 .word 0
 670              	.LVL143:
 671              	.L72:
 672 03bc 03F18045 	 add r5,r3,#1073741824
 673 03c0 013D     	 subs r5,r5,#1
 674 03c2 81E6     	 b .L3
 675              	.LVL144:
 676              	.L12:
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 677              	 .loc 1 506 0
 678 03c4 019A     	 ldr r2,[sp,#4]
 679              	.LVL145:
 680 03c6 4FEA8209 	 lsl r9,r2,#2
 681 03ca 1946     	 mov r1,r3
 682 03cc 4A46     	 mov r2,r9
 683 03ce 3046     	 mov r0,r6
 684 03d0 FFF7FEFF 	 bl memset
 685              	.LVL146:
 686 03d4 06EB0907 	 add r7,r6,r9
 687 03d8 A0E7     	 b .L11
 688              	.LVL147:
 689              	.L38:
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 690              	 .loc 1 433 0
 691 03da 3746     	 mov r7,r6
 692              	.LVL148:
 693 03dc 4FEA8109 	 lsl r9,r1,#2
 694 03e0 9CE7     	 b .L11
 695              	.LVL149:
 696              	.L14:
 697 03e2 019B     	 ldr r3,[sp,#4]
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 698              	 .loc 1 499 0
 699 03e4 5FED0C5A 	 flds s11,.L75
 700 03e8 4FEA8309 	 lsl r9,r3,#2
 701 03ec 06EB0907 	 add r7,r6,r9
 702 03f0 4346     	 mov r3,r8
 703              	.LVL150:
 704              	.L16:
 705 03f2 93ED006A 	 flds s12,[r3]
 706              	.LVL151:
 707 03f6 D5ED007A 	 flds s15,[r5]
 708 03fa D3ED016A 	 flds s13,[r3,#4]
 709 03fe 15ED017A 	 flds s14,[r5,#-4]
 710 0402 B0EE655A 	 fcpys s10,s11
 711 0406 A6EE275A 	 vfma.f32 s10,s12,s15
 712 040a 0433     	 adds r3,r3,#4
 713              	.LVL152:
 714 040c F0EE457A 	 fcpys s15,s10
 715              	.LVL153:
 716 0410 E6EE877A 	 vfma.f32 s15,s13,s14
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 717              	 .loc 1 506 0
 718 0414 E6EC017A 	 fstmias r6!,{s15}
 719              	.LVL154:
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 720              	 .loc 1 488 0
 721 0418 BE42     	 cmp r6,r7
 722 041a EAD1     	 bne .L16
 723 041c 7EE7     	 b .L11
 724              	.LVL155:
 725              	.L13:
 726 041e 019B     	 ldr r3,[sp,#4]
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 727              	 .loc 1 499 0
 728 0420 5FED1B6A 	 flds s13,.L75
 729 0424 4FEA8309 	 lsl r9,r3,#2
 730 0428 06EB0907 	 add r7,r6,r9
 731 042c 4346     	 mov r3,r8
 732              	.LVL156:
 733              	.L18:
 734 042e B3EC017A 	 fldmias r3!,{s14}
 735              	.LVL157:
 736 0432 D5ED007A 	 flds s15,[r5]
 737 0436 B0EE666A 	 fcpys s12,s13
 738 043a A7EE276A 	 vfma.f32 s12,s14,s15
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c **** 
 739              	 .loc 1 506 0
 740 043e A6EC016A 	 fstmias r6!,{s12}
 741              	.LVL158:
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 742              	 .loc 1 488 0
 743 0442 BE42     	 cmp r6,r7
 744 0444 F3D1     	 bne .L18
 745 0446 69E7     	 b .L11
 746              	.LVL159:
 747              	.L35:
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_conv_f32.c ****     {
 748              	 .loc 1 211 0
 749 0448 4746     	 mov r7,r8
 750 044a 35E6     	 b .L5
 751              	 .cfi_endproc
 752              	.LFE135:
 754              	 .text
 755              	.Letext0:
 756              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 757              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 758              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_f32.c
    {standard input}:20     .text.arm_conv_f32:00000000 $t
    {standard input}:25     .text.arm_conv_f32:00000000 arm_conv_f32
    {standard input}:669    .text.arm_conv_f32:000003b8 $d
    {standard input}:672    .text.arm_conv_f32:000003bc $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
