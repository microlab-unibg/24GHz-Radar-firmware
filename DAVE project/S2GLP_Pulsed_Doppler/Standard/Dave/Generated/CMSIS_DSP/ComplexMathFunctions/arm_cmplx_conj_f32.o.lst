   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_cmplx_conj_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_cmplx_conj_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_cmplx_conj_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_cmplx_conj_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Title:        arm_cmplx_conj_f32.c
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Description:  Floating-point complex conjugate
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @ingroup groupCmplxMath
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @defgroup cmplx_conj Complex Conjugate
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Conjugates the elements of a complex data vector.
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * The <code>pSrc</code> points to the source data and
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <code>pDst</code> points to the where the result should be written.
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <code>numSamples</code> specifies the number of complex samples
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * and the data in each array is stored in an interleaved fashion
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * (real, imag, real, imag, ...).
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Each array has a total of <code>2*numSamples</code> values.
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * The underlying algorithm is used:
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <pre>
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * for(n=0; n<numSamples; n++) {
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *     pDst[(2*n)+0)] = pSrc[(2*n)+0];     // real part
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *     pDst[(2*n)+1)] = -pSrc[(2*n)+1];    // imag part
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * }
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * </pre>
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * There are separate functions for floating-point, Q15, and Q31 data types.
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @addtogroup cmplx_conj
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @{
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @brief  Floating-point complex conjugate.
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  *pSrc points to the input vector
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  *pDst points to the output vector
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  numSamples number of complex samples in each vector
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @return none.
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** void arm_cmplx_conj_f32(
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t * pSrc,
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t * pDst,
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   uint32_t numSamples)
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** {
  28              	 .loc 1 75 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
  34 0000 F0B4     	 push {r4,r5,r6,r7}
  35              	.LCFI0:
  36              	 .cfi_def_cfa_offset 16
  37              	 .cfi_offset 4,-16
  38              	 .cfi_offset 5,-12
  39              	 .cfi_offset 6,-8
  40              	 .cfi_offset 7,-4
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #if defined (ARM_MATH_DSP)
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t inR1, inR2, inR3, inR4;
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t inI1, inI2, inI3, inI4;
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /*loop Unrolling */
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples >> 2u;
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   while (blkCnt > 0u)
  41              	 .loc 1 89 0
  42 0002 9708     	 lsrs r7,r2,#2
  43              	.LVL1:
  44 0004 35D0     	 beq .L2
  45 0006 00F12004 	 add r4,r0,#32
  46 000a 01F12003 	 add r3,r1,#32
  47 000e 3D46     	 mov r5,r7
  48              	.LVL2:
  49              	.L3:
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* C[0]+jC[1] = A[0]+ j (-1) A[1] */
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Calculate Complex Conjugate and then store the results in the destination buffer. */
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read real input samples */
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR1 = pSrc[0];
  50              	 .loc 1 94 0
  51 0010 54F8206C 	 ldr r6,[r4,#-32]
  52              	.LVL3:
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store real samples to destination */
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[0] = inR1;
  53              	 .loc 1 96 0
  54 0014 43F8206C 	 str r6,[r3,#-32]
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR2 = pSrc[2];
  55              	 .loc 1 97 0
  56 0018 54F8186C 	 ldr r6,[r4,#-24]
  57              	.LVL4:
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[2] = inR2;
  58              	 .loc 1 98 0
  59 001c 43F8186C 	 str r6,[r3,#-24]
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR3 = pSrc[4];
  60              	 .loc 1 99 0
  61 0020 54F8106C 	 ldr r6,[r4,#-16]
  62              	.LVL5:
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[4] = inR3;
  63              	 .loc 1 100 0
  64 0024 43F8106C 	 str r6,[r3,#-16]
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR4 = pSrc[6];
  65              	 .loc 1 101 0
  66 0028 54F8086C 	 ldr r6,[r4,#-8]
  67              	.LVL6:
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[6] = inR4;
  68              	 .loc 1 102 0
  69 002c 43F8086C 	 str r6,[r3,#-8]
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI1 = pSrc[1];
  70              	 .loc 1 105 0
  71 0030 14ED076A 	 flds s12,[r4,#-28]
  72              	.LVL7:
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI2 = pSrc[3];
  73              	 .loc 1 106 0
  74 0034 54ED056A 	 flds s13,[r4,#-20]
  75              	.LVL8:
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI1 = -inI1;
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI3 = pSrc[5];
  76              	 .loc 1 112 0
  77 0038 14ED037A 	 flds s14,[r4,#-12]
  78              	.LVL9:
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI2 = -inI2;
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI4 = pSrc[7];
  79              	 .loc 1 118 0
  80 003c 54ED017A 	 flds s15,[r4,#-4]
  81              	.LVL10:
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  82              	 .loc 1 109 0
  83 0040 B1EE466A 	 fnegs s12,s12
  84              	.LVL11:
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  85              	 .loc 1 115 0
  86 0044 F1EE666A 	 fnegs s13,s13
  87              	.LVL12:
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI3 = -inI3;
  88              	 .loc 1 121 0
  89 0048 B1EE477A 	 fnegs s14,s14
  90              	.LVL13:
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary samples to destination */
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[1] = inI1;
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[3] = inI2;
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI4 = -inI4;
  91              	 .loc 1 128 0
  92 004c F1EE677A 	 fnegs s15,s15
  93              	.LVL14:
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
  94              	 .loc 1 89 0
  95 0050 013D     	 subs r5,r5,#1
  96              	.LVL15:
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[3] = inI2;
  97              	 .loc 1 124 0
  98 0052 03ED076A 	 fsts s12,[r3,#-28]
  99              	.LVL16:
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 100              	 .loc 1 125 0
 101 0056 43ED056A 	 fsts s13,[r3,#-20]
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary samples to destination */
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[5] = inI3;
 102              	 .loc 1 131 0
 103 005a 03ED037A 	 fsts s14,[r3,#-12]
 104              	.LVL17:
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* increment source pointer by 8 to process next sampels */
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pSrc += 8u;
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary sample to destination */
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[7] = inI4;
 105              	 .loc 1 137 0
 106 005e 43ED017A 	 fsts s15,[r3,#-4]
 107              	.LVL18:
 108 0062 04F12004 	 add r4,r4,#32
 109              	.LVL19:
 110 0066 03F12003 	 add r3,r3,#32
 111              	.LVL20:
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 112              	 .loc 1 89 0
 113 006a D1D1     	 bne .L3
 114 006c 7F01     	 lsls r7,r7,#5
 115              	.LVL21:
 116 006e 3844     	 add r0,r0,r7
 117              	.LVL22:
 118 0070 3944     	 add r1,r1,r7
 119              	.LVL23:
 120              	.L2:
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* increment destination pointer by 8 to store next samples */
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst += 8u;
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Decrement the loop counter */
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     blkCnt--;
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   }
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****    ** No loop unrolling is used. */
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples % 0x4u;
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #else
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* Run the below code for Cortex-M0 */
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples;
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   while (blkCnt > 0u)
 121              	 .loc 1 157 0
 122 0072 12F00302 	 ands r2,r2,#3
 123              	.LVL24:
 124 0076 11D0     	 beq .L1
 125 0078 0831     	 adds r1,r1,#8
 126              	.LVL25:
 127 007a 0830     	 adds r0,r0,#8
 128              	.LVL26:
 129              	.L5:
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* realOut + j (imagOut) = realIn + j (-1) imagIn */
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Calculate Complex Conjugate and then store the results in the destination buffer. */
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = *pSrc++;
 130              	 .loc 1 161 0
 131 007c 50F8083C 	 ldr r3,[r0,#-8]
 132 0080 41F8083C 	 str r3,[r1,#-8]
 133              	.LVL27:
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = -*pSrc++;
 134              	 .loc 1 162 0
 135 0084 50ED017A 	 flds s15,[r0,#-4]
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 136              	 .loc 1 157 0
 137 0088 013A     	 subs r2,r2,#1
 138              	.LVL28:
 139              	 .loc 1 162 0
 140 008a F1EE677A 	 fnegs s15,s15
 141 008e 41ED017A 	 fsts s15,[r1,#-4]
 142 0092 00F10800 	 add r0,r0,#8
 143              	.LVL29:
 144 0096 01F10801 	 add r1,r1,#8
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 145              	 .loc 1 157 0
 146 009a EFD1     	 bne .L5
 147              	.LVL30:
 148              	.L1:
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Decrement the loop counter */
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     blkCnt--;
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   }
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** }
 149              	 .loc 1 167 0
 150 009c F0BC     	 pop {r4,r5,r6,r7}
 151              	.LCFI1:
 152              	 .cfi_restore 7
 153              	 .cfi_restore 6
 154              	 .cfi_restore 5
 155              	 .cfi_restore 4
 156              	 .cfi_def_cfa_offset 0
 157 009e 7047     	 bx lr
 158              	 .cfi_endproc
 159              	.LFE135:
 161              	 .text
 162              	.Letext0:
 163              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 164              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 165              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_conj_f32.c
    {standard input}:20     .text.arm_cmplx_conj_f32:00000000 $t
    {standard input}:25     .text.arm_cmplx_conj_f32:00000000 arm_cmplx_conj_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
