   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_pid_init_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_pid_init_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_pid_init_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_pid_init_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c"
   1:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * Title:        arm_pid_init_f32.c
   4:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * Description:  Floating-point PID Control initialization function
   5:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  /**
  32:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * @addtogroup PID
  33:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * @{
  34:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  */
  35:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  36:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** /**
  37:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * @brief  Initialization function for the floating-point PID Control.
  38:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * @param[in,out] *S points to an instance of the PID structure.
  39:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state & 1 = reset the s
  40:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * @return none.
  41:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * \par Description:
  42:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * \par
  43:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * The <code>resetStateFlag</code> specifies whether to set state to zero or not. \n
  44:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * The function computes the structure fields: <code>A0</code>, <code>A1</code> <code>A2</code>
  45:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * using the proportional gain( \c Kp), integral gain( \c Ki) and derivative gain( \c Kd)
  46:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  * also sets the state variables to all zeros.
  47:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****  */
  48:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  49:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** void arm_pid_init_f32(
  50:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****   arm_pid_instance_f32 * S,
  51:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****   int32_t resetStateFlag)
  52:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** {
  28              	 .loc 1 52 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
  53:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  54:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****   /* Derived coefficient A0 */
  55:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****   S->A0 = S->Kp + S->Ki + S->Kd;
  34              	 .loc 1 55 0
  35 0000 D0ED086A 	 flds s13,[r0,#32]
  36 0004 90ED067A 	 flds s14,[r0,#24]
  37 0008 D0ED077A 	 flds s15,[r0,#28]
  56:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  57:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****   /* Derived coefficient A1 */
  58:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****   S->A1 = (-S->Kp) - ((float32_t) 2.0 * S->Kd);
  59:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  60:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****   /* Derived coefficient A2 */
  61:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****   S->A2 = S->Kd;
  38              	 .loc 1 61 0
  39 000c C0ED026A 	 fsts s13,[r0,#8]
  58:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  40              	 .loc 1 58 0
  41 0010 B0EE006A 	 fconsts s12,#0
  55:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  42              	 .loc 1 55 0
  43 0014 77EE277A 	 fadds s15,s14,s15
  58:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  44              	 .loc 1 58 0
  45 0018 96EEC67A 	 vfnma.f32 s14,s13,s12
  55:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  46              	 .loc 1 55 0
  47 001c 77EEA67A 	 fadds s15,s15,s13
  58:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  48              	 .loc 1 58 0
  49 0020 80ED017A 	 fsts s14,[r0,#4]
  55:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  50              	 .loc 1 55 0
  51 0024 C0ED007A 	 fsts s15,[r0]
  62:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c **** 
  63:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****   /* Check whether state needs reset or not */
  64:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****   if (resetStateFlag)
  52              	 .loc 1 64 0
  53 0028 61B1     	 cbz r1,.L1
  65:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****   {
  66:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****     /* Clear the state buffer.  The size will be always 3 samples */
  67:../Dave/Generated/CMSIS_DSP/ControllerFunctions/arm_pid_init_f32.c ****     memset(S->state, 0, 3u * sizeof(float32_t));
  54              	 .loc 1 67 0
  55 002a 0023     	 movs r3,#0
  56 002c 0373     	 strb r3,[r0,#12]
  57 002e 4373     	 strb r3,[r0,#13]
  58 0030 8373     	 strb r3,[r0,#14]
  59 0032 C373     	 strb r3,[r0,#15]
  60 0034 0374     	 strb r3,[r0,#16]
  61 0036 4374     	 strb r3,[r0,#17]
  62 0038 8374     	 strb r3,[r0,#18]
  63 003a C374     	 strb r3,[r0,#19]
  64 003c 0375     	 strb r3,[r0,#20]
  65 003e 4375     	 strb r3,[r0,#21]
  66 0040 8375     	 strb r3,[r0,#22]
  67 0042 C375     	 strb r3,[r0,#23]
  68              	.L1:
  69 0044 7047     	 bx lr
  70              	 .cfi_endproc
  71              	.LFE135:
  73 0046 00BF     	 .text
  74              	.Letext0:
  75              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
  76              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
  77              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_pid_init_f32.c
    {standard input}:20     .text.arm_pid_init_f32:00000000 $t
    {standard input}:25     .text.arm_pid_init_f32:00000000 arm_pid_init_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
