   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_mat_sub_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_mat_sub_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_mat_sub_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_mat_sub_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c"
   1:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * Title:        arm_mat_sub_f32.c
   4:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * Description:  Floating-point matrix subtraction
   5:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * @ingroup groupMatrix
  33:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * @defgroup MatrixSub Matrix Subtraction
  37:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  *
  38:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * Subtract two matrices.
  39:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * \image html MatrixSubtraction.gif "Subraction of two 3 x 3 matrices"
  40:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  *
  41:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * The functions check to make sure that
  42:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * <code>pSrcA</code>, <code>pSrcB</code>, and <code>pDst</code> have the same
  43:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * number of rows and columns.
  44:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  */
  45:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  46:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** /**
  47:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * @addtogroup MatrixSub
  48:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * @{
  49:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  */
  50:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  51:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** /**
  52:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * @brief Floating-point matrix subtraction
  53:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * @param[in]       *pSrcA points to the first input matrix structure
  54:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * @param[in]       *pSrcB points to the second input matrix structure
  55:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * @param[out]      *pDst points to output matrix structure
  56:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * @return     		The function returns either
  57:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of siz
  58:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****  */
  59:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  60:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** arm_status arm_mat_sub_f32(
  61:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   const arm_matrix_instance_f32 * pSrcA,
  62:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   const arm_matrix_instance_f32 * pSrcB,
  63:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   arm_matrix_instance_f32 * pDst)
  64:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** {
  28              	 .loc 1 64 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 20
  36              	 .cfi_offset 4,-20
  37              	 .cfi_offset 5,-16
  38              	 .cfi_offset 6,-12
  39              	 .cfi_offset 7,-8
  40              	 .cfi_offset 14,-4
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   float32_t *pIn1 = pSrcA->pData;                /* input data matrix pointer A */
  66:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   float32_t *pIn2 = pSrcB->pData;                /* input data matrix pointer B */
  41              	 .loc 1 66 0
  42 0002 91E89000 	 ldmia r1,{r4,r7}
  67:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   float32_t *pOut = pDst->pData;                 /* output data matrix pointer  */
  68:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  69:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** #if defined (ARM_MATH_DSP)
  70:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  71:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   float32_t inA1, inA2, inB1, inB2, out1, out2;  /* temporary variables */
  72:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  73:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** #endif //      #if defined (ARM_MATH_DSP)
  74:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  75:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   uint32_t numSamples;                           /* total number of elements in the matrix  */
  76:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   uint32_t blkCnt;                               /* loop counters */
  77:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   arm_status status;                             /* status of matrix subtraction */
  78:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  79:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** #ifdef ARM_MATH_MATRIX_CHECK
  80:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   /* Check for matrix mismatch condition */
  81:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   if ((pSrcA->numRows != pSrcB->numRows) ||
  43              	 .loc 1 81 0
  44 0006 0368     	 ldr r3,[r0]
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   float32_t *pIn1 = pSrcA->pData;                /* input data matrix pointer A */
  45              	 .loc 1 65 0
  46 0008 4668     	 ldr r6,[r0,#4]
  47              	.LVL1:
  67:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   float32_t *pOut = pDst->pData;                 /* output data matrix pointer  */
  48              	 .loc 1 67 0
  49 000a 5568     	 ldr r5,[r2,#4]
  50              	.LVL2:
  51              	 .loc 1 81 0
  52 000c A342     	 cmp r3,r4
  53 000e 4FD1     	 bne .L9
  82:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****      (pSrcA->numCols != pSrcB->numCols) ||
  83:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****      (pSrcA->numRows != pDst->numRows) || (pSrcA->numCols != pDst->numCols))
  54              	 .loc 1 83 0
  55 0010 1268     	 ldr r2,[r2]
  56              	.LVL3:
  57 0012 9342     	 cmp r3,r2
  58 0014 4CD1     	 bne .L9
  84:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   {
  85:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  86:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     status = ARM_MATH_SIZE_MISMATCH;
  87:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   }
  88:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   else
  89:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
  90:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   {
  91:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     /* Total number of samples in the input matrix */
  92:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     numSamples = (uint32_t) pSrcA->numRows * pSrcA->numCols;
  59              	 .loc 1 92 0
  60 0016 4288     	 ldrh r2,[r0,#2]
  61 0018 0388     	 ldrh r3,[r0]
  62 001a 03FB02F0 	 mul r0,r3,r2
  63              	.LVL4:
  93:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  94:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** #if defined (ARM_MATH_DSP)
  95:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  96:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     /* Run the below code for Cortex-M4 and Cortex-M3 */
  97:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  98:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     /* Loop Unrolling */
  99:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     blkCnt = numSamples >> 2u;
 100:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 101:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 102:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
 103:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     while (blkCnt > 0u)
  64              	 .loc 1 103 0
  65 001e 5FEA900E 	 lsrs lr,r0,#2
  66              	.LVL5:
  67 0022 33D0     	 beq .L3
  68 0024 06F11001 	 add r1,r6,#16
  69              	.LVL6:
  70 0028 07F11002 	 add r2,r7,#16
  71 002c 05F11003 	 add r3,r5,#16
  72 0030 7446     	 mov r4,lr
  73              	.LVL7:
  74              	.L4:
 104:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     {
 105:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* C(m,n) = A(m,n) - B(m,n) */
 106:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Subtract and then store the results in the destination buffer. */
 107:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Read values from source A */
 108:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       inA1 = pIn1[0];
 109:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 110:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Read values from source B */
 111:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       inB1 = pIn2[0];
 112:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 113:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Read values from source A */
 114:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       inA2 = pIn1[1];
 115:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 116:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* out = sourceA - sourceB */
 117:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       out1 = inA1 - inB1;
 118:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 119:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Read values from source B */
 120:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       inB2 = pIn2[1];
 121:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 122:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Read values from source A */
 123:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       inA1 = pIn1[2];
 124:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 125:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* out = sourceA - sourceB */
 126:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       out2 = inA2 - inB2;
  75              	 .loc 1 126 0
  76 0032 51ED036A 	 flds s13,[r1,#-12]
  77 0036 12ED035A 	 flds s10,[r2,#-12]
 117:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  78              	 .loc 1 117 0
  79 003a 51ED047A 	 flds s15,[r1,#-16]
  80 003e 52ED045A 	 flds s11,[r2,#-16]
 123:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  81              	 .loc 1 123 0
  82 0042 11ED027A 	 flds s14,[r1,#-8]
  83              	.LVL8:
 127:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 128:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Read values from source B */
 129:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       inB1 = pIn2[2];
  84              	 .loc 1 129 0
  85 0046 12ED026A 	 flds s12,[r2,#-8]
 126:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  86              	 .loc 1 126 0
  87 004a 76EEC56A 	 fsubs s13,s13,s10
  88              	.LVL9:
 117:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
  89              	 .loc 1 117 0
  90 004e 77EEE57A 	 fsubs s15,s15,s11
  91              	.LVL10:
 130:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 131:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Store result in destination */
 132:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       pOut[0] = out1;
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       pOut[1] = out2;
  92              	 .loc 1 133 0
  93 0052 43ED036A 	 fsts s13,[r3,#-12]
  94              	.LVL11:
 132:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       pOut[1] = out2;
  95              	 .loc 1 132 0
  96 0056 43ED047A 	 fsts s15,[r3,#-16]
  97              	.LVL12:
 134:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 135:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Read values from source A */
 136:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       inA2 = pIn1[3];
 137:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 138:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Read values from source B */
 139:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       inB2 = pIn2[3];
 140:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 141:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* out = sourceA - sourceB */
 142:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       out1 = inA1 - inB1;
 143:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 144:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 145:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* out = sourceA - sourceB */
 146:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       out2 = inA2 - inB2;
  98              	 .loc 1 146 0
  99 005a 51ED017A 	 flds s15,[r1,#-4]
 100 005e 52ED016A 	 flds s13,[r2,#-4]
 101              	.LVL13:
 142:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 102              	 .loc 1 142 0
 103 0062 37EE467A 	 fsubs s14,s14,s12
 104              	.LVL14:
 105              	 .loc 1 146 0
 106 0066 77EEE67A 	 fsubs s15,s15,s13
 107              	.LVL15:
 103:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     {
 108              	 .loc 1 103 0
 109 006a 013C     	 subs r4,r4,#1
 110              	.LVL16:
 147:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 148:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Store result in destination */
 149:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       pOut[2] = out1;
 111              	 .loc 1 149 0
 112 006c 03ED027A 	 fsts s14,[r3,#-8]
 150:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 151:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Store result in destination */
 152:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       pOut[3] = out2;
 113              	 .loc 1 152 0
 114 0070 43ED017A 	 fsts s15,[r3,#-4]
 115              	.LVL17:
 116 0074 01F11001 	 add r1,r1,#16
 117 0078 02F11002 	 add r2,r2,#16
 118 007c 03F11003 	 add r3,r3,#16
 103:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     {
 119              	 .loc 1 103 0
 120 0080 D7D1     	 bne .L4
 121 0082 4FEA0E13 	 lsl r3,lr,#4
 122 0086 1E44     	 add r6,r6,r3
 123 0088 1F44     	 add r7,r7,r3
 124 008a 1D44     	 add r5,r5,r3
 125              	.LVL18:
 126              	.L3:
 153:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 154:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 155:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* update pointers to process next sampels */
 156:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       pIn1 += 4u;
 157:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       pIn2 += 4u;
 158:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       pOut += 4u;
 159:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 160:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Decrement the loop counter */
 161:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       blkCnt--;
 162:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     }
 163:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 164:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 165:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****      ** No loop unrolling is used. */
 166:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     blkCnt = numSamples % 0x4u;
 167:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 168:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** #else
 169:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 170:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     /* Run the below code for Cortex-M0 */
 171:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 172:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     /* Initialize blkCnt with number of samples */
 173:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     blkCnt = numSamples;
 174:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 175:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 176:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 177:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     while (blkCnt > 0u)
 127              	 .loc 1 177 0
 128 008c 10F00303 	 ands r3,r0,#3
 129              	.LVL19:
 130 0090 18BF     	 it ne
 131 0092 2A46     	 movne r2,r5
 132 0094 09D0     	 beq .L7
 133              	.LVL20:
 134              	.L6:
 178:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     {
 179:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* C(m,n) = A(m,n) - B(m,n) */
 180:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Subtract and then store the results in the destination buffer. */
 181:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       *pOut++ = (*pIn1++) - (*pIn2++);
 135              	 .loc 1 181 0
 136 0096 F6EC017A 	 fldmias r6!,{s15}
 137              	.LVL21:
 138 009a B7EC017A 	 fldmias r7!,{s14}
 139              	.LVL22:
 140 009e 77EEC77A 	 fsubs s15,s15,s14
 177:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     {
 141              	 .loc 1 177 0
 142 00a2 013B     	 subs r3,r3,#1
 143              	.LVL23:
 144              	 .loc 1 181 0
 145 00a4 E2EC017A 	 fstmias r2!,{s15}
 177:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     {
 146              	 .loc 1 177 0
 147 00a8 F5D1     	 bne .L6
 148              	.LVL24:
 149              	.L7:
 182:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 183:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       /* Decrement the loop counter */
 184:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****       blkCnt--;
 185:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     }
 186:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 187:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     /* Set status as ARM_MATH_SUCCESS */
 188:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****     status = ARM_MATH_SUCCESS;
 150              	 .loc 1 188 0
 151 00aa 0020     	 movs r0,#0
 152              	.LVL25:
 189:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   }
 190:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** 
 191:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   /* Return to application */
 192:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   return (status);
 193:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c **** }
 153              	 .loc 1 193 0
 154 00ac 40B2     	 sxtb r0,r0
 155 00ae F0BD     	 pop {r4,r5,r6,r7,pc}
 156              	.LVL26:
 157              	.L9:
  86:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_sub_f32.c ****   }
 158              	 .loc 1 86 0
 159 00b0 FD20     	 movs r0,#253
 160              	.LVL27:
 161              	 .loc 1 193 0
 162 00b2 40B2     	 sxtb r0,r0
 163 00b4 F0BD     	 pop {r4,r5,r6,r7,pc}
 164              	 .cfi_endproc
 165              	.LFE135:
 167 00b6 00BF     	 .text
 168              	.Letext0:
 169              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 170              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 171              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_sub_f32.c
    {standard input}:20     .text.arm_mat_sub_f32:00000000 $t
    {standard input}:25     .text.arm_mat_sub_f32:00000000 arm_mat_sub_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
