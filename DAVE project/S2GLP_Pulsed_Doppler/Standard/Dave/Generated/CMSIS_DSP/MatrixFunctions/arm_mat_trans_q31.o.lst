   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_mat_trans_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_mat_trans_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_mat_trans_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_mat_trans_q31:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c"
   1:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * Title:        arm_mat_trans_q31.c
   4:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * Description:  Q31 matrix transpose
   5:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * @ingroup groupMatrix
  33:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * @addtogroup MatrixTrans
  37:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  */
  39:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  40:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** /*
  41:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   * @brief Q31 matrix transpose.
  42:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   * @param[in]  *pSrc points to the input matrix
  43:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   * @param[out] *pDst points to the output matrix
  44:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   * @return 	The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
  45:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
  46:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  */
  47:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  48:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** arm_status arm_mat_trans_q31(
  49:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   const arm_matrix_instance_q31 * pSrc,
  50:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   arm_matrix_instance_q31 * pDst)
  51:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** {
  28              	 .loc 1 51 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 36
  36              	 .cfi_offset 4,-36
  37              	 .cfi_offset 5,-32
  38              	 .cfi_offset 6,-28
  39              	 .cfi_offset 7,-24
  40              	 .cfi_offset 8,-20
  41              	 .cfi_offset 9,-16
  42              	 .cfi_offset 10,-12
  43              	 .cfi_offset 11,-8
  44              	 .cfi_offset 14,-4
  52:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   q31_t *pIn = pSrc->pData;                      /* input data matrix pointer  */
  53:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   q31_t *pOut = pDst->pData;                     /* output data matrix pointer  */
  54:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  55:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   uint16_t nRows = pSrc->numRows;                /* number of nRows */
  45              	 .loc 1 55 0
  46 0004 B0F800C0 	 ldrh ip,[r0]
  56:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   uint16_t nColumns = pSrc->numCols;             /* number of nColumns  */
  57:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  58:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #if defined (ARM_MATH_DSP)
  59:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  60:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  61:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  62:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   uint16_t blkCnt, i = 0u, row = nRows;          /* loop counters */
  63:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   arm_status status;                             /* status of matrix transpose */
  64:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  66:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
  67:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  68:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  69:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   /* Check for matrix mismatch condition */
  70:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   if ((pSrc->numRows != pDst->numCols) || (pSrc->numCols != pDst->numRows))
  47              	 .loc 1 70 0
  48 0008 4A88     	 ldrh r2,[r1,#2]
  52:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   q31_t *pIn = pSrc->pData;                      /* input data matrix pointer  */
  49              	 .loc 1 52 0
  50 000a 4568     	 ldr r5,[r0,#4]
  51              	.LVL1:
  56:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   uint16_t nColumns = pSrc->numCols;             /* number of nColumns  */
  52              	 .loc 1 56 0
  53 000c 4388     	 ldrh r3,[r0,#2]
  53:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  54              	 .loc 1 53 0
  55 000e D1F804A0 	 ldr r10,[r1,#4]
  56              	.LVL2:
  57              	 .loc 1 70 0
  58 0012 6245     	 cmp r2,ip
  51:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   q31_t *pIn = pSrc->pData;                      /* input data matrix pointer  */
  59              	 .loc 1 51 0
  60 0014 85B0     	 sub sp,sp,#20
  61              	.LCFI1:
  62              	 .cfi_def_cfa_offset 56
  63              	 .loc 1 70 0
  64 0016 57D1     	 bne .L9
  65              	 .loc 1 70 0 is_stmt 0 discriminator 1
  66 0018 B1F800E0 	 ldrh lr,[r1]
  67 001c 9E45     	 cmp lr,r3
  68 001e 53D1     	 bne .L9
  69 0020 4FEA9E03 	 lsr r3,lr,#2
  70              	.LVL3:
  71 0024 0EF00302 	 and r2,lr,#3
  72 0028 0393     	 str r3,[sp,#12]
  73 002a 0292     	 str r2,[sp,#8]
  74 002c 013B     	 subs r3,r3,#1
  75 002e 013A     	 subs r2,r2,#1
  76 0030 9BB2     	 uxth r3,r3
  77 0032 92B2     	 uxth r2,r2
  78 0034 03F10209 	 add r9,r3,#2
  79 0038 511C     	 adds r1,r2,#1
  80              	.LVL4:
  81 003a 0133     	 adds r3,r3,#1
  82 003c 4FEA0C17 	 lsl r7,ip,#4
  83 0040 4FEA8108 	 lsl r8,r1,#2
  84 0044 4FEA0919 	 lsl r9,r9,#4
  85 0048 4FEA031B 	 lsl fp,r3,#4
  86 004c 03FB07F7 	 mul r7,r3,r7
  87 0050 4FEA820E 	 lsl lr,r2,#2
  88 0054 4FEA8C01 	 lsl r1,ip,#2
  89              	 .loc 1 70 0
  90 0058 0026     	 movs r6,#0
  91              	.LVL5:
  92              	.L7:
  71:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   {
  72:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  73:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
  74:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   }
  75:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   else
  76:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
  77:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  78:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   {
  79:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* Matrix transpose by exchanging the rows with columns */
  80:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* row loop     */
  81:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     do
  82:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     {
  83:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* Apply loop unrolling and exchange the columns with row elements */
  84:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       blkCnt = nColumns >> 2u;
  85:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  86:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* The pointer px is set to starting address of the column being processed */
  87:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       px = pOut + i;
  88:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  89:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  90:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****        ** a second loop below computes the remaining 1 to 3 samples. */
  91:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       while (blkCnt > 0u)
  93              	 .loc 1 91 0 is_stmt 1
  94 005a 039B     	 ldr r3,[sp,#12]
  87:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  95              	 .loc 1 87 0
  96 005c 0AEB8600 	 add r0,r10,r6,lsl#2
  97              	.LVL6:
  98              	 .loc 1 91 0
  99 0060 EBB1     	 cbz r3,.L3
 100 0062 05F11002 	 add r2,r5,#16
 101 0066 05EB0904 	 add r4,r5,r9
 102 006a 0346     	 mov r3,r0
 103 006c 0190     	 str r0,[sp,#4]
 104              	.LVL7:
 105              	.L4:
  92:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       {
  93:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
  94:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
 106              	 .loc 1 94 0
 107 006e 52F8100C 	 ldr r0,[r2,#-16]
 108 0072 1860     	 str r0,[r3]
  95:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  96:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
  97:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
  98:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  99:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
 100:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
 109              	 .loc 1 100 0
 110 0074 52F80C0C 	 ldr r0,[r2,#-12]
 111 0078 5850     	 str r0,[r3,r1]
 101:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 102:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 103:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
 104:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 105:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
 106:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
 112              	 .loc 1 106 0
 113 007a 52F8080C 	 ldr r0,[r2,#-8]
 114 007e 43F81100 	 str r0,[r3,r1,lsl#1]
 115 0082 0B44     	 add r3,r3,r1
 116              	.LVL8:
 107:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 108:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 109:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
 110:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 111:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
 112:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
 117              	 .loc 1 112 0
 118 0084 52F8040C 	 ldr r0,[r2,#-4]
 119 0088 43F81100 	 str r0,[r3,r1,lsl#1]
 120 008c 1032     	 adds r2,r2,#16
 121              	.LVL9:
 122 008e 03EB4103 	 add r3,r3,r1,lsl#1
 123              	.LVL10:
  91:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       {
 124              	 .loc 1 91 0
 125 0092 A242     	 cmp r2,r4
 126 0094 0B44     	 add r3,r3,r1
 127              	.LVL11:
 128 0096 EAD1     	 bne .L4
 129 0098 0198     	 ldr r0,[sp,#4]
 130 009a 5D44     	 add r5,r5,fp
 131 009c 3844     	 add r0,r0,r7
 132              	.LVL12:
 133              	.L3:
 113:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 114:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 115:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
 116:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 117:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Decrement the column loop counter */
 118:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         blkCnt--;
 119:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       }
 120:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 121:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* Perform matrix transpose for last 3 samples here. */
 122:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       blkCnt = nColumns % 0x4u;
 123:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 124:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       while (blkCnt > 0u)
 134              	 .loc 1 124 0
 135 009e 029B     	 ldr r3,[sp,#8]
 136 00a0 4BB1     	 cbz r3,.L5
 137 00a2 2B1F     	 subs r3,r5,#4
 138 00a4 05EB0E04 	 add r4,r5,lr
 139              	.LVL13:
 140              	.L6:
 125:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       {
 126:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
 127:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
 141              	 .loc 1 127 0
 142 00a8 53F8042F 	 ldr r2,[r3,#4]!
 143              	.LVL14:
 144 00ac 0260     	 str r2,[r0]
 124:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       {
 145              	 .loc 1 124 0
 146 00ae A342     	 cmp r3,r4
 128:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 129:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 130:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
 147              	 .loc 1 130 0
 148 00b0 0844     	 add r0,r0,r1
 149              	.LVL15:
 124:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       {
 150              	 .loc 1 124 0
 151 00b2 F9D1     	 bne .L6
 152 00b4 4544     	 add r5,r5,r8
 153              	.LVL16:
 154              	.L5:
 131:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 132:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Decrement the column loop counter */
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         blkCnt--;
 134:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       }
 135:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 136:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #else
 137:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 138:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   /* Run the below code for Cortex-M0 */
 139:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 140:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   uint16_t col, i = 0u, row = nRows;             /* loop counters */
 141:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   arm_status status;                             /* status of matrix transpose */
 142:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 143:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 144:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
 145:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 146:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   /* Check for matrix mismatch condition */
 147:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   if ((pSrc->numRows != pDst->numCols) || (pSrc->numCols != pDst->numRows))
 148:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   {
 149:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 150:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
 151:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   }
 152:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   else
 153:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
 154:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 155:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   {
 156:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* Matrix transpose by exchanging the rows with columns */
 157:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* row loop     */
 158:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     do
 159:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     {
 160:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* The pointer px is set to starting address of the column being processed */
 161:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       px = pOut + i;
 162:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 163:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* Initialize column loop counter */
 164:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       col = nColumns;
 165:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 166:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       while (col > 0u)
 167:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       {
 168:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
 169:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
 170:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 171:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 172:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
 173:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 174:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Decrement the column loop counter */
 175:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         col--;
 176:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       }
 177:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 178:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #endif /* #if defined (ARM_MATH_DSP) */
 179:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 180:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       i++;
 155              	 .loc 1 180 0
 156 00b6 0136     	 adds r6,r6,#1
 157              	.LVL17:
 158 00b8 B6B2     	 uxth r6,r6
 159              	.LVL18:
 181:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 182:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* Decrement the row loop counter */
 183:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       row--;
 184:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 185:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     }
 186:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     while (row > 0u);            /* row loop end */
 160              	 .loc 1 186 0
 161 00ba 6645     	 cmp r6,ip
 162 00bc CDD1     	 bne .L7
 187:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 188:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* set status as ARM_MATH_SUCCESS */
 189:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     status = ARM_MATH_SUCCESS;
 163              	 .loc 1 189 0
 164 00be 0020     	 movs r0,#0
 165              	.LVL19:
 190:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   }
 191:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 192:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   /* Return to application */
 193:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   return (status);
 194:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** }
 166              	 .loc 1 194 0
 167 00c0 40B2     	 sxtb r0,r0
 168 00c2 05B0     	 add sp,sp,#20
 169              	.LCFI2:
 170              	 .cfi_remember_state
 171              	 .cfi_def_cfa_offset 36
 172              	 
 173 00c4 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 174              	.LVL20:
 175              	.L9:
 176              	.LCFI3:
 177              	 .cfi_restore_state
  73:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   }
 178              	 .loc 1 73 0
 179 00c8 FD20     	 movs r0,#253
 180              	.LVL21:
 181              	 .loc 1 194 0
 182 00ca 40B2     	 sxtb r0,r0
 183 00cc 05B0     	 add sp,sp,#20
 184              	.LCFI4:
 185              	 .cfi_def_cfa_offset 36
 186              	 
 187 00ce BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 188              	 .cfi_endproc
 189              	.LFE135:
 191 00d2 00BF     	 .text
 192              	.Letext0:
 193              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 194              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 195              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_trans_q31.c
    {standard input}:20     .text.arm_mat_trans_q31:00000000 $t
    {standard input}:25     .text.arm_mat_trans_q31:00000000 arm_mat_trans_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
