   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_mat_trans_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_mat_trans_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_mat_trans_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_mat_trans_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c"
   1:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * Title:        arm_mat_trans_f32.c
   4:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * Description:  Floating-point matrix transpose
   5:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** /**
  30:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * @defgroup MatrixTrans Matrix Transpose
  31:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  *
  32:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * Tranposes a matrix.
  33:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * Transposing an <code>M x N</code> matrix flips it around the center diagonal and results in an <
  34:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * \image html MatrixTranspose.gif "Transpose of a 3 x 3 matrix"
  35:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  */
  36:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  37:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  38:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  39:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** /**
  40:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * @ingroup groupMatrix
  41:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  */
  42:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  43:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** /**
  44:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * @addtogroup MatrixTrans
  45:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  * @{
  46:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****  */
  47:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  48:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** /**
  49:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   * @brief Floating-point matrix transpose.
  50:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   * @param[in]  *pSrc points to the input matrix
  51:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   * @param[out] *pDst points to the output matrix
  52:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   * @return 	The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
  53:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
  54:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   */
  55:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  56:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  57:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** arm_status arm_mat_trans_f32(
  58:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   const arm_matrix_instance_f32 * pSrc,
  59:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   arm_matrix_instance_f32 * pDst)
  60:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** {
  28              	 .loc 1 60 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 36
  36              	 .cfi_offset 4,-36
  37              	 .cfi_offset 5,-32
  38              	 .cfi_offset 6,-28
  39              	 .cfi_offset 7,-24
  40              	 .cfi_offset 8,-20
  41              	 .cfi_offset 9,-16
  42              	 .cfi_offset 10,-12
  43              	 .cfi_offset 11,-8
  44              	 .cfi_offset 14,-4
  61:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *pIn = pSrc->pData;                  /* input data matrix pointer */
  62:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *pOut = pDst->pData;                 /* output data matrix pointer */
  63:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *px;                                 /* Temporary output data matrix pointer */
  64:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   uint16_t nRows = pSrc->numRows;                /* number of rows */
  45              	 .loc 1 64 0
  46 0004 B0F800C0 	 ldrh ip,[r0]
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   uint16_t nColumns = pSrc->numCols;             /* number of columns */
  66:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  67:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** #if defined (ARM_MATH_DSP)
  68:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  69:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  70:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  71:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   uint16_t blkCnt, i = 0u, row = nRows;          /* loop counters */
  72:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   arm_status status;                             /* status of matrix transpose  */
  73:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  74:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  75:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** #ifdef ARM_MATH_MATRIX_CHECK
  76:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  77:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  78:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   /* Check for matrix mismatch condition */
  79:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   if ((pSrc->numRows != pDst->numCols) || (pSrc->numCols != pDst->numRows))
  47              	 .loc 1 79 0
  48 0008 4A88     	 ldrh r2,[r1,#2]
  61:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *pIn = pSrc->pData;                  /* input data matrix pointer */
  49              	 .loc 1 61 0
  50 000a 4468     	 ldr r4,[r0,#4]
  51              	.LVL1:
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   uint16_t nColumns = pSrc->numCols;             /* number of columns */
  52              	 .loc 1 65 0
  53 000c 4388     	 ldrh r3,[r0,#2]
  62:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *px;                                 /* Temporary output data matrix pointer */
  54              	 .loc 1 62 0
  55 000e D1F804A0 	 ldr r10,[r1,#4]
  56              	.LVL2:
  57              	 .loc 1 79 0
  58 0012 6245     	 cmp r2,ip
  60:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   float32_t *pIn = pSrc->pData;                  /* input data matrix pointer */
  59              	 .loc 1 60 0
  60 0014 83B0     	 sub sp,sp,#12
  61              	.LCFI1:
  62              	 .cfi_def_cfa_offset 48
  63              	 .loc 1 79 0
  64 0016 5FD1     	 bne .L9
  65              	 .loc 1 79 0 is_stmt 0 discriminator 1
  66 0018 B1F800E0 	 ldrh lr,[r1]
  67 001c 9E45     	 cmp lr,r3
  68 001e 5BD1     	 bne .L9
  69 0020 4FEA9E08 	 lsr r8,lr,#2
  70 0024 0EF00303 	 and r3,lr,#3
  71              	.LVL3:
  72 0028 1A46     	 mov r2,r3
  73 002a 0193     	 str r3,[sp,#4]
  74 002c 08F1FF33 	 add r3,r8,#-1
  75 0030 9BB2     	 uxth r3,r3
  76 0032 03F10209 	 add r9,r3,#2
  77 0036 013A     	 subs r2,r2,#1
  78 0038 0133     	 adds r3,r3,#1
  79 003a 4FEA0C17 	 lsl r7,ip,#4
  80 003e 03FB07F7 	 mul r7,r3,r7
  81 0042 92B2     	 uxth r2,r2
  82 0044 0132     	 adds r2,r2,#1
  83 0046 4FEA031B 	 lsl fp,r3,#4
  84              	 .loc 1 79 0
  85 004a 3B46     	 mov r3,r7
  86 004c 4FEA0919 	 lsl r9,r9,#4
  87 0050 4746     	 mov r7,r8
  88 0052 4FEA820E 	 lsl lr,r2,#2
  89 0056 4FEA8C01 	 lsl r1,ip,#2
  90              	.LVL4:
  91 005a 0026     	 movs r6,#0
  92 005c 9846     	 mov r8,r3
  93              	.LVL5:
  94              	.L7:
  80:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   {
  81:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  82:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     status = ARM_MATH_SIZE_MISMATCH;
  83:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   }
  84:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   else
  85:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
  86:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  87:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   {
  88:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     /* Matrix transpose by exchanging the rows with columns */
  89:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     /* row loop     */
  90:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     do
  91:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     {
  92:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       /* Loop Unrolling */
  93:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       blkCnt = nColumns >> 2;
  94:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  95:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       /* The pointer px is set to starting address of the column being processed */
  96:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       px = pOut + i;
  95              	 .loc 1 96 0 is_stmt 1
  96 005e 0AEB8600 	 add r0,r10,r6,lsl#2
  97              	.LVL6:
  97:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
  98:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  99:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****        ** a second loop below computes the remaining 1 to 3 samples. */
 100:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       while (blkCnt > 0u)        /* column loop */
  98              	 .loc 1 100 0
  99 0062 BFB3     	 cbz r7,.L10
 100 0064 04F11002 	 add r2,r4,#16
 101 0068 04EB0905 	 add r5,r4,r9
 102 006c 0346     	 mov r3,r0
 103              	.LVL7:
 104              	.L4:
 101:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       {
 102:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Read and store the input element in the destination */
 103:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
 105              	 .loc 1 103 0
 106 006e 52ED047A 	 flds s15,[r2,#-16]
 107 0072 C3ED007A 	 fsts s15,[r3]
 104:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 105:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 106:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 107:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 108:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Read and store the input element in the destination */
 109:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
 108              	 .loc 1 109 0
 109 0076 52ED037A 	 flds s15,[r2,#-12]
 110 007a 0B44     	 add r3,r3,r1
 111              	.LVL8:
 112 007c C3ED007A 	 fsts s15,[r3]
 110:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 111:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 112:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 113:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 114:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Read and store the input element in the destination */
 115:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
 113              	 .loc 1 115 0
 114 0080 52ED027A 	 flds s15,[r2,#-8]
 115 0084 0B44     	 add r3,r3,r1
 116              	.LVL9:
 117 0086 C3ED007A 	 fsts s15,[r3]
 116:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 117:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 118:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 119:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 120:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Read and store the input element in the destination */
 121:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
 118              	 .loc 1 121 0
 119 008a 52ED017A 	 flds s15,[r2,#-4]
 120 008e 1032     	 adds r2,r2,#16
 121              	.LVL10:
 122 0090 0B44     	 add r3,r3,r1
 123              	.LVL11:
 100:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       {
 124              	 .loc 1 100 0
 125 0092 AA42     	 cmp r2,r5
 126              	 .loc 1 121 0
 127 0094 C3ED007A 	 fsts s15,[r3]
 128 0098 0B44     	 add r3,r3,r1
 129              	.LVL12:
 100:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       {
 130              	 .loc 1 100 0
 131 009a E8D1     	 bne .L4
 132 009c 04EB0B03 	 add r3,r4,fp
 133              	.LVL13:
 134 00a0 4044     	 add r0,r0,r8
 135              	.L3:
 136              	.LVL14:
 122:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 123:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 124:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 125:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 126:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Decrement the column loop counter */
 127:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         blkCnt--;
 128:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       }
 129:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 130:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       /* Perform matrix transpose for last 3 samples here. */
 131:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       blkCnt = nColumns % 0x4u;
 132:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       while (blkCnt > 0u)
 137              	 .loc 1 133 0
 138 00a2 019A     	 ldr r2,[sp,#4]
 139 00a4 82B1     	 cbz r2,.L11
 140 00a6 03EB0E04 	 add r4,r3,lr
 141              	.LVL15:
 142              	.L6:
 134:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       {
 135:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Read and store the input element in the destination */
 136:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
 143              	 .loc 1 136 0
 144 00aa 53F8042B 	 ldr r2,[r3],#4
 145              	.LVL16:
 146 00ae 0260     	 str r2,[r0]
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       {
 147              	 .loc 1 133 0
 148 00b0 A342     	 cmp r3,r4
 137:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 138:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 139:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 149              	 .loc 1 139 0
 150 00b2 0844     	 add r0,r0,r1
 151              	.LVL17:
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       {
 152              	 .loc 1 133 0
 153 00b4 F9D1     	 bne .L6
 140:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 141:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Decrement the column loop counter */
 142:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         blkCnt--;
 143:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       }
 144:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 145:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** #else
 146:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 147:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   /* Run the below code for Cortex-M0 */
 148:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 149:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   uint16_t col, i = 0u, row = nRows;             /* loop counters */
 150:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   arm_status status;                             /* status of matrix transpose  */
 151:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 152:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 153:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** #ifdef ARM_MATH_MATRIX_CHECK
 154:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 155:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   /* Check for matrix mismatch condition */
 156:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   if ((pSrc->numRows != pDst->numCols) || (pSrc->numCols != pDst->numRows))
 157:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   {
 158:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 159:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     status = ARM_MATH_SIZE_MISMATCH;
 160:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   }
 161:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   else
 162:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** #endif /*      #ifdef ARM_MATH_MATRIX_CHECK    */
 163:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 164:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   {
 165:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     /* Matrix transpose by exchanging the rows with columns */
 166:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     /* row loop     */
 167:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     do
 168:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     {
 169:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       /* The pointer px is set to starting address of the column being processed */
 170:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       px = pOut + i;
 171:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 172:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       /* Initialize column loop counter */
 173:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       col = nColumns;
 174:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 175:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       while (col > 0u)
 176:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       {
 177:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Read and store the input element in the destination */
 178:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         *px = *pIn++;
 179:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 180:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 181:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         px += nRows;
 182:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 183:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         /* Decrement the column loop counter */
 184:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****         col--;
 185:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       }
 186:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 187:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 188:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 189:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       i++;
 154              	 .loc 1 189 0
 155 00b6 0136     	 adds r6,r6,#1
 156              	.LVL18:
 157 00b8 B6B2     	 uxth r6,r6
 158              	.LVL19:
 190:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 191:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       /* Decrement the row loop counter */
 192:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       row--;
 193:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 194:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     } while (row > 0u);          /* row loop end  */
 159              	 .loc 1 194 0
 160 00ba 6645     	 cmp r6,ip
 161 00bc CFD1     	 bne .L7
 162              	.LVL20:
 163              	.L17:
 195:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 196:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     /* Set status as ARM_MATH_SUCCESS */
 197:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****     status = ARM_MATH_SUCCESS;
 164              	 .loc 1 197 0
 165 00be 0020     	 movs r0,#0
 166              	.LVL21:
 198:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   }
 199:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 200:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   /* Return to application */
 201:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   return (status);
 202:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** }
 167              	 .loc 1 202 0
 168 00c0 40B2     	 sxtb r0,r0
 169 00c2 03B0     	 add sp,sp,#12
 170              	.LCFI2:
 171              	 .cfi_remember_state
 172              	 .cfi_def_cfa_offset 36
 173              	 
 174 00c4 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 175              	.LVL22:
 176              	.L11:
 177              	.LCFI3:
 178              	 .cfi_restore_state
 189:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 179              	 .loc 1 189 0
 180 00c8 0136     	 adds r6,r6,#1
 181              	.LVL23:
 182 00ca B6B2     	 uxth r6,r6
 183              	.LVL24:
 194:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 184              	 .loc 1 194 0
 185 00cc 6645     	 cmp r6,ip
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       {
 186              	 .loc 1 133 0
 187 00ce 1C46     	 mov r4,r3
 194:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c **** 
 188              	 .loc 1 194 0
 189 00d0 C5D1     	 bne .L7
 190 00d2 F4E7     	 b .L17
 191              	.LVL25:
 192              	.L10:
 100:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****       {
 193              	 .loc 1 100 0
 194 00d4 2346     	 mov r3,r4
 195 00d6 E4E7     	 b .L3
 196              	.LVL26:
 197              	.L9:
  82:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_f32.c ****   }
 198              	 .loc 1 82 0
 199 00d8 FD20     	 movs r0,#253
 200              	.LVL27:
 201              	 .loc 1 202 0
 202 00da 40B2     	 sxtb r0,r0
 203 00dc 03B0     	 add sp,sp,#12
 204              	.LCFI4:
 205              	 .cfi_def_cfa_offset 36
 206              	 
 207 00de BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 208              	 .cfi_endproc
 209              	.LFE135:
 211 00e2 00BF     	 .text
 212              	.Letext0:
 213              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 214              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 215              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_trans_f32.c
    {standard input}:20     .text.arm_mat_trans_f32:00000000 $t
    {standard input}:25     .text.arm_mat_trans_f32:00000000 arm_mat_trans_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
