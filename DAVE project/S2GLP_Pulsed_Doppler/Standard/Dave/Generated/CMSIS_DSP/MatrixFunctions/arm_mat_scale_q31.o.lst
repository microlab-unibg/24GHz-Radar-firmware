   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_mat_scale_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_mat_scale_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_mat_scale_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_mat_scale_q31:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c"
   1:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * Title:        arm_mat_scale_q31.c
   4:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * Description:  Multiplies a Q31 matrix by a scalar
   5:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * @ingroup groupMatrix
  33:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * @addtogroup MatrixScale
  37:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  */
  39:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  40:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** /**
  41:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * @brief Q31 matrix scaling.
  42:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * @param[in]       *pSrc points to input matrix
  43:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * @param[in]       scaleFract fractional portion of the scale factor
  44:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * @param[in]       shift number of bits to shift the result by
  45:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * @param[out]      *pDst points to output matrix structure
  46:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * @return     		The function returns either
  47:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of siz
  48:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  *
  49:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * @details
  50:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * <b>Scaling and Overflow Behavior:</b>
  51:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * \par
  52:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * The input data <code>*pSrc</code> and <code>scaleFract</code> are in 1.31 format.
  53:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  * These are multiplied to yield a 2.62 intermediate result and this is shifted with saturation to 
  54:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****  */
  55:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  56:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** arm_status arm_mat_scale_q31(
  57:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   const arm_matrix_instance_q31 * pSrc,
  58:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   q31_t scaleFract,
  59:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   int32_t shift,
  60:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   arm_matrix_instance_q31 * pDst)
  61:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** {
  28              	 .loc 1 61 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 36
  36              	 .cfi_offset 4,-36
  37              	 .cfi_offset 5,-32
  38              	 .cfi_offset 6,-28
  39              	 .cfi_offset 7,-24
  40              	 .cfi_offset 8,-20
  41              	 .cfi_offset 9,-16
  42              	 .cfi_offset 10,-12
  43              	 .cfi_offset 11,-8
  44              	 .cfi_offset 14,-4
  62:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   q31_t *pIn = pSrc->pData;                      /* input data matrix pointer */
  63:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   q31_t *pOut = pDst->pData;                     /* output data matrix pointer */
  45              	 .loc 1 63 0
  46 0004 93E82040 	 ldmia r3,{r5,lr}
  64:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   uint32_t numSamples;                           /* total number of elements in the matrix */
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   int32_t totShift = shift + 1;                  /* shift to apply after scaling */
  66:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   uint32_t blkCnt;                               /* loop counters  */
  67:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   arm_status status;                             /* status of matrix scaling      */
  68:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   q31_t in1, in2, out1;                          /* temporary variabels */
  69:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  70:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** #if defined (ARM_MATH_DSP)
  71:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  72:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   q31_t in3, in4, out2, out3, out4;              /* temporary variables */
  73:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  74:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** #endif //      #ifndef ARM_MAT_CM0
  75:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  76:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
  77:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   /* Check for matrix mismatch  */
  78:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   if ((pSrc->numRows != pDst->numRows) || (pSrc->numCols != pDst->numCols))
  47              	 .loc 1 78 0
  48 0008 0468     	 ldr r4,[r0]
  62:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   q31_t *pIn = pSrc->pData;                      /* input data matrix pointer */
  49              	 .loc 1 62 0
  50 000a D0F804C0 	 ldr ip,[r0,#4]
  51              	.LVL1:
  52              	 .loc 1 78 0
  53 000e AC42     	 cmp r4,r5
  61:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   q31_t *pIn = pSrc->pData;                      /* input data matrix pointer */
  54              	 .loc 1 61 0
  55 0010 85B0     	 sub sp,sp,#20
  56              	.LCFI1:
  57              	 .cfi_def_cfa_offset 56
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   uint32_t blkCnt;                               /* loop counters  */
  58              	 .loc 1 65 0
  59 0012 02F10102 	 add r2,r2,#1
  60              	.LVL2:
  61              	 .loc 1 78 0
  62 0016 40F08680 	 bne .L8
  79:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   {
  80:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  81:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
  82:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   }
  83:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   else
  84:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** #endif //    #ifdef ARM_MATH_MATRIX_CHECK
  85:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   {
  86:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     /* Total number of samples in the input matrix */
  87:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     numSamples = (uint32_t) pSrc->numRows * pSrc->numCols;
  63              	 .loc 1 87 0
  64 001a 4388     	 ldrh r3,[r0,#2]
  65              	.LVL3:
  66 001c 0088     	 ldrh r0,[r0]
  67              	.LVL4:
  68 001e 00FB03F3 	 mul r3,r0,r3
  69 0022 0193     	 str r3,[sp,#4]
  70              	.LVL5:
  88:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  89:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** #if defined (ARM_MATH_DSP)
  90:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  91:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     /* Run the below code for Cortex-M4 and Cortex-M3 */
  92:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  93:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     /* Loop Unrolling */
  94:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     blkCnt = numSamples >> 2u;
  95:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
  96:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  97:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
  98:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     while (blkCnt > 0u)
  71              	 .loc 1 98 0
  72 0024 9B08     	 lsrs r3,r3,#2
  73              	.LVL6:
  74 0026 1C46     	 mov r4,r3
  75 0028 0293     	 str r3,[sp,#8]
  76 002a 5ED0     	 beq .L3
  77 002c 0CF11000 	 add r0,ip,#16
  78 0030 0EF11003 	 add r3,lr,#16
  79              	.LVL7:
  80 0034 CDF80CC0 	 str ip,[sp,#12]
  81 0038 F446     	 mov ip,lr
  82              	.LVL8:
  83 003a A646     	 mov lr,r4
  84              	.LVL9:
  85              	.L4:
  99:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     {
 100:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       /* C(m,n) = A(m,n) * k */
 101:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       /* Read values from input */
 102:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in1 = *pIn;
  86              	 .loc 1 102 0
  87 003c 50F8107C 	 ldr r7,[r0,#-16]
 103:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in2 = *(pIn + 1);
  88              	 .loc 1 103 0
  89 0040 50F80C6C 	 ldr r6,[r0,#-12]
 104:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in3 = *(pIn + 2);
  90              	 .loc 1 104 0
  91 0044 50F8085C 	 ldr r5,[r0,#-8]
 105:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in4 = *(pIn + 3);
  92              	 .loc 1 105 0
  93 0048 50F8044C 	 ldr r4,[r0,#-4]
 106:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 107:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       /* multiply input with scaler value */
 108:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in1 = ((q63_t) in1 * scaleFract) >> 32;
  94              	 .loc 1 108 0
  95 004c 87FB0189 	 smull r8,r9,r7,r1
 109:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in2 = ((q63_t) in2 * scaleFract) >> 32;
 110:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in3 = ((q63_t) in3 * scaleFract) >> 32;
 111:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in4 = ((q63_t) in4 * scaleFract) >> 32;
 112:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 113:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       /* apply shifting */
 114:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       out1 = in1 << totShift;
 115:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       out2 = in2 << totShift;
 116:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 117:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       /* saturate the results. */
 118:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       if (in1 != (out1 >> totShift))
 119:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****         out1 = 0x7FFFFFFF ^ (in1 >> 31);
  96              	 .loc 1 119 0
  97 0050 4FEAE978 	 asr r8,r9,#31
 109:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in2 = ((q63_t) in2 * scaleFract) >> 32;
  98              	 .loc 1 109 0
  99 0054 86FB0167 	 smull r6,r7,r6,r1
 100              	 .loc 1 119 0
 101 0058 88F00046 	 eor r6,r8,#-2147483648
 114:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       out2 = in2 << totShift;
 102              	 .loc 1 114 0
 103 005c 09FA02F8 	 lsl r8,r9,r2
 110:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in4 = ((q63_t) in4 * scaleFract) >> 32;
 104              	 .loc 1 110 0
 105 0060 85FB01AB 	 smull r10,fp,r5,r1
 106              	 .loc 1 119 0
 107 0064 F643     	 mvns r6,r6
 118:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****         out1 = 0x7FFFFFFF ^ (in1 >> 31);
 108              	 .loc 1 118 0
 109 0066 48FA02F5 	 asr r5,r8,r2
 110 006a 4D45     	 cmp r5,r9
 111 006c 08BF     	 it eq
 112 006e 4646     	 moveq r6,r8
 120:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 121:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       if (in2 != (out2 >> totShift))
 122:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****         out2 = 0x7FFFFFFF ^ (in2 >> 31);
 113              	 .loc 1 122 0
 114 0070 4FEAE778 	 asr r8,r7,#31
 111:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 115              	 .loc 1 111 0
 116 0074 84FB0145 	 smull r4,r5,r4,r1
 117              	 .loc 1 122 0
 118 0078 88F00044 	 eor r4,r8,#-2147483648
 115:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 119              	 .loc 1 115 0
 120 007c 07FA02F8 	 lsl r8,r7,r2
 121              	 .loc 1 122 0
 122 0080 E443     	 mvns r4,r4
 123:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 124:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       out3 = in3 << totShift;
 125:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       out4 = in4 << totShift;
 126:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 127:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       *pOut = out1;
 123              	 .loc 1 127 0
 124 0082 43F8106C 	 str r6,[r3,#-16]
 128:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       *(pOut + 1) = out2;
 129:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 130:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       if (in3 != (out3 >> totShift))
 131:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****         out3 = 0x7FFFFFFF ^ (in3 >> 31);
 125              	 .loc 1 131 0
 126 0086 4FEAEB79 	 asr r9,fp,#31
 121:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****         out2 = 0x7FFFFFFF ^ (in2 >> 31);
 127              	 .loc 1 121 0
 128 008a 48FA02F6 	 asr r6,r8,r2
 129 008e BE42     	 cmp r6,r7
 130 0090 14BF     	 ite ne
 131 0092 2746     	 movne r7,r4
 132 0094 4746     	 moveq r7,r8
 133              	 .loc 1 131 0
 134 0096 89F00049 	 eor r9,r9,#-2147483648
 124:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       out4 = in4 << totShift;
 135              	 .loc 1 124 0
 136 009a 0BFA02F6 	 lsl r6,fp,r2
 132:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       if (in4 != (out4 >> totShift))
 134:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****         out4 = 0x7FFFFFFF ^ (in4 >> 31);
 137              	 .loc 1 134 0
 138 009e EC17     	 asrs r4,r5,#31
 125:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 139              	 .loc 1 125 0
 140 00a0 05FA02F8 	 lsl r8,r5,r2
 128:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 141              	 .loc 1 128 0
 142 00a4 43F80C7C 	 str r7,[r3,#-12]
 131:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 143              	 .loc 1 131 0
 144 00a8 6FEA0909 	 mvn r9,r9
 130:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****         out3 = 0x7FFFFFFF ^ (in3 >> 31);
 145              	 .loc 1 130 0
 146 00ac 46FA02F7 	 asr r7,r6,r2
 147              	 .loc 1 134 0
 148 00b0 84F00044 	 eor r4,r4,#-2147483648
 149 00b4 5F45     	 cmp r7,fp
 150 00b6 18BF     	 it ne
 151 00b8 4E46     	 movne r6,r9
 152 00ba E443     	 mvns r4,r4
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****         out4 = 0x7FFFFFFF ^ (in4 >> 31);
 153              	 .loc 1 133 0
 154 00bc 48FA02F7 	 asr r7,r8,r2
 155              	.LVL10:
 156 00c0 AF42     	 cmp r7,r5
 157 00c2 08BF     	 it eq
 158 00c4 4446     	 moveq r4,r8
 159              	.LVL11:
  98:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     {
 160              	 .loc 1 98 0
 161 00c6 BEF1010E 	 subs lr,lr,#1
 135:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 136:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 137:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       *(pOut + 2) = out3;
 162              	 .loc 1 137 0
 163 00ca 43F8086C 	 str r6,[r3,#-8]
 138:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       *(pOut + 3) = out4;
 164              	 .loc 1 138 0
 165 00ce 43F8044C 	 str r4,[r3,#-4]
 166 00d2 00F11000 	 add r0,r0,#16
 167 00d6 03F11003 	 add r3,r3,#16
  98:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     {
 168              	 .loc 1 98 0
 169 00da AFD1     	 bne .L4
 170 00dc 029B     	 ldr r3,[sp,#8]
 171 00de E646     	 mov lr,ip
 172 00e0 DDF80CC0 	 ldr ip,[sp,#12]
 173 00e4 1B01     	 lsls r3,r3,#4
 174 00e6 9C44     	 add ip,ip,r3
 175 00e8 9E44     	 add lr,lr,r3
 176              	.LVL12:
 177              	.L3:
 139:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 140:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       /* update pointers to process next sampels */
 141:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       pIn += 4u;
 142:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       pOut += 4u;
 143:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 144:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 145:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       /* Decrement the numSamples loop counter */
 146:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       blkCnt--;
 147:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     }
 148:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 149:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 150:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****      ** No loop unrolling is used. */
 151:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     blkCnt = numSamples % 0x4u;
 152:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 153:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** #else
 154:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 155:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     /* Run the below code for Cortex-M0 */
 156:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 157:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     /* Initialize blkCnt with number of samples */
 158:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     blkCnt = numSamples;
 159:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 160:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** #endif /* #if defined (ARM_MATH_DSP) */
 161:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 162:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     while (blkCnt > 0u)
 178              	 .loc 1 162 0
 179 00ea 019B     	 ldr r3,[sp,#4]
 180 00ec 13F00306 	 ands r6,r3,#3
 181              	.LVL13:
 182 00f0 18BF     	 it ne
 183 00f2 0D46     	 movne r5,r1
 184 00f4 12D0     	 beq .L7
 185              	.L6:
 186              	.LVL14:
 163:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     {
 164:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       /* C(m,n) = A(m,n) * k */
 165:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       /* Scale, saturate and then store the results in the destination buffer. */
 166:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in1 = *pIn++;
 187              	 .loc 1 166 0
 188 00f6 5CF8040B 	 ldr r0,[ip],#4
 167:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 168:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       in2 = ((q63_t) in1 * scaleFract) >> 32;
 189              	 .loc 1 168 0
 190 00fa 80FB0501 	 smull r0,r1,r0,r5
 169:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 170:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       out1 = in2 << totShift;
 171:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 172:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       if (in2 != (out1 >> totShift))
 173:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****         out1 = 0x7FFFFFFF ^ (in2 >> 31);
 191              	 .loc 1 173 0
 192 00fe CB17     	 asrs r3,r1,#31
 170:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 193              	 .loc 1 170 0
 194 0100 01FA02F0 	 lsl r0,r1,r2
 195              	 .loc 1 173 0
 196 0104 83F00043 	 eor r3,r3,#-2147483648
 197 0108 DB43     	 mvns r3,r3
 172:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****         out1 = 0x7FFFFFFF ^ (in2 >> 31);
 198              	 .loc 1 172 0
 199 010a 40FA02F4 	 asr r4,r0,r2
 200              	.LVL15:
 201 010e 8C42     	 cmp r4,r1
 202 0110 08BF     	 it eq
 203 0112 0346     	 moveq r3,r0
 204              	.LVL16:
 162:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     {
 205              	 .loc 1 162 0
 206 0114 013E     	 subs r6,r6,#1
 207              	.LVL17:
 174:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 175:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       *pOut++ = out1;
 208              	 .loc 1 175 0
 209 0116 4EF8043B 	 str r3,[lr],#4
 210              	.LVL18:
 162:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     {
 211              	 .loc 1 162 0
 212 011a ECD1     	 bne .L6
 213              	.LVL19:
 214              	.L7:
 176:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 177:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       /* Decrement the numSamples loop counter */
 178:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****       blkCnt--;
 179:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     }
 180:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 181:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     /* Set status as ARM_MATH_SUCCESS */
 182:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****     status = ARM_MATH_SUCCESS;
 215              	 .loc 1 182 0
 216 011c 0020     	 movs r0,#0
 217              	.LVL20:
 218              	.L2:
 183:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   }
 184:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** 
 185:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   /* Return to application */
 186:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   return (status);
 187:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c **** }
 219              	 .loc 1 187 0
 220 011e 40B2     	 sxtb r0,r0
 221 0120 05B0     	 add sp,sp,#20
 222              	.LCFI2:
 223              	 .cfi_remember_state
 224              	 .cfi_def_cfa_offset 36
 225              	 
 226 0122 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 227              	.LVL21:
 228              	.L8:
 229              	.LCFI3:
 230              	 .cfi_restore_state
  81:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_scale_q31.c ****   }
 231              	 .loc 1 81 0
 232 0126 FD20     	 movs r0,#253
 233              	.LVL22:
 234 0128 F9E7     	 b .L2
 235              	 .cfi_endproc
 236              	.LFE135:
 238 012a 00BF     	 .text
 239              	.Letext0:
 240              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 241              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 242              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_scale_q31.c
    {standard input}:20     .text.arm_mat_scale_q31:00000000 $t
    {standard input}:25     .text.arm_mat_scale_q31:00000000 arm_mat_scale_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
