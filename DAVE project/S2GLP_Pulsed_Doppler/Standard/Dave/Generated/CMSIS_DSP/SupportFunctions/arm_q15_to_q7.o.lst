   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_q15_to_q7.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_q15_to_q7,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_q15_to_q7
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_q15_to_q7:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c"
   1:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * Title:        arm_q15_to_q7.c
   4:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * Description:  Converts the elements of the Q15 vector to Q7 vector
   5:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  *
   6:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  *
   9:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** /*
  12:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  *
  14:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  *
  16:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  *
  20:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  *
  22:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  */
  28:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  29:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  31:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** /**
  32:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * @ingroup groupSupport
  33:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  */
  34:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  35:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** /**
  36:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * @addtogroup q15_to_x
  37:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  */
  39:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  40:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  41:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** /**
  42:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * @brief Converts the elements of the Q15 vector to Q7 vector.
  43:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * @param[in]       *pSrc points to the Q15 input vector
  44:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * @param[out]      *pDst points to the Q7 output vector
  45:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * @param[in]       blockSize length of the input vector
  46:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * @return none.
  47:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  *
  48:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * \par Description:
  49:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  *
  50:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * The equation used for the conversion process is:
  51:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  *
  52:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * <pre>
  53:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * 	pDst[n] = (q7_t) pSrc[n] >> 8;   0 <= n < blockSize.
  54:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  * </pre>
  55:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  *
  56:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****  */
  57:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  58:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  59:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** void arm_q15_to_q7(
  60:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   q15_t * pSrc,
  61:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   q7_t * pDst,
  62:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   uint32_t blockSize)
  63:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** {
  28              	 .loc 1 63 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 20
  36              	 .cfi_offset 4,-20
  37              	 .cfi_offset 5,-16
  38              	 .cfi_offset 6,-12
  39              	 .cfi_offset 7,-8
  40              	 .cfi_offset 14,-4
  64:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   q15_t *pIn = pSrc;                             /* Src pointer */
  65:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   uint32_t blkCnt;                               /* loop counter */
  66:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  67:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** #if defined (ARM_MATH_DSP)
  68:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  69:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  70:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   q31_t in1, in2;
  71:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   q31_t out1, out2;
  72:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  73:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   /*loop Unrolling */
  74:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   blkCnt = blockSize >> 2u;
  75:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  76:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  77:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  78:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   while (blkCnt > 0u)
  41              	 .loc 1 78 0
  42 0002 5FEA920E 	 lsrs lr,r2,#2
  43              	.LVL1:
  44 0006 1FD0     	 beq .L2
  45 0008 00F10805 	 add r5,r0,#8
  46 000c 0F46     	 mov r7,r1
  47 000e 7646     	 mov r6,lr
  48              	.LVL2:
  49              	.L3:
  79:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   {
  80:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     /* C = (q7_t) A >> 8 */
  81:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     /* convert from q15 to q7 and then store the results in the destination buffer */
  82:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     in1 = *__SIMD32(pIn)++;
  83:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     in2 = *__SIMD32(pIn)++;
  84:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  85:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** #ifndef ARM_MATH_BIG_ENDIAN
  86:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  87:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     out1 = __PKHTB(in2, in1, 16);
  50              	 .loc 1 87 0
  51 0010 55F8043C 	 ldr r3,[r5,#-4]
  52 0014 55F808CC 	 ldr ip,[r5,#-8]
  53 0018 1C0C     	 lsrs r4,r3,#16
  88:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     out2 = __PKHBT(in2, in1, 16);
  54              	 .loc 1 88 0
  55 001a 9BB2     	 uxth r3,r3
  87:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     out2 = __PKHBT(in2, in1, 16);
  56              	 .loc 1 87 0
  57 001c 2404     	 lsls r4,r4,#16
  58              	 .loc 1 88 0
  59 001e 43EA0C43 	 orr r3,r3,ip,lsl#16
  87:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     out2 = __PKHBT(in2, in1, 16);
  60              	 .loc 1 87 0
  61 0022 44EA1C44 	 orr r4,r4,ip,lsr#16
  62              	.LVL3:
  89:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  90:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** #else
  91:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  92:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     out1 = __PKHTB(in1, in2, 16);
  93:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     out2 = __PKHBT(in1, in2, 16);
  94:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  95:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** #endif //      #ifndef ARM_MATH_BIG_ENDIAN
  96:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
  97:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     /* rotate packed value by 24 */
  98:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     out2 = ((uint32_t) out2 << 8) | ((uint32_t) out2 >> 24);
  63              	 .loc 1 98 0
  64 0026 4FEA3363 	 ror r3,r3,#24
  65              	.LVL4:
  99:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
 100:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     /* anding with 0xff00ff00 to get two 8 bit values */
 101:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     out1 = out1 & 0xFF00FF00;
  66              	 .loc 1 101 0
  67 002a 04F0FF24 	 and r4,r4,#-16711936
  68              	.LVL5:
 102:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     /* anding with 0x00ff00ff to get two 8 bit values */
 103:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     out2 = out2 & 0x00FF00FF;
  69              	 .loc 1 103 0
  70 002e 03F0FF13 	 and r3,r3,#16711935
  71              	.LVL6:
 104:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
 105:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     /* oring two values(contains two 8 bit values) to get four packed 8 bit values */
 106:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     out1 = out1 | out2;
  72              	 .loc 1 106 0
  73 0032 2343     	 orrs r3,r3,r4
  74              	.LVL7:
  78:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   {
  75              	 .loc 1 78 0
  76 0034 013E     	 subs r6,r6,#1
  77              	.LVL8:
 107:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
 108:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     /* store 4 samples at a time to destiantion buffer */
 109:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     *__SIMD32(pDst)++ = out1;
  78              	 .loc 1 109 0
  79 0036 47F8043B 	 str r3,[r7],#4
  80              	.LVL9:
  81 003a 05F10805 	 add r5,r5,#8
  82              	.LVL10:
  78:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   {
  83              	 .loc 1 78 0
  84 003e E7D1     	 bne .L3
  85 0040 00EBCE00 	 add r0,r0,lr,lsl#3
  86              	.LVL11:
  87 0044 01EB8E01 	 add r1,r1,lr,lsl#2
  88              	.LVL12:
  89              	.L2:
 110:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
 111:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     /* Decrement the loop counter */
 112:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     blkCnt--;
 113:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   }
 114:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
 115:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 116:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****    ** No loop unrolling is used. */
 117:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   blkCnt = blockSize % 0x4u;
 118:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
 119:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** #else
 120:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
 121:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   /* Run the below code for Cortex-M0 */
 122:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
 123:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   /* Loop over blockSize number of values */
 124:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   blkCnt = blockSize;
 125:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
 126:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** #endif /* #if defined (ARM_MATH_DSP) */
 127:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c **** 
 128:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   while (blkCnt > 0u)
  90              	 .loc 1 128 0
  91 0048 12F00302 	 ands r2,r2,#3
  92              	.LVL13:
  93 004c 07D0     	 beq .L1
  94 004e 0A44     	 add r2,r2,r1
  95              	.LVL14:
  96              	.L5:
 129:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   {
 130:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     /* C = (q7_t) A >> 8 */
 131:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     /* convert from q15 to q7 and then store the results in the destination buffer */
 132:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****     *pDst++ = (q7_t) (*pIn++ >> 8);
  97              	 .loc 1 132 0
  98 0050 30F9023B 	 ldrsh r3,[r0],#2
  99              	.LVL15:
 100 0054 1B12     	 asrs r3,r3,#8
 101 0056 01F8013B 	 strb r3,[r1],#1
 102              	.LVL16:
 128:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_q15_to_q7.c ****   {
 103              	 .loc 1 128 0
 104 005a 9142     	 cmp r1,r2
 105 005c F8D1     	 bne .L5
 106              	.LVL17:
 107              	.L1:
 108 005e F0BD     	 pop {r4,r5,r6,r7,pc}
 109              	 .cfi_endproc
 110              	.LFE135:
 112              	 .text
 113              	.Letext0:
 114              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 115              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 116              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_q15_to_q7.c
    {standard input}:20     .text.arm_q15_to_q7:00000000 $t
    {standard input}:25     .text.arm_q15_to_q7:00000000 arm_q15_to_q7
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
