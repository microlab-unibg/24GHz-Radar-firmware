   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_fill_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_fill_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_fill_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_fill_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c"
   1:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * Title:        arm_fill_f32.c
   4:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * Description:  Fills a constant value into a floating-point vector
   5:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * @ingroup groupSupport
  33:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * @defgroup Fill Vector Fill
  37:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  *
  38:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * Fills the destination vector with a constant value.
  39:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  *
  40:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * <pre>
  41:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * 	pDst[n] = value;   0 <= n < blockSize.
  42:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * </pre>
  43:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  *
  44:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * There are separate functions for floating point, Q31, Q15, and Q7 data types.
  45:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  */
  46:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  47:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** /**
  48:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * @addtogroup Fill
  49:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * @{
  50:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  */
  51:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  52:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** /**
  53:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * @brief Fills a constant value into a floating-point vector.
  54:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * @param[in]       value input value to be filled
  55:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * @param[out]      *pDst points to output vector
  56:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * @param[in]       blockSize length of the output vector
  57:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  * @return none.
  58:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  *
  59:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****  */
  60:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  61:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  62:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** void arm_fill_f32(
  63:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   float32_t value,
  64:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   float32_t * pDst,
  65:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   uint32_t blockSize)
  66:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** {
  28              	 .loc 1 66 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
  34 0000 30B4     	 push {r4,r5}
  35              	.LCFI0:
  36              	 .cfi_def_cfa_offset 8
  37              	 .cfi_offset 4,-8
  38              	 .cfi_offset 5,-4
  67:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  68:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  69:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** #if defined (ARM_MATH_DSP)
  70:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  71:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  72:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   float32_t in1 = value;
  73:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   float32_t in2 = value;
  74:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   float32_t in3 = value;
  75:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   float32_t in4 = value;
  76:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  77:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   /*loop Unrolling */
  78:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   blkCnt = blockSize >> 2u;
  79:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  80:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  81:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  82:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   while (blkCnt > 0u)
  39              	 .loc 1 82 0
  40 0002 9508     	 lsrs r5,r2,#2
  41              	.LVL1:
  42 0004 10D0     	 beq .L2
  43 0006 01F11003 	 add r3,r1,#16
  44 000a 2C46     	 mov r4,r5
  45              	.LVL2:
  46              	.L3:
  47 000c 013C     	 subs r4,r4,#1
  48              	.LVL3:
  83:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   {
  84:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     /* C = value */
  85:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     /* Fill the value in the destination buffer */
  86:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     *pDst++ = in1;
  49              	 .loc 1 86 0
  50 000e 43F8100C 	 str r0,[r3,#-16]
  51              	.LVL4:
  87:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     *pDst++ = in2;
  52              	 .loc 1 87 0
  53 0012 43F80C0C 	 str r0,[r3,#-12]
  54              	.LVL5:
  88:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     *pDst++ = in3;
  55              	 .loc 1 88 0
  56 0016 43F8080C 	 str r0,[r3,#-8]
  57              	.LVL6:
  89:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     *pDst++ = in4;
  58              	 .loc 1 89 0
  59 001a 43F8040C 	 str r0,[r3,#-4]
  60 001e 03F11003 	 add r3,r3,#16
  61              	.LVL7:
  82:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   {
  62              	 .loc 1 82 0
  63 0022 F3D1     	 bne .L3
  64 0024 01EB0511 	 add r1,r1,r5,lsl#4
  65              	.LVL8:
  66              	.L2:
  90:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  91:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     /* Decrement the loop counter */
  92:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     blkCnt--;
  93:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   }
  94:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  95:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
  96:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****    ** No loop unrolling is used. */
  97:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   blkCnt = blockSize % 0x4u;
  98:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
  99:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** #else
 100:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
 101:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   /* Run the below code for Cortex-M0 */
 102:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
 103:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   /* Loop over blockSize number of values */
 104:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   blkCnt = blockSize;
 105:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
 106:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 107:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
 108:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
 109:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   while (blkCnt > 0u)
  67              	 .loc 1 109 0
  68 0028 12F00302 	 ands r2,r2,#3
  69              	.LVL9:
  70 002c 03D0     	 beq .L1
  71              	.L5:
  72              	.LVL10:
  73 002e 013A     	 subs r2,r2,#1
  74              	.LVL11:
 110:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   {
 111:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     /* C = value */
 112:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     /* Fill the value in the destination buffer */
 113:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     *pDst++ = value;
  75              	 .loc 1 113 0
  76 0030 41F8040B 	 str r0,[r1],#4
  77              	.LVL12:
 109:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   {
  78              	 .loc 1 109 0
  79 0034 FBD1     	 bne .L5
  80              	.L1:
 114:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** 
 115:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     /* Decrement the loop counter */
 116:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****     blkCnt--;
 117:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c ****   }
 118:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_fill_f32.c **** }
  81              	 .loc 1 118 0
  82 0036 30BC     	 pop {r4,r5}
  83              	.LCFI1:
  84              	 .cfi_restore 5
  85              	 .cfi_restore 4
  86              	 .cfi_def_cfa_offset 0
  87 0038 7047     	 bx lr
  88              	 .cfi_endproc
  89              	.LFE135:
  91 003a 00BF     	 .text
  92              	.Letext0:
  93              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
  94              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
  95              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_fill_f32.c
    {standard input}:20     .text.arm_fill_f32:00000000 $t
    {standard input}:25     .text.arm_fill_f32:00000000 arm_fill_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
