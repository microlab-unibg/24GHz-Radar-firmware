   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_cos_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_cos_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_cos_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_cos_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c"
   1:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * Title:        arm_cos_f32.c
   4:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * Description:  Fast cosine calculation for floating-point values
   5:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** #include "CMSIS_DSP/arm_common_tables.h"
  31:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @ingroup groupFastMath
  33:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @defgroup cos Cosine
  37:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *
  38:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * Computes the trigonometric cosine function using a combination of table lookup
  39:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * and linear interpolation.  There are separate functions for
  40:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * Q15, Q31, and floating-point data types.
  41:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * The input to the floating-point version is in radians while the
  42:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * fixed-point Q15 and Q31 have a scaled input with the range
  43:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * [0 +0.9999] mapping to [0 2*pi).  The fixed-point range is chosen so that a
  44:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * value of 2*pi wraps around to 0.
  45:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *
  46:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * The implementation is based on table lookup using 256 values together with linear interpolation.
  47:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * The steps used are:
  48:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *  -# Calculation of the nearest integer table index
  49:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *  -# Compute the fractional portion (fract) of the table index.
  50:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *  -# The final result equals <code>(1.0f-fract)*a + fract*b;</code>
  51:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *
  52:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * where
  53:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * <pre>
  54:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *    b=Table[index+0];
  55:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *    c=Table[index+1];
  56:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * </pre>
  57:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  */
  58:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  59:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  /**
  60:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @addtogroup cos
  61:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @{
  62:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  */
  63:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  64:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** /**
  65:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @brief  Fast approximation to the trigonometric cosine function for floating-point data.
  66:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @param[in] x input value in radians.
  67:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @return cos(x).
  68:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  */
  69:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  70:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** float32_t arm_cos_f32(
  71:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   float32_t x)
  72:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** {
  28              	 .loc 1 72 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
  73:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   float32_t cosVal, fract, in;                   /* Temporary variables for input, output */
  74:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   uint16_t index;                                /* Index variable */
  75:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   float32_t a, b;                                /* Two nearest output values */
  76:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   int32_t n;
  77:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   float32_t findex;
  78:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  79:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* input x is in radians */
  80:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Scale the input to [0 1] range from [0 2*PI] , divide input by 2*pi, add 0.25 (pi/2) to read s
  81:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   in = x * 0.159154943092f + 0.25f;
  34              	 .loc 1 81 0
  35 0000 9FED1C7A 	 flds s14,.L6
  36 0004 06EE900A 	 fmsr s13,r0
  37 0008 F5EE007A 	 fconsts s15,#80
  38 000c E6EE877A 	 vfma.f32 s15,s13,s14
  39              	.LVL1:
  82:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  83:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Calculation of floor value of input */
  84:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   n = (int32_t) in;
  85:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  86:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Make negative values towards -infinity */
  87:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   if (in < 0.0f)
  40              	 .loc 1 87 0
  41 0010 F5EEC07A 	 fcmpezs s15
  42 0014 F1EE10FA 	 fmstat
  84:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  43              	 .loc 1 84 0
  44 0018 BDEEE77A 	 ftosizs s14,s15
  45              	.LVL2:
  46              	 .loc 1 87 0
  47 001c 04D5     	 bpl .L2
  88:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   {
  89:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****     n--;
  48              	 .loc 1 89 0
  49 001e 17EE103A 	 fmrs r3,s14
  50 0022 013B     	 subs r3,r3,#1
  51 0024 07EE103A 	 fmsr s14,r3
  52              	.LVL3:
  53              	.L2:
  90:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   }
  91:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  92:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Map input value to [0 1] */
  93:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   in = in - (float32_t) n;
  54              	 .loc 1 93 0
  55 0028 B8EEC77A 	 fsitos s14,s14
  56              	.LVL4:
  94:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  95:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Calculation of index of the table */
  96:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   findex = (float32_t) FAST_MATH_TABLE_SIZE * in;
  57              	 .loc 1 96 0
  58 002c DFED126A 	 flds s13,.L6+4
  97:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   index = ((uint16_t)findex) & 0x1ff;
  98:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  99:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* fractional value calculation */
 100:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   fract = findex - (float32_t) index;
 101:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 102:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Read two nearest values of input value from the cos table */
 103:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   a = sinTable_f32[index];
 104:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   b = sinTable_f32[index+1];
  59              	 .loc 1 104 0
  60 0030 124A     	 ldr r2,.L6+8
  93:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  61              	 .loc 1 93 0
  62 0032 77EEC77A 	 fsubs s15,s15,s14
  63              	.LVL5:
 105:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 106:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Linear interpolation process */
 107:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   cosVal = (1.0f-fract)*a + fract*b;
  64              	 .loc 1 107 0
  65 0036 B7EE007A 	 fconsts s14,#112
  96:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   index = ((uint16_t)findex) & 0x1ff;
  66              	 .loc 1 96 0
  67 003a 67EEA67A 	 fmuls s15,s15,s13
  68              	.LVL6:
  97:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  69              	 .loc 1 97 0
  70 003e FCEEE76A 	 ftouizs s13,s15
  71 0042 16EE903A 	 fmrs r3,s13
  72 0046 C3F30803 	 ubfx r3,r3,#0,#9
  73              	.LVL7:
 100:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  74              	 .loc 1 100 0
  75 004a 06EE903A 	 fmsr s13,r3
  76 004e F8EE666A 	 fuitos s13,s13
 104:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  77              	 .loc 1 104 0
  78 0052 02EB8301 	 add r1,r2,r3,lsl#2
 100:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  79              	 .loc 1 100 0
  80 0056 77EEE67A 	 fsubs s15,s15,s13
  81              	.LVL8:
  82              	 .loc 1 107 0
  83 005a D1ED016A 	 flds s13,[r1,#4]
  84 005e 37EE677A 	 fsubs s14,s14,s15
  85 0062 67EEA67A 	 fmuls s15,s15,s13
  86              	.LVL9:
  87 0066 D1ED006A 	 flds s13,[r1]
 108:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 109:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Return the output value */
 110:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   return (cosVal);
 111:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** }
  88              	 .loc 1 111 0
  89 006a E7EE267A 	 vfma.f32 s15,s14,s13
  90 006e 17EE900A 	 fmrs r0,s15
  91              	.LVL10:
  92 0072 7047     	 bx lr
  93              	.L7:
  94              	 .align 2
  95              	.L6:
  96 0074 83F9223E 	 .word 1042479491
  97 0078 00000044 	 .word 1140850688
  98 007c 00000000 	 .word sinTable_f32
  99              	 .cfi_endproc
 100              	.LFE135:
 102              	 .text
 103              	.Letext0:
 104              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 105              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 106              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
 107              	 .file 5 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_common_tables.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cos_f32.c
    {standard input}:20     .text.arm_cos_f32:00000000 $t
    {standard input}:25     .text.arm_cos_f32:00000000 arm_cos_f32
    {standard input}:96     .text.arm_cos_f32:00000074 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sinTable_f32
