   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_sqrt_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_sqrt_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_sqrt_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_sqrt_q31:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c"
   1:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * Title:        arm_sqrt_q31.c
   4:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * Description:  Q31 square root function
   5:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** #include "CMSIS_DSP/arm_common_tables.h"
  31:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
  32:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** /**
  33:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * @ingroup groupFastMath
  34:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  */
  35:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
  36:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** /**
  37:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * @addtogroup SQRT
  38:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * @{
  39:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  */
  40:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** /**
  42:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * @brief Q31 square root function.
  43:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * @param[in]   in    input value.  The range of the input value is [0 +1) or 0x00000000 to 0x7FFFF
  44:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * @param[out]  *pOut square root of input value.
  45:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * @return The function returns ARM_MATH_SUCCESS if the input value is positive
  46:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * and ARM_MATH_ARGUMENT_ERROR if the input is negative.  For
  47:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  * negative inputs, the function returns *pOut = 0.
  48:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****  */
  49:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
  50:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** arm_status arm_sqrt_q31(
  51:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   q31_t in,
  52:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   q31_t * pOut)
  53:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** {
  28              	 .loc 1 53 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  54:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   q31_t number, temp1, bits_val1, var1, signBits1, half;
  55:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   float32_t temp_float1;
  56:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   union
  57:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   {
  58:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****       q31_t fracval;
  59:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****       float32_t floatval;
  60:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   } tempconv;
  61:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
  62:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   number = in;
  63:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
  64:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   /* If the input is a positive number then compute the signBits. */
  65:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   if (number > 0)
  33              	 .loc 1 65 0
  34 0000 0028     	 cmp r0,#0
  35 0002 6DDD     	 ble .L2
  53:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   q31_t number, temp1, bits_val1, var1, signBits1, half;
  36              	 .loc 1 53 0
  37 0004 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
  38              	.LCFI0:
  39              	 .cfi_def_cfa_offset 28
  40              	 .cfi_offset 4,-28
  41              	 .cfi_offset 5,-24
  42              	 .cfi_offset 6,-20
  43              	 .cfi_offset 7,-16
  44              	 .cfi_offset 8,-12
  45              	 .cfi_offset 9,-8
  46              	 .cfi_offset 14,-4
  66:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   {
  67:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     signBits1 = __CLZ(number) - 1;
  47              	 .loc 1 67 0
  48 0008 B0FA80F6 	 clz r6,r0
  49 000c 771E     	 subs r7,r6,#1
  50              	.LVL1:
  68:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
  69:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* Shift by the number of signBits1 */
  70:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     if ((signBits1 % 2) == 0)
  51              	 .loc 1 70 0
  52 000e 17F0010E 	 ands lr,r7,#1
  71:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     {
  72:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****       number = number << signBits1;
  73:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     }
  74:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     else
  75:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     {
  76:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****       number = number << (signBits1 - 1);
  53              	 .loc 1 76 0
  54 0012 1ABF     	 itte ne
  55 0014 B31E     	 subne r3,r6,#2
  56 0016 9840     	 lslne r0,r0,r3
  57              	.LVL2:
  72:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     }
  58              	 .loc 1 72 0
  59 0018 B840     	 lsleq r0,r0,r7
  60              	.LVL3:
  77:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     }
  78:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
  79:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* Calculate half value of the number */
  80:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     half = number >> 1;
  81:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* Store the number for later use */
  82:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     temp1 = number;
  83:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
  84:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /*Convert to float */
  85:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     temp_float1 = number * 4.6566128731e-010f;
  61              	 .loc 1 85 0
  62 001a 07EE900A 	 fmsr s15,r0
  63 001e FAEEE07A 	 vcvt.f32.s32 s15,s15,#31
  86:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /*Store as integer */
  87:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     tempconv.floatval = temp_float1;
  88:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     bits_val1 = tempconv.fracval;
  89:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* Subtract the shifted value from the magic number to give intial guess */
  90:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     bits_val1 = 0x5f3759df - (bits_val1 >> 1);  /* gives initial guess */
  64              	 .loc 1 90 0
  65 0022 324C     	 ldr r4,.L12
  85:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /*Store as integer */
  66              	 .loc 1 85 0
  67 0024 17EE903A 	 fmrs r3,s15
  68              	 .loc 1 90 0
  69 0028 5B10     	 asrs r3,r3,#1
  70 002a E41A     	 subs r4,r4,r3
  91:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* Store as float */
  92:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     tempconv.fracval = bits_val1;
  93:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     temp_float1 = tempconv.floatval;
  94:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* Convert to integer format */
  95:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     var1 = (q31_t) (temp_float1 * 1073741824);
  71              	 .loc 1 95 0
  72 002c 07EE904A 	 fmsr s15,r4
  73 0030 FEEEC17A 	 vcvt.s32.f32 s15,s15,#30
  80:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* Store the number for later use */
  74              	 .loc 1 80 0
  75 0034 4FEA600C 	 asr ip,r0,#1
  76              	.LVL4:
  77              	 .loc 1 95 0
  78 0038 17EE905A 	 fmrs r5,s15
  79              	.LVL5:
  96:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
  97:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* 1st iteration */
  98:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     var1 = ((q31_t) ((q63_t) var1 * (0x30000000 -
  99:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                      ((q31_t)
 100:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                       ((((q31_t)
 101:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                          (((q63_t) var1 * var1) >> 31)) *
  80              	 .loc 1 101 0
  81 003c 85FB0589 	 smull r8,r9,r5,r5
  82 0040 4FEAD872 	 lsr r2,r8,#31
  83 0044 42EA4902 	 orr r2,r2,r9,lsl#1
  84 0048 82FB0C23 	 smull r2,r3,r2,ip
 102:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                         (q63_t) half) >> 31))) >> 31)) << 2;
  85              	 .loc 1 102 0
  86 004c D40F     	 lsrs r4,r2,#31
  87              	.LVL6:
  88 004e 44EA4304 	 orr r4,r4,r3,lsl#1
  98:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                      ((q31_t)
  89              	 .loc 1 98 0
  90 0052 C4F14054 	 rsb r4,r4,#805306368
  91 0056 85FB0445 	 smull r4,r5,r5,r4
  92              	 .loc 1 102 0
  93 005a E20F     	 lsrs r2,r4,#31
  94 005c 42EA4502 	 orr r2,r2,r5,lsl#1
  98:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                      ((q31_t)
  95              	 .loc 1 98 0
  96 0060 9300     	 lsls r3,r2,#2
  97              	.LVL7:
 103:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* 2nd iteration */
 104:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     var1 = ((q31_t) ((q63_t) var1 * (0x30000000 -
 105:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                      ((q31_t)
 106:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                       ((((q31_t)
 107:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                          (((q63_t) var1 * var1) >> 31)) *
  98              	 .loc 1 107 0
  99 0062 83FB0389 	 smull r8,r9,r3,r3
 100 0066 4FEAD874 	 lsr r4,r8,#31
 101 006a 44EA4904 	 orr r4,r4,r9,lsl#1
 102 006e 8CFB0445 	 smull r4,r5,ip,r4
 108:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                         (q63_t) half) >> 31))) >> 31)) << 2;
 103              	 .loc 1 108 0
 104 0072 E20F     	 lsrs r2,r4,#31
 105 0074 42EA4502 	 orr r2,r2,r5,lsl#1
 104:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                      ((q31_t)
 106              	 .loc 1 104 0
 107 0078 C2F14052 	 rsb r2,r2,#805306368
 108 007c 83FB0223 	 smull r2,r3,r3,r2
 109              	 .loc 1 108 0
 110 0080 D20F     	 lsrs r2,r2,#31
 111 0082 42EA4302 	 orr r2,r2,r3,lsl#1
 104:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                      ((q31_t)
 112              	 .loc 1 104 0
 113 0086 9300     	 lsls r3,r2,#2
 114              	.LVL8:
 109:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* 3rd iteration */
 110:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     var1 = ((q31_t) ((q63_t) var1 * (0x30000000 -
 111:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                      ((q31_t)
 112:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                       ((((q31_t)
 113:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                          (((q63_t) var1 * var1) >> 31)) *
 115              	 .loc 1 113 0
 116 0088 83FB0345 	 smull r4,r5,r3,r3
 117 008c E40F     	 lsrs r4,r4,#31
 118 008e 44EA4504 	 orr r4,r4,r5,lsl#1
 119 0092 8CFB0445 	 smull r4,r5,ip,r4
 114:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                         (q63_t) half) >> 31))) >> 31)) << 2;
 120              	 .loc 1 114 0
 121 0096 E20F     	 lsrs r2,r4,#31
 122 0098 42EA4502 	 orr r2,r2,r5,lsl#1
 110:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                      ((q31_t)
 123              	 .loc 1 110 0
 124 009c C2F14052 	 rsb r2,r2,#805306368
 125 00a0 83FB0223 	 smull r2,r3,r3,r2
 126              	 .loc 1 114 0
 127 00a4 D40F     	 lsrs r4,r2,#31
 128 00a6 44EA4304 	 orr r4,r4,r3,lsl#1
 110:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****                                      ((q31_t)
 129              	 .loc 1 110 0
 130 00aa A400     	 lsls r4,r4,#2
 131              	.LVL9:
 115:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
 116:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* Multiply the inverse square root with the original value */
 117:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     var1 = ((q31_t) (((q63_t) temp1 * var1) >> 31)) << 1;
 132              	 .loc 1 117 0
 133 00ac 80FB0445 	 smull r4,r5,r0,r4
 134              	.LVL10:
 135 00b0 E30F     	 lsrs r3,r4,#31
 136              	.LVL11:
 137 00b2 43EA4503 	 orr r3,r3,r5,lsl#1
 138 00b6 5B00     	 lsls r3,r3,#1
 139              	.LVL12:
 118:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
 119:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     /* Shift the output down accordingly */
 120:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     if ((signBits1 % 2) == 0)
 140              	 .loc 1 120 0
 141 00b8 BEF1000F 	 cmp lr,#0
 142 00bc 09D0     	 beq .L11
 121:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     {
 122:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****       var1 = var1 >> (signBits1 / 2);
 123:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     }
 124:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     else
 125:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     {
 126:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****       var1 = var1 >> ((signBits1 - 1) / 2);
 143              	 .loc 1 126 0
 144 00be 023E     	 subs r6,r6,#2
 145 00c0 06EBD676 	 add r6,r6,r6,lsr#31
 146 00c4 7610     	 asrs r6,r6,#1
 147 00c6 3341     	 asrs r3,r3,r6
 148              	.LVL13:
 127:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     }
 128:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     *pOut = var1;
 129:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
 130:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     return (ARM_MATH_SUCCESS);
 149              	 .loc 1 130 0
 150 00c8 0020     	 movs r0,#0
 151              	.LVL14:
 128:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
 152              	 .loc 1 128 0
 153 00ca 0B60     	 str r3,[r1]
 131:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   }
 132:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   /* If the number is a negative number then store zero as its square root value */
 133:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   else
 134:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   {
 135:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     *pOut = 0;
 136:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     return (ARM_MATH_ARGUMENT_ERROR);
 137:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   }
 138:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** }
 154              	 .loc 1 138 0
 155 00cc 40B2     	 sxtb r0,r0
 156 00ce BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 157              	.LVL15:
 158              	.L11:
 122:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     }
 159              	 .loc 1 122 0
 160 00d2 7F10     	 asrs r7,r7,#1
 161              	.LVL16:
 162 00d4 3B41     	 asrs r3,r3,r7
 163              	.LVL17:
 130:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   }
 164              	 .loc 1 130 0
 165 00d6 0020     	 movs r0,#0
 166              	.LVL18:
 128:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c **** 
 167              	 .loc 1 128 0
 168 00d8 0B60     	 str r3,[r1]
 169              	 .loc 1 138 0
 170 00da 40B2     	 sxtb r0,r0
 171 00dc BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 172              	.LVL19:
 173              	.L2:
 174              	.LCFI1:
 175              	 .cfi_def_cfa_offset 0
 176              	 .cfi_restore 4
 177              	 .cfi_restore 5
 178              	 .cfi_restore 6
 179              	 .cfi_restore 7
 180              	 .cfi_restore 8
 181              	 .cfi_restore 9
 182              	 .cfi_restore 14
 135:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     return (ARM_MATH_ARGUMENT_ERROR);
 183              	 .loc 1 135 0
 184 00e0 0023     	 movs r3,#0
 136:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****   }
 185              	 .loc 1 136 0
 186 00e2 FF20     	 movs r0,#255
 187              	.LVL20:
 135:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sqrt_q31.c ****     return (ARM_MATH_ARGUMENT_ERROR);
 188              	 .loc 1 135 0
 189 00e4 0B60     	 str r3,[r1]
 190              	 .loc 1 138 0
 191 00e6 40B2     	 sxtb r0,r0
 192 00e8 7047     	 bx lr
 193              	.L13:
 194 00ea 00BF     	 .align 2
 195              	.L12:
 196 00ec DF59375F 	 .word 1597463007
 197              	 .cfi_endproc
 198              	.LFE135:
 200              	 .text
 201              	.Letext0:
 202              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 203              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 204              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_sqrt_q31.c
    {standard input}:20     .text.arm_sqrt_q31:00000000 $t
    {standard input}:25     .text.arm_sqrt_q31:00000000 arm_sqrt_q31
    {standard input}:196    .text.arm_sqrt_q31:000000ec $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
