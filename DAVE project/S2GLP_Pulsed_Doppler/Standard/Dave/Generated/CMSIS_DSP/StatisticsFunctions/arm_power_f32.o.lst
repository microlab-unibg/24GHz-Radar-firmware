   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_power_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_power_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_power_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_power_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c"
   1:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Title:        arm_power_f32.c
   4:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Description:  Sum of the squares of the elements of a floating-point vector
   5:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @ingroup groupStats
  33:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @defgroup power Power
  37:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  38:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Calculates the sum of the squares of the elements in the input vector.
  39:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * The underlying algorithm is used:
  40:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  41:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * <pre>
  42:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * 	Result = pSrc[0] * pSrc[0] + pSrc[1] * pSrc[1] + pSrc[2] * pSrc[2] + ... + pSrc[blockSize-1] * 
  43:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * </pre>
  44:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  45:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * There are separate functions for floating point, Q31, Q15, and Q7 data types.
  46:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  47:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  48:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**
  49:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @addtogroup power
  50:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @{
  51:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  52:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  53:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  54:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**
  55:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @brief Sum of the squares of the elements of a floating-point vector.
  56:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @param[in]       *pSrc points to the input vector
  57:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @param[in]       blockSize length of the input vector
  58:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @param[out]      *pResult sum of the squares value returned here
  59:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @return none.
  60:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *
  61:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  62:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  63:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  64:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** void arm_power_f32(
  65:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t * pSrc,
  66:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   uint32_t blockSize,
  67:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t * pResult)
  68:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** {
  28              	 .loc 1 68 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
  34 0000 30B4     	 push {r4,r5}
  35              	.LCFI0:
  36              	 .cfi_def_cfa_offset 8
  37              	 .cfi_offset 4,-8
  38              	 .cfi_offset 5,-4
  69:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t sum = 0.0f;                          /* accumulator */
  70:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t in;                                  /* Temporary variable to store input value */
  71:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  72:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  73:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #if defined (ARM_MATH_DSP)
  74:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  75:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  76:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /*loop Unrolling */
  77:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize >> 2u;
  78:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  79:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  80:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  81:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0u)
  39              	 .loc 1 81 0
  40 0002 8D08     	 lsrs r5,r1,#2
  41              	.LVL1:
  42 0004 DFED147A 	 flds s15,.L14
  43 0008 18D0     	 beq .L2
  44 000a 00F11003 	 add r3,r0,#16
  45 000e 2C46     	 mov r4,r5
  46              	.LVL2:
  47              	.L3:
  82:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
  83:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
  84:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* Compute Power and then store the result in a temporary variable, sum. */
  85:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  48              	 .loc 1 85 0
  49 0010 53ED045A 	 flds s11,[r3,#-16]
  50              	.LVL3:
  86:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  87:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  51              	 .loc 1 87 0
  52 0014 13ED036A 	 flds s12,[r3,#-12]
  88:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  89:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  53              	 .loc 1 89 0
  54 0018 53ED026A 	 flds s13,[r3,#-8]
  90:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  91:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  55              	 .loc 1 91 0
  56 001c 13ED017A 	 flds s14,[r3,#-4]
  86:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  57              	 .loc 1 86 0
  58 0020 E5EEA57A 	 vfma.f32 s15,s11,s11
  59              	.LVL4:
  81:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
  60              	 .loc 1 81 0
  61 0024 013C     	 subs r4,r4,#1
  62              	.LVL5:
  63 0026 03F11003 	 add r3,r3,#16
  64              	.LVL6:
  88:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  65              	 .loc 1 88 0
  66 002a E6EE067A 	 vfma.f32 s15,s12,s12
  67              	.LVL7:
  90:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  68              	 .loc 1 90 0
  69 002e E6EEA67A 	 vfma.f32 s15,s13,s13
  70              	.LVL8:
  92:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  71              	 .loc 1 92 0
  72 0032 E7EE077A 	 vfma.f32 s15,s14,s14
  73              	.LVL9:
  81:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
  74              	 .loc 1 81 0
  75 0036 EBD1     	 bne .L3
  76 0038 00EB0510 	 add r0,r0,r5,lsl#4
  77              	.LVL10:
  78              	.L2:
  93:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  94:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* Decrement the loop counter */
  95:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
  96:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   }
  97:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  98:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
  99:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****    ** No loop unrolling is used. */
 100:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize % 0x4u;
 101:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 102:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 103:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #else
 104:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Run the below code for Cortex-M0 */
 105:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 106:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Loop over blockSize number of values */
 107:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize;
 108:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 109:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 110:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 111:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 112:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0u)
  79              	 .loc 1 112 0
  80 003c 11F00301 	 ands r1,r1,#3
  81              	.LVL11:
  82 0040 05D0     	 beq .L4
  83              	.LVL12:
  84              	.L5:
 113:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
 114:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
 115:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* compute power and then store the result in a temporary variable, sum. */
 116:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  85              	 .loc 1 116 0
  86 0042 B0EC017A 	 fldmias r0!,{s14}
  87              	.LVL13:
 112:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
  88              	 .loc 1 112 0
  89 0046 0139     	 subs r1,r1,#1
  90              	.LVL14:
 117:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  91              	 .loc 1 117 0
  92 0048 E7EE077A 	 vfma.f32 s15,s14,s14
  93              	.LVL15:
 112:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
  94              	 .loc 1 112 0
  95 004c F9D1     	 bne .L5
  96              	.LVL16:
  97              	.L4:
 118:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 119:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* Decrement the loop counter */
 120:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
 121:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   }
 122:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 123:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Store the result to the destination */
 124:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   *pResult = sum;
  98              	 .loc 1 124 0
  99 004e C2ED007A 	 fsts s15,[r2]
 125:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** }
 100              	 .loc 1 125 0
 101 0052 30BC     	 pop {r4,r5}
 102              	.LCFI1:
 103              	 .cfi_restore 5
 104              	 .cfi_restore 4
 105              	 .cfi_def_cfa_offset 0
 106 0054 7047     	 bx lr
 107              	.L15:
 108 0056 00BF     	 .align 2
 109              	.L14:
 110 0058 00000000 	 .word 0
 111              	 .cfi_endproc
 112              	.LFE135:
 114              	 .text
 115              	.Letext0:
 116              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 117              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 118              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_power_f32.c
    {standard input}:20     .text.arm_power_f32:00000000 $t
    {standard input}:25     .text.arm_power_f32:00000000 arm_power_f32
    {standard input}:110    .text.arm_power_f32:00000058 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
