   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_var_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_var_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_var_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_var_f32:
  26              	.LFB135:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c"
   1:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * Title:        arm_var_f32.c
   4:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * Description:  Variance of the elements of a floating-point vector
   5:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * $Date:        27. January 2017
   7:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * $Revision:    V.1.5.1
   8:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @ingroup groupStats
  33:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @defgroup variance  Variance
  37:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *
  38:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * Calculates the variance of the elements in the input vector.
  39:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * The underlying algorithm used is the direct method sometimes referred to as the two-pass method:
  40:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *
  41:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * <pre>
  42:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *   Result = sum(element - meanOfElements)^2) / numElement - 1
  43:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *
  44:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *     where, meanOfElements = ( pSrc[0] * pSrc[0] + pSrc[1] * pSrc[1] + ... + pSrc[blockSize-1] ) 
  45:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *
  46:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * </pre>
  47:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *
  48:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * There are separate functions for floating point, Q31, and Q15 data types.
  49:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  */
  50:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  51:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** /**
  52:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @addtogroup variance
  53:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @{
  54:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  */
  55:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  56:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  57:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** /**
  58:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @brief Variance of the elements of a floating-point vector.
  59:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @param[in]       *pSrc points to the input vector
  60:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @param[in]       blockSize length of the input vector
  61:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @param[out]      *pResult variance value returned here
  62:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @return none.
  63:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  */
  64:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  65:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** void arm_var_f32(
  66:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****                  float32_t * pSrc,
  67:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****                  uint32_t blockSize,
  68:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****                  float32_t * pResult)
  69:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** {
  28              	 .loc 1 69 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
  70:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     float32_t fMean, fValue;
  71:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     uint32_t blkCnt;            /* loop counter */
  72:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     float32_t * pInput = pSrc;
  73:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     float32_t sum = 0.0f;
  74:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     float32_t fSum = 0.0f;
  75:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     #if defined(ARM_MATH_DSP)
  76:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     float32_t in1, in2, in3, in4;
  77:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     #endif
  78:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  79:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     if (blockSize <= 1u)
  34              	 .loc 1 79 0
  35 0000 0129     	 cmp r1,#1
  36 0002 6CD9     	 bls .L31
  37              	.LVL1:
  69:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     float32_t fMean, fValue;
  38              	 .loc 1 69 0
  39 0004 F0B4     	 push {r4,r5,r6,r7}
  40              	.LCFI0:
  41              	 .cfi_def_cfa_offset 16
  42              	 .cfi_offset 4,-16
  43              	 .cfi_offset 5,-12
  44              	 .cfi_offset 6,-8
  45              	 .cfi_offset 7,-4
  80:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     {
  81:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         *pResult = 0;
  82:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         return;
  83:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     }
  84:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  85:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     #if defined(ARM_MATH_DSP)
  86:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /* Run the below code for Cortex-M4 and Cortex-M7 */
  87:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  88:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /*loop Unrolling */
  89:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize >> 2u;
  90:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  91:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  92:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         ** a second loop below computes the remaining 1 to 3 samples. */
  93:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         while (blkCnt > 0u)
  46              	 .loc 1 93 0
  47 0006 8D08     	 lsrs r5,r1,#2
  48              	.LVL2:
  49 0008 64D0     	 beq .L4
  50 000a 00F11003 	 add r3,r0,#16
  51 000e 9FED3A7A 	 flds s14,.L33
  52 0012 1C46     	 mov r4,r3
  53 0014 2E46     	 mov r6,r5
  54              	.LVL3:
  55              	.L5:
  94:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         {
  95:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) */
  96:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             in1 = *pInput++;
  97:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             in2 = *pInput++;
  98:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             in3 = *pInput++;
  99:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             in4 = *pInput++;
 100:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 101:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             sum += in1;
  56              	 .loc 1 101 0
  57 0016 54ED046A 	 flds s13,[r4,#-16]
 102:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             sum += in2;
  58              	 .loc 1 102 0
  59 001a 54ED037A 	 flds s15,[r4,#-12]
 103:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             sum += in3;
  60              	 .loc 1 103 0
  61 001e 54ED025A 	 flds s11,[r4,#-8]
 104:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             sum += in4;
  62              	 .loc 1 104 0
  63 0022 14ED016A 	 flds s12,[r4,#-4]
 101:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             sum += in2;
  64              	 .loc 1 101 0
  65 0026 77EE266A 	 fadds s13,s14,s13
  66              	.LVL4:
  93:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         {
  67              	 .loc 1 93 0
  68 002a 013E     	 subs r6,r6,#1
  69              	.LVL5:
 102:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             sum += in3;
  70              	 .loc 1 102 0
  71 002c 76EEA77A 	 fadds s15,s13,s15
  72              	.LVL6:
  73 0030 04F11004 	 add r4,r4,#16
  74              	.LVL7:
 103:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             sum += in4;
  75              	 .loc 1 103 0
  76 0034 77EEA57A 	 fadds s15,s15,s11
  77              	.LVL8:
  78              	 .loc 1 104 0
  79 0038 37EE867A 	 fadds s14,s15,s12
  80              	.LVL9:
  93:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         {
  81              	 .loc 1 93 0
  82 003c EBD1     	 bne .L5
  83 003e 2F01     	 lsls r7,r5,#4
 105:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 106:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             /* Decrement the loop counter */
 107:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             blkCnt--;
 108:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         }
 109:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 110:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 111:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         ** No loop unrolling is used. */
 112:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize % 0x4u;
 113:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 114:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     #else
 115:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /* Run the below code for Cortex-M0 or Cortex-M3 */
 116:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 117:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /* Loop over blockSize number of values */
 118:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize;
 119:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 120:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     #endif
 121:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 122:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     while (blkCnt > 0u)
  84              	 .loc 1 122 0
  85 0040 11F00304 	 ands r4,r1,#3
  86              	.LVL10:
  87 0044 00EB0706 	 add r6,r0,r7
  88              	.LVL11:
  89 0048 4FD0     	 beq .L32
  90              	.LVL12:
  91              	.L13:
  73:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     float32_t fSum = 0.0f;
  92              	 .loc 1 73 0
  93 004a 2346     	 mov r3,r4
  94              	.LVL13:
  95              	.L7:
 123:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     {
 124:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) */
 125:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         sum += *pInput++;
  96              	 .loc 1 125 0
  97 004c F6EC017A 	 fldmias r6!,{s15}
  98              	.LVL14:
 122:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     {
  99              	 .loc 1 122 0
 100 0050 013B     	 subs r3,r3,#1
 101              	.LVL15:
 102              	 .loc 1 125 0
 103 0052 37EE277A 	 fadds s14,s14,s15
 104              	.LVL16:
 122:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     {
 105              	 .loc 1 122 0
 106 0056 F9D1     	 bne .L7
 126:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 127:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /* Decrement the loop counter */
 128:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         blkCnt--;
 129:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     }
 130:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 131:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) / blockSize  */
 132:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     fMean = sum / (float32_t) blockSize;
 107              	 .loc 1 132 0
 108 0058 07EE901A 	 fmsr s15,r1
 109 005c F8EE674A 	 fuitos s9,s15
 110 0060 C7EE247A 	 fdivs s15,s14,s9
 111              	.LVL17:
 133:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 134:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     pInput = pSrc;
 135:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 136:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     #if defined(ARM_MATH_DSP)
 137:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 138:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /*loop Unrolling */
 139:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize >> 2u;
 140:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 141:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 142:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         ** a second loop below computes the remaining 1 to 3 samples. */
 143:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         while (blkCnt > 0u)
 112              	 .loc 1 143 0
 113 0064 002D     	 cmp r5,#0
 114 0066 3DD0     	 beq .L26
 115 0068 00F11003 	 add r3,r0,#16
 116 006c 2F01     	 lsls r7,r5,#4
 117              	.L12:
  89:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 118              	 .loc 1 89 0
 119 006e 2946     	 mov r1,r5
 120              	.LVL18:
 121 0070 9FED217A 	 flds s14,.L33
 122              	.LVL19:
 123              	.L9:
 144:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         {
 145:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fValue = *pInput++ - fMean;
 124              	 .loc 1 145 0
 125 0074 13ED045A 	 flds s10,[r3,#-16]
 146:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fSum += fValue * fValue;
 147:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fValue = *pInput++ - fMean;
 126              	 .loc 1 147 0
 127 0078 53ED035A 	 flds s11,[r3,#-12]
 148:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fSum += fValue * fValue;
 149:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fValue = *pInput++ - fMean;
 128              	 .loc 1 149 0
 129 007c 13ED026A 	 flds s12,[r3,#-8]
 150:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fSum += fValue * fValue;
 151:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fValue = *pInput++ - fMean;
 130              	 .loc 1 151 0
 131 0080 53ED016A 	 flds s13,[r3,#-4]
 145:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fSum += fValue * fValue;
 132              	 .loc 1 145 0
 133 0084 35EE675A 	 fsubs s10,s10,s15
 134              	.LVL20:
 147:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fSum += fValue * fValue;
 135              	 .loc 1 147 0
 136 0088 75EEE75A 	 fsubs s11,s11,s15
 146:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fValue = *pInput++ - fMean;
 137              	 .loc 1 146 0
 138 008c A5EE057A 	 vfma.f32 s14,s10,s10
 139              	.LVL21:
 143:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         {
 140              	 .loc 1 143 0
 141 0090 0139     	 subs r1,r1,#1
 142              	.LVL22:
 143 0092 03F11003 	 add r3,r3,#16
 144              	.LVL23:
 149:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fSum += fValue * fValue;
 145              	 .loc 1 149 0
 146 0096 36EE676A 	 fsubs s12,s12,s15
 148:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fValue = *pInput++ - fMean;
 147              	 .loc 1 148 0
 148 009a A5EEA57A 	 vfma.f32 s14,s11,s11
 149              	.LVL24:
 150              	 .loc 1 151 0
 151 009e 76EEE76A 	 fsubs s13,s13,s15
 150:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fValue = *pInput++ - fMean;
 152              	 .loc 1 150 0
 153 00a2 A6EE067A 	 vfma.f32 s14,s12,s12
 154              	.LVL25:
 152:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             fSum += fValue * fValue;
 155              	 .loc 1 152 0
 156 00a6 A6EEA67A 	 vfma.f32 s14,s13,s13
 157              	.LVL26:
 143:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         {
 158              	 .loc 1 143 0
 159 00aa E3D1     	 bne .L9
 160 00ac 3844     	 add r0,r0,r7
 161              	.LVL27:
 153:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 154:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             /* Decrement the loop counter */
 155:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****             blkCnt--;
 156:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         }
 157:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 158:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize % 0x4u;
 159:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     #else
 160:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /* Run the below code for Cortex-M0 or Cortex-M3 */
 161:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 162:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /* Loop over blockSize number of values */
 163:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         blkCnt = blockSize;
 164:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     #endif
 165:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 166:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     while (blkCnt > 0u)
 162              	 .loc 1 166 0
 163 00ae 3CB1     	 cbz r4,.L10
 164              	.LVL28:
 165              	.L11:
 167:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     {
 168:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         fValue = *pInput++ - fMean;
 166              	 .loc 1 168 0
 167 00b0 F0EC016A 	 fldmias r0!,{s13}
 168              	.LVL29:
 169 00b4 76EEE76A 	 fsubs s13,s13,s15
 170              	.LVL30:
 166:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     {
 171              	 .loc 1 166 0
 172 00b8 013C     	 subs r4,r4,#1
 173              	.LVL31:
 169:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         fSum += fValue * fValue;
 174              	 .loc 1 169 0
 175 00ba A6EEA67A 	 vfma.f32 s14,s13,s13
 176              	.LVL32:
 166:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     {
 177              	 .loc 1 166 0
 178 00be F7D1     	 bne .L11
 179              	.L10:
 170:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 171:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         /* Decrement the loop counter */
 172:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         blkCnt--;
 173:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     }
 174:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 175:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* Variance */
 176:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     *pResult = fSum / (float32_t)(blockSize - 1.0f);
 180              	 .loc 1 176 0
 181 00c0 F7EE007A 	 fconsts s15,#112
 182              	.LVL33:
 183 00c4 74EEE74A 	 fsubs s9,s9,s15
 177:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** }
 184              	 .loc 1 177 0
 185 00c8 F0BC     	 pop {r4,r5,r6,r7}
 186              	.LCFI1:
 187              	 .cfi_remember_state
 188              	 .cfi_restore 7
 189              	 .cfi_restore 6
 190              	 .cfi_restore 5
 191              	 .cfi_restore 4
 192              	 .cfi_def_cfa_offset 0
 176:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** }
 193              	 .loc 1 176 0
 194 00ca 87EE247A 	 fdivs s14,s14,s9
 195              	.LVL34:
 196 00ce 82ED007A 	 fsts s14,[r2]
 197              	 .loc 1 177 0
 198 00d2 7047     	 bx lr
 199              	.LVL35:
 200              	.L4:
 201              	.LCFI2:
 202              	 .cfi_restore_state
  73:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     float32_t fSum = 0.0f;
 203              	 .loc 1 73 0
 204 00d4 9FED087A 	 flds s14,.L33
  72:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     float32_t sum = 0.0f;
 205              	 .loc 1 72 0
 206 00d8 0646     	 mov r6,r0
 112:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 207              	 .loc 1 112 0
 208 00da 0C46     	 mov r4,r1
 209 00dc B5E7     	 b .L13
 210              	.LVL36:
 211              	.L31:
 212              	.LCFI3:
 213              	 .cfi_def_cfa_offset 0
 214              	 .cfi_restore 4
 215              	 .cfi_restore 5
 216              	 .cfi_restore 6
 217              	 .cfi_restore 7
  81:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****         return;
 218              	 .loc 1 81 0
 219 00de 0023     	 movs r3,#0
 220 00e0 1360     	 str r3,[r2]
 221 00e2 7047     	 bx lr
 222              	.LVL37:
 223              	.L26:
 224              	.LCFI4:
 225              	 .cfi_def_cfa_offset 16
 226              	 .cfi_offset 4,-16
 227              	 .cfi_offset 5,-12
 228              	 .cfi_offset 6,-8
 229              	 .cfi_offset 7,-4
  74:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     #if defined(ARM_MATH_DSP)
 230              	 .loc 1 74 0
 231 00e4 9FED047A 	 flds s14,.L33
 232              	.LVL38:
 233 00e8 E2E7     	 b .L11
 234              	.LVL39:
 235              	.L32:
 132:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 236              	 .loc 1 132 0
 237 00ea 07EE901A 	 fmsr s15,r1
 238 00ee F8EE674A 	 fuitos s9,s15
 239 00f2 C7EE247A 	 fdivs s15,s14,s9
 240              	.LVL40:
 241 00f6 BAE7     	 b .L12
 242              	.L34:
 243              	 .align 2
 244              	.L33:
 245 00f8 00000000 	 .word 0
 246              	 .cfi_endproc
 247              	.LFE135:
 249              	 .text
 250              	.Letext0:
 251              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 252              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 253              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_var_f32.c
    {standard input}:20     .text.arm_var_f32:00000000 $t
    {standard input}:25     .text.arm_var_f32:00000000 arm_var_f32
    {standard input}:245    .text.arm_var_f32:000000f8 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
