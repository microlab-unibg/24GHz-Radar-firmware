   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_flash.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_FLASH_lEnterPageModeCommand,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_FLASH_lEnterPageModeCommand
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_FLASH_lEnterPageModeCommand:
  26              	.LFB142:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc4_flash.c"
   1:../Libraries/XMCLib/src/xmc4_flash.c **** /**
   2:../Libraries/XMCLib/src/xmc4_flash.c ****  * @file xmc4_flash.c
   3:../Libraries/XMCLib/src/xmc4_flash.c ****  * @date 2016-01-08
   4:../Libraries/XMCLib/src/xmc4_flash.c ****  *
   5:../Libraries/XMCLib/src/xmc4_flash.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc4_flash.c ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc4_flash.c ****  *
   9:../Libraries/XMCLib/src/xmc4_flash.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc4_flash.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc4_flash.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc4_flash.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc4_flash.c ****  * 
  18:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc4_flash.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc4_flash.c ****  * 
  21:../Libraries/XMCLib/src/xmc4_flash.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc4_flash.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc4_flash.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc4_flash.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc4_flash.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc4_flash.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc4_flash.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc4_flash.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc4_flash.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc4_flash.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc4_flash.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  36:../Libraries/XMCLib/src/xmc4_flash.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc4_flash.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  39:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-02-10:
  40:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  42:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-06-20: 
  43:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Removed definition of GetDriverVersion API 
  44:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  45:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-08-17: 
  46:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Added the below API's to the public interface.
  47:../Libraries/XMCLib/src/xmc4_flash.c ****  *       1. XMC_FLASH_Reset
  48:../Libraries/XMCLib/src/xmc4_flash.c ****  *       2. XMC_FLASH_ErasePhysicalSector
  49:../Libraries/XMCLib/src/xmc4_flash.c ****  *       3. XMC_FLASH_EraseUCB
  50:../Libraries/XMCLib/src/xmc4_flash.c ****  *       4. XMC_FLASH_ResumeProtection
  51:../Libraries/XMCLib/src/xmc4_flash.c ****  *       5. XMC_FLASH_RepairPhysicalSector
  52:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  53:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2016-01-08: 
  54:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Wait until operation is finished for the next functions:
  55:../Libraries/XMCLib/src/xmc4_flash.c ****  *       1. XMC_FLASH_InstallProtection
  56:../Libraries/XMCLib/src/xmc4_flash.c ****  *       2. XMC_FLASH_ConfirmProtection
  57:../Libraries/XMCLib/src/xmc4_flash.c ****  *       3. XMC_FLASH_ProgramPage
  58:../Libraries/XMCLib/src/xmc4_flash.c ****  *       4. XMC_FLASH_EraseSector
  59:../Libraries/XMCLib/src/xmc4_flash.c ****  *       5. XMC_FLASH_ErasePhysicalSector
  60:../Libraries/XMCLib/src/xmc4_flash.c ****  *       6. XMC_FLASH_EraseUCB
  61:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Fix XMC_FLASH_VerifyReadProtection and XMC_FLASH_VerifyWriteProtection
  62:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  63:../Libraries/XMCLib/src/xmc4_flash.c ****  * @endcond 
  64:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  65:../Libraries/XMCLib/src/xmc4_flash.c ****  */
  66:../Libraries/XMCLib/src/xmc4_flash.c **** 
  67:../Libraries/XMCLib/src/xmc4_flash.c **** #include "xmc_flash.h"
  68:../Libraries/XMCLib/src/xmc4_flash.c **** 
  69:../Libraries/XMCLib/src/xmc4_flash.c **** #if UC_FAMILY == XMC4
  70:../Libraries/XMCLib/src/xmc4_flash.c **** 
  71:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  72:../Libraries/XMCLib/src/xmc4_flash.c ****  * MACROS
  73:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  74:../Libraries/XMCLib/src/xmc4_flash.c **** 
  75:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROTECTION_CONFIGURATION_WORDS (8UL) /* Used to upadte the assembly buffer during
  76:../Libraries/XMCLib/src/xmc4_flash.c ****                                                           configuration */
  77:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_OFFSET (512UL) /* Offset address for UCB page */
  78:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_WORDS  (4UL)
  79:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_CODE   (0x8AFE15C3UL)
  80:../Libraries/XMCLib/src/xmc4_flash.c **** 
  81:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  82:../Libraries/XMCLib/src/xmc4_flash.c ****  * LOCAL FUNCTIONS
  83:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  84:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void);
  85:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word);
  86:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address);
  87:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address);
  88:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address);
  89:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
  90:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1);
  91:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void);
  92:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address);
  93:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void);
  94:../Libraries/XMCLib/src/xmc4_flash.c **** 
  95:../Libraries/XMCLib/src/xmc4_flash.c **** /*
  96:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to program the PFLASH in to page mode, so that assembly buffer is used 
  97:../Libraries/XMCLib/src/xmc4_flash.c ****  */
  98:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void)
  99:../Libraries/XMCLib/src/xmc4_flash.c **** {
  28              	 .loc 1 99 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
 100:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 101:../Libraries/XMCLib/src/xmc4_flash.c **** 
 102:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 103:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = (uint32_t)0x50U;
  34              	 .loc 1 103 0
  35 0000 014B     	 ldr r3,.L2
  36 0002 5022     	 movs r2,#80
  37 0004 1A60     	 str r2,[r3]
  38 0006 7047     	 bx lr
  39              	.L3:
  40              	 .align 2
  41              	.L2:
  42 0008 5455000C 	 .word 201348436
  43              	 .cfi_endproc
  44              	.LFE142:
  46              	 .section .text.XMC_FLASH_lLoadPageCommand,"ax",%progbits
  47              	 .align 2
  48              	 .global XMC_FLASH_lLoadPageCommand
  49              	 .thumb
  50              	 .thumb_func
  52              	XMC_FLASH_lLoadPageCommand:
  53              	.LFB143:
 104:../Libraries/XMCLib/src/xmc4_flash.c **** }
 105:../Libraries/XMCLib/src/xmc4_flash.c **** 
 106:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 107:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to load the data into the page assembly buffer 
 108:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 109:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word)
 110:../Libraries/XMCLib/src/xmc4_flash.c **** {
  54              	 .loc 1 110 0
  55              	 .cfi_startproc
  56              	 
  57              	 
  58              	 
  59              	.LVL1:
 111:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 112:../Libraries/XMCLib/src/xmc4_flash.c **** 
 113:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f0U);
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = low_word;
  60              	 .loc 1 114 0
  61 0000 024A     	 ldr r2,.L5
 115:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 116:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = high_word;
  62              	 .loc 1 116 0
  63 0002 034B     	 ldr r3,.L5+4
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
  64              	 .loc 1 114 0
  65 0004 1060     	 str r0,[r2]
  66              	.LVL2:
  67              	 .loc 1 116 0
  68 0006 1960     	 str r1,[r3]
  69 0008 7047     	 bx lr
  70              	.L6:
  71 000a 00BF     	 .align 2
  72              	.L5:
  73 000c F055000C 	 .word 201348592
  74 0010 F455000C 	 .word 201348596
  75              	 .cfi_endproc
  76              	.LFE143:
  78              	 .section .text.XMC_FLASH_lWritePageCommand,"ax",%progbits
  79              	 .align 2
  80              	 .global XMC_FLASH_lWritePageCommand
  81              	 .thumb
  82              	 .thumb_func
  84              	XMC_FLASH_lWritePageCommand:
  85              	.LFB144:
 117:../Libraries/XMCLib/src/xmc4_flash.c **** }
 118:../Libraries/XMCLib/src/xmc4_flash.c **** 
 119:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 120:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of one page with data from the assembly buffer
 121:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 122:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address)
 123:../Libraries/XMCLib/src/xmc4_flash.c **** {
  86              	 .loc 1 123 0
  87              	 .cfi_startproc
  88              	 
  89              	 
  90              	 
  91              	.LVL3:
  92 0000 30B4     	 push {r4,r5}
  93              	.LCFI0:
  94              	 .cfi_def_cfa_offset 8
  95              	 .cfi_offset 4,-8
  96              	 .cfi_offset 5,-4
 124:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 125:../Libraries/XMCLib/src/xmc4_flash.c **** 
 126:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 127:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
  97              	 .loc 1 127 0
  98 0002 054A     	 ldr r2,.L9
 128:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 129:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
  99              	 .loc 1 129 0
 100 0004 054C     	 ldr r4,.L9+4
 127:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 101              	 .loc 1 127 0
 102 0006 AA23     	 movs r3,#170
 103              	 .loc 1 129 0
 104 0008 5525     	 movs r5,#85
 130:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 131:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xa0U;
 105              	 .loc 1 131 0
 106 000a A021     	 movs r1,#160
 127:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 107              	 .loc 1 127 0
 108 000c 1360     	 str r3,[r2]
 109              	.LVL4:
 129:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 110              	 .loc 1 129 0
 111 000e 2560     	 str r5,[r4]
 112              	.LVL5:
 113              	 .loc 1 131 0
 114 0010 1160     	 str r1,[r2]
 115              	.LVL6:
 132:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 133:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 134:../Libraries/XMCLib/src/xmc4_flash.c **** }
 116              	 .loc 1 134 0
 117 0012 30BC     	 pop {r4,r5}
 118              	.LCFI1:
 119              	 .cfi_restore 5
 120              	 .cfi_restore 4
 121              	 .cfi_def_cfa_offset 0
 133:../Libraries/XMCLib/src/xmc4_flash.c **** }
 122              	 .loc 1 133 0
 123 0014 0360     	 str r3,[r0]
 124              	 .loc 1 134 0
 125 0016 7047     	 bx lr
 126              	.L10:
 127              	 .align 2
 128              	.L9:
 129 0018 5455000C 	 .word 201348436
 130 001c A8AA000C 	 .word 201370280
 131              	 .cfi_endproc
 132              	.LFE144:
 134              	 .section .text.XMC_FLASH_lWriteUCBPageCommand,"ax",%progbits
 135              	 .align 2
 136              	 .global XMC_FLASH_lWriteUCBPageCommand
 137              	 .thumb
 138              	 .thumb_func
 140              	XMC_FLASH_lWriteUCBPageCommand:
 141              	.LFB145:
 135:../Libraries/XMCLib/src/xmc4_flash.c **** 
 136:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 137:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of UCB page with data from the assembly buffer
 138:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 139:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address)
 140:../Libraries/XMCLib/src/xmc4_flash.c **** {
 142              	 .loc 1 140 0
 143              	 .cfi_startproc
 144              	 
 145              	 
 146              	 
 147              	.LVL7:
 148 0000 30B4     	 push {r4,r5}
 149              	.LCFI2:
 150              	 .cfi_def_cfa_offset 8
 151              	 .cfi_offset 4,-8
 152              	 .cfi_offset 5,-4
 141:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 142:../Libraries/XMCLib/src/xmc4_flash.c **** 
 143:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 144:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 153              	 .loc 1 144 0
 154 0002 054A     	 ldr r2,.L13
 145:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 146:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 155              	 .loc 1 146 0
 156 0004 054C     	 ldr r4,.L13+4
 144:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 157              	 .loc 1 144 0
 158 0006 AA23     	 movs r3,#170
 159              	 .loc 1 146 0
 160 0008 5525     	 movs r5,#85
 147:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 148:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 161              	 .loc 1 148 0
 162 000a C021     	 movs r1,#192
 144:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 163              	 .loc 1 144 0
 164 000c 1360     	 str r3,[r2]
 165              	.LVL8:
 146:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 166              	 .loc 1 146 0
 167 000e 2560     	 str r5,[r4]
 168              	.LVL9:
 169              	 .loc 1 148 0
 170 0010 1160     	 str r1,[r2]
 171              	.LVL10:
 149:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 150:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 151:../Libraries/XMCLib/src/xmc4_flash.c **** }
 172              	 .loc 1 151 0
 173 0012 30BC     	 pop {r4,r5}
 174              	.LCFI3:
 175              	 .cfi_restore 5
 176              	 .cfi_restore 4
 177              	 .cfi_def_cfa_offset 0
 150:../Libraries/XMCLib/src/xmc4_flash.c **** }
 178              	 .loc 1 150 0
 179 0014 0360     	 str r3,[r0]
 180              	 .loc 1 151 0
 181 0016 7047     	 bx lr
 182              	.L14:
 183              	 .align 2
 184              	.L13:
 185 0018 5455000C 	 .word 201348436
 186 001c A8AA000C 	 .word 201370280
 187              	 .cfi_endproc
 188              	.LFE145:
 190              	 .section .text.XMC_FLASH_lEraseSectorCommand,"ax",%progbits
 191              	 .align 2
 192              	 .global XMC_FLASH_lEraseSectorCommand
 193              	 .thumb
 194              	 .thumb_func
 196              	XMC_FLASH_lEraseSectorCommand:
 197              	.LFB146:
 152:../Libraries/XMCLib/src/xmc4_flash.c **** 
 153:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 154:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase sector which is starting with the specified address
 155:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 156:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address)
 157:../Libraries/XMCLib/src/xmc4_flash.c **** {
 198              	 .loc 1 157 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202              	 
 203              	.LVL11:
 204 0000 70B4     	 push {r4,r5,r6}
 205              	.LCFI4:
 206              	 .cfi_def_cfa_offset 12
 207              	 .cfi_offset 4,-12
 208              	 .cfi_offset 5,-8
 209              	 .cfi_offset 6,-4
 158:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 159:../Libraries/XMCLib/src/xmc4_flash.c **** 
 160:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 161:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 210              	 .loc 1 161 0
 211 0002 074B     	 ldr r3,.L17
 162:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 163:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 212              	 .loc 1 163 0
 213 0004 074A     	 ldr r2,.L17+4
 161:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 214              	 .loc 1 161 0
 215 0006 AA24     	 movs r4,#170
 216              	 .loc 1 163 0
 217 0008 5521     	 movs r1,#85
 164:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 165:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 218              	 .loc 1 165 0
 219 000a 8026     	 movs r6,#128
 166:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 167:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 168:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 169:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 170:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 171:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x30U;
 220              	 .loc 1 171 0
 221 000c 3025     	 movs r5,#48
 161:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 222              	 .loc 1 161 0
 223 000e 1C60     	 str r4,[r3]
 224              	.LVL12:
 163:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 225              	 .loc 1 163 0
 226 0010 1160     	 str r1,[r2]
 227              	.LVL13:
 165:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 228              	 .loc 1 165 0
 229 0012 1E60     	 str r6,[r3]
 167:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 230              	 .loc 1 167 0
 231 0014 1C60     	 str r4,[r3]
 232              	.LVL14:
 169:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 233              	 .loc 1 169 0
 234 0016 1160     	 str r1,[r2]
 235              	.LVL15:
 236              	 .loc 1 171 0
 237 0018 0560     	 str r5,[r0]
 172:../Libraries/XMCLib/src/xmc4_flash.c **** }
 238              	 .loc 1 172 0
 239 001a 70BC     	 pop {r4,r5,r6}
 240              	.LCFI5:
 241              	 .cfi_restore 6
 242              	 .cfi_restore 5
 243              	 .cfi_restore 4
 244              	 .cfi_def_cfa_offset 0
 245 001c 7047     	 bx lr
 246              	.L18:
 247 001e 00BF     	 .align 2
 248              	.L17:
 249 0020 5455000C 	 .word 201348436
 250 0024 A8AA000C 	 .word 201370280
 251              	 .cfi_endproc
 252              	.LFE146:
 254              	 .section .text.XMC_FLASH_lDisableSectorWriteProtectionCommand,"ax",%progbits
 255              	 .align 2
 256              	 .global XMC_FLASH_lDisableSectorWriteProtectionCommand
 257              	 .thumb
 258              	 .thumb_func
 260              	XMC_FLASH_lDisableSectorWriteProtectionCommand:
 261              	.LFB147:
 173:../Libraries/XMCLib/src/xmc4_flash.c **** 
 174:../Libraries/XMCLib/src/xmc4_flash.c **** 
 175:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 176:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the write protection belonging to the the USER specified, when p
 177:../Libraries/XMCLib/src/xmc4_flash.c ****  * configured values
 178:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 179:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
 180:../Libraries/XMCLib/src/xmc4_flash.c **** {
 262              	 .loc 1 180 0
 263              	 .cfi_startproc
 264              	 
 265              	 
 266              	.LVL16:
 267 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 268              	.LCFI6:
 269              	 .cfi_def_cfa_offset 20
 270              	 .cfi_offset 4,-20
 271              	 .cfi_offset 5,-16
 272              	 .cfi_offset 6,-12
 273              	 .cfi_offset 7,-8
 274              	 .cfi_offset 14,-4
 181:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 182:../Libraries/XMCLib/src/xmc4_flash.c **** 
 183:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 184:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 185:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 186:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 275              	 .loc 1 186 0
 276 0002 084B     	 ldr r3,.L21
 184:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 277              	 .loc 1 184 0
 278 0004 DFF828E0 	 ldr lr,.L21+12
 187:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 188:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = user;
 279              	 .loc 1 188 0
 280 0008 074E     	 ldr r6,.L21+4
 189:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 190:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 191:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 192:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 193:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 194:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x05U;
 281              	 .loc 1 194 0
 282 000a 084C     	 ldr r4,.L21+8
 184:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 283              	 .loc 1 184 0
 284 000c 4FF0AA0C 	 mov ip,#170
 186:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 285              	 .loc 1 186 0
 286 0010 5527     	 movs r7,#85
 287              	 .loc 1 194 0
 288 0012 0525     	 movs r5,#5
 184:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 289              	 .loc 1 184 0
 290 0014 CEF800C0 	 str ip,[lr]
 291              	.LVL17:
 186:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 292              	 .loc 1 186 0
 293 0018 1F60     	 str r7,[r3]
 294              	.LVL18:
 188:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 295              	 .loc 1 188 0
 296 001a 3060     	 str r0,[r6]
 297              	.LVL19:
 190:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 298              	 .loc 1 190 0
 299 001c 1960     	 str r1,[r3]
 192:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 300              	 .loc 1 192 0
 301 001e 1A60     	 str r2,[r3]
 302              	.LVL20:
 303              	 .loc 1 194 0
 304 0020 2560     	 str r5,[r4]
 305 0022 F0BD     	 pop {r4,r5,r6,r7,pc}
 306              	.L22:
 307              	 .align 2
 308              	.L21:
 309 0024 A8AA000C 	 .word 201370280
 310 0028 3C55000C 	 .word 201348412
 311 002c 5855000C 	 .word 201348440
 312 0030 5455000C 	 .word 201348436
 313              	 .cfi_endproc
 314              	.LFE147:
 316              	 .section .text.XMC_FLASH_lDisableReadProtectionCommand,"ax",%progbits
 317              	 .align 2
 318              	 .global XMC_FLASH_lDisableReadProtectionCommand
 319              	 .thumb
 320              	 .thumb_func
 322              	XMC_FLASH_lDisableReadProtectionCommand:
 323              	.LFB148:
 195:../Libraries/XMCLib/src/xmc4_flash.c **** }
 196:../Libraries/XMCLib/src/xmc4_flash.c **** 
 197:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 198:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the read protection along with write protection, when passwords 
 199:../Libraries/XMCLib/src/xmc4_flash.c ****  * configured values
 200:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 201:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1)
 202:../Libraries/XMCLib/src/xmc4_flash.c **** {
 324              	 .loc 1 202 0
 325              	 .cfi_startproc
 326              	 
 327              	 
 328              	.LVL21:
 329 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 330              	.LCFI7:
 331              	 .cfi_def_cfa_offset 20
 332              	 .cfi_offset 4,-20
 333              	 .cfi_offset 5,-16
 334              	 .cfi_offset 6,-12
 335              	 .cfi_offset 7,-8
 336              	 .cfi_offset 14,-4
 203:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 204:../Libraries/XMCLib/src/xmc4_flash.c **** 
 205:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 206:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 207:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 208:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 337              	 .loc 1 208 0
 338 0002 094B     	 ldr r3,.L25
 206:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 339              	 .loc 1 206 0
 340 0004 DFF82CE0 	 ldr lr,.L25+12
 209:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 210:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x00U;
 341              	 .loc 1 210 0
 342 0008 084D     	 ldr r5,.L25+4
 211:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 212:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 213:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 214:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 215:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 216:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x08U;
 343              	 .loc 1 216 0
 344 000a 094A     	 ldr r2,.L25+8
 206:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 345              	 .loc 1 206 0
 346 000c 4FF0AA0C 	 mov ip,#170
 208:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 347              	 .loc 1 208 0
 348 0010 5527     	 movs r7,#85
 210:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 349              	 .loc 1 210 0
 350 0012 0026     	 movs r6,#0
 351              	 .loc 1 216 0
 352 0014 0824     	 movs r4,#8
 206:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 353              	 .loc 1 206 0
 354 0016 CEF800C0 	 str ip,[lr]
 355              	.LVL22:
 208:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 356              	 .loc 1 208 0
 357 001a 1F60     	 str r7,[r3]
 358              	.LVL23:
 210:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 359              	 .loc 1 210 0
 360 001c 2E60     	 str r6,[r5]
 361              	.LVL24:
 212:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 362              	 .loc 1 212 0
 363 001e 1860     	 str r0,[r3]
 214:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 364              	 .loc 1 214 0
 365 0020 1960     	 str r1,[r3]
 366              	.LVL25:
 367              	 .loc 1 216 0
 368 0022 1460     	 str r4,[r2]
 369 0024 F0BD     	 pop {r4,r5,r6,r7,pc}
 370              	.L26:
 371 0026 00BF     	 .align 2
 372              	.L25:
 373 0028 A8AA000C 	 .word 201370280
 374 002c 3C55000C 	 .word 201348412
 375 0030 5855000C 	 .word 201348440
 376 0034 5455000C 	 .word 201348436
 377              	 .cfi_endproc
 378              	.LFE148:
 380              	 .section .text.XMC_FLASH_lClearStatusCommand,"ax",%progbits
 381              	 .align 2
 382              	 .global XMC_FLASH_lClearStatusCommand
 383              	 .thumb
 384              	 .thumb_func
 386              	XMC_FLASH_lClearStatusCommand:
 387              	.LFB149:
 217:../Libraries/XMCLib/src/xmc4_flash.c **** }
 218:../Libraries/XMCLib/src/xmc4_flash.c **** 
 219:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 220:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to clear FSR.PROG and FSR.ERASE and the error flags in FSR such as PFOPER, SQER, PROER, 
 221:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 222:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void)
 223:../Libraries/XMCLib/src/xmc4_flash.c **** {
 388              	 .loc 1 223 0
 389              	 .cfi_startproc
 390              	 
 391              	 
 392              	 
 393              	.LVL26:
 224:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 225:../Libraries/XMCLib/src/xmc4_flash.c **** 
 226:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 227:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xf5U;
 394              	 .loc 1 227 0
 395 0000 014B     	 ldr r3,.L28
 396 0002 F522     	 movs r2,#245
 397 0004 1A60     	 str r2,[r3]
 398 0006 7047     	 bx lr
 399              	.L29:
 400              	 .align 2
 401              	.L28:
 402 0008 5455000C 	 .word 201348436
 403              	 .cfi_endproc
 404              	.LFE149:
 406              	 .section .text.XMC_FLASH_ClearStatus,"ax",%progbits
 407              	 .align 2
 408              	 .global XMC_FLASH_ClearStatus
 409              	 .thumb
 410              	 .thumb_func
 412              	XMC_FLASH_ClearStatus:
 413              	.LFB150:
 228:../Libraries/XMCLib/src/xmc4_flash.c **** }
 229:../Libraries/XMCLib/src/xmc4_flash.c **** 
 230:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
 231:../Libraries/XMCLib/src/xmc4_flash.c ****  * API IMPLEMENTATION
 232:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
 233:../Libraries/XMCLib/src/xmc4_flash.c **** 
 234:../Libraries/XMCLib/src/xmc4_flash.c ****  /*
 235:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API shall clear Program, erase and error flags(PFOPER, SQER, PROER, PFDBER, ORIER, VER) of 
 236:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 237:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ClearStatus(void)
 238:../Libraries/XMCLib/src/xmc4_flash.c **** {
 414              	 .loc 1 238 0
 415              	 .cfi_startproc
 416              	 
 417              	 
 418              	 
 419              	.LVL27:
 420              	.LBB64:
 421              	.LBB65:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 422              	 .loc 1 227 0
 423 0000 014B     	 ldr r3,.L31
 424 0002 F522     	 movs r2,#245
 425 0004 1A60     	 str r2,[r3]
 426 0006 7047     	 bx lr
 427              	.L32:
 428              	 .align 2
 429              	.L31:
 430 0008 5455000C 	 .word 201348436
 431              	.LBE65:
 432              	.LBE64:
 433              	 .cfi_endproc
 434              	.LFE150:
 436              	 .section .text.XMC_FLASH_GetStatus,"ax",%progbits
 437              	 .align 2
 438              	 .global XMC_FLASH_GetStatus
 439              	 .thumb
 440              	 .thumb_func
 442              	XMC_FLASH_GetStatus:
 443              	.LFB151:
 239:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 240:../Libraries/XMCLib/src/xmc4_flash.c **** }
 241:../Libraries/XMCLib/src/xmc4_flash.c **** 
 242:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 243:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API returns the FSR register value
 244:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 245:../Libraries/XMCLib/src/xmc4_flash.c **** uint32_t XMC_FLASH_GetStatus(void)
 246:../Libraries/XMCLib/src/xmc4_flash.c **** {
 444              	 .loc 1 246 0
 445              	 .cfi_startproc
 446              	 
 447              	 
 448              	 
 247:../Libraries/XMCLib/src/xmc4_flash.c ****   return FLASH0->FSR;
 449              	 .loc 1 247 0
 450 0000 024A     	 ldr r2,.L34
 451 0002 41F21003 	 movw r3,#4112
 452 0006 D058     	 ldr r0,[r2,r3]
 248:../Libraries/XMCLib/src/xmc4_flash.c **** }
 453              	 .loc 1 248 0
 454 0008 7047     	 bx lr
 455              	.L35:
 456 000a 00BF     	 .align 2
 457              	.L34:
 458 000c 00100058 	 .word 1476399104
 459              	 .cfi_endproc
 460              	.LFE151:
 462              	 .section .text.XMC_FLASH_EnableEvent,"ax",%progbits
 463              	 .align 2
 464              	 .global XMC_FLASH_EnableEvent
 465              	 .thumb
 466              	 .thumb_func
 468              	XMC_FLASH_EnableEvent:
 469              	.LFB152:
 249:../Libraries/XMCLib/src/xmc4_flash.c **** 
 250:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 251:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API enables the events which required to trigger the ISR 
 252:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 253:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EnableEvent(const uint32_t event_msk)
 254:../Libraries/XMCLib/src/xmc4_flash.c **** {
 470              	 .loc 1 254 0
 471              	 .cfi_startproc
 472              	 
 473              	 
 474              	 
 475              	.LVL28:
 255:../Libraries/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON |= event_msk;
 476              	 .loc 1 255 0
 477 0000 0349     	 ldr r1,.L37
 478 0002 41F21402 	 movw r2,#4116
 479 0006 8B58     	 ldr r3,[r1,r2]
 480 0008 1843     	 orrs r0,r0,r3
 481              	.LVL29:
 482 000a 8850     	 str r0,[r1,r2]
 483 000c 7047     	 bx lr
 484              	.L38:
 485 000e 00BF     	 .align 2
 486              	.L37:
 487 0010 00100058 	 .word 1476399104
 488              	 .cfi_endproc
 489              	.LFE152:
 491              	 .section .text.XMC_FLASH_DisableEvent,"ax",%progbits
 492              	 .align 2
 493              	 .global XMC_FLASH_DisableEvent
 494              	 .thumb
 495              	 .thumb_func
 497              	XMC_FLASH_DisableEvent:
 498              	.LFB153:
 256:../Libraries/XMCLib/src/xmc4_flash.c **** }
 257:../Libraries/XMCLib/src/xmc4_flash.c **** 
 258:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 259:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API disables the event generation 
 260:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 261:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_DisableEvent(const uint32_t event_msk)
 262:../Libraries/XMCLib/src/xmc4_flash.c **** {
 499              	 .loc 1 262 0
 500              	 .cfi_startproc
 501              	 
 502              	 
 503              	 
 504              	.LVL30:
 263:../Libraries/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON &= ~event_msk;
 505              	 .loc 1 263 0
 506 0000 0349     	 ldr r1,.L40
 507 0002 41F21402 	 movw r2,#4116
 508 0006 8B58     	 ldr r3,[r1,r2]
 509 0008 23EA0000 	 bic r0,r3,r0
 510              	.LVL31:
 511 000c 8850     	 str r0,[r1,r2]
 512 000e 7047     	 bx lr
 513              	.L41:
 514              	 .align 2
 515              	.L40:
 516 0010 00100058 	 .word 1476399104
 517              	 .cfi_endproc
 518              	.LFE153:
 520              	 .section .text.XMC_FLASH_ProgramPage,"ax",%progbits
 521              	 .align 2
 522              	 .global XMC_FLASH_ProgramPage
 523              	 .thumb
 524              	 .thumb_func
 526              	XMC_FLASH_ProgramPage:
 527              	.LFB154:
 264:../Libraries/XMCLib/src/xmc4_flash.c **** }
 265:../Libraries/XMCLib/src/xmc4_flash.c **** 
 266:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 267:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API write the PFLASH page
 268:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 269:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ProgramPage(uint32_t *address, const uint32_t *data)
 270:../Libraries/XMCLib/src/xmc4_flash.c **** {
 528              	 .loc 1 270 0
 529              	 .cfi_startproc
 530              	 
 531              	 
 532              	 
 533              	.LVL32:
 534              	.LBB66:
 535              	.LBB67:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 536              	 .loc 1 227 0
 537 0000 0F4B     	 ldr r3,.L49
 538              	.LBE67:
 539              	.LBE66:
 540              	 .loc 1 270 0
 541 0002 70B4     	 push {r4,r5,r6}
 542              	.LCFI8:
 543              	 .cfi_def_cfa_offset 12
 544              	 .cfi_offset 4,-12
 545              	 .cfi_offset 5,-8
 546              	 .cfi_offset 6,-4
 547              	.LBB70:
 548              	.LBB71:
 103:../Libraries/XMCLib/src/xmc4_flash.c **** }
 549              	 .loc 1 103 0
 550 0004 5022     	 movs r2,#80
 551              	.LBE71:
 552              	.LBE70:
 553              	.LBB73:
 554              	.LBB68:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 555              	 .loc 1 227 0
 556 0006 F524     	 movs r4,#245
 557              	.LBE68:
 558              	.LBE73:
 559              	.LBB74:
 560              	.LBB75:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 561              	 .loc 1 114 0
 562 0008 0E4E     	 ldr r6,.L49+4
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 563              	 .loc 1 116 0
 564 000a 0F4D     	 ldr r5,.L49+8
 565              	.LBE75:
 566              	.LBE74:
 567              	.LBB77:
 568              	.LBB69:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 569              	 .loc 1 227 0
 570 000c 1C60     	 str r4,[r3]
 571              	.LVL33:
 572 000e 01F58074 	 add r4,r1,#256
 573              	.LBE69:
 574              	.LBE77:
 575              	.LBB78:
 576              	.LBB72:
 103:../Libraries/XMCLib/src/xmc4_flash.c **** }
 577              	 .loc 1 103 0
 578 0012 1A60     	 str r2,[r3]
 579              	.LVL34:
 580              	.L43:
 581              	.LBE72:
 582              	.LBE78:
 271:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 272:../Libraries/XMCLib/src/xmc4_flash.c **** 
 273:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();  
 274:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 275:../Libraries/XMCLib/src/xmc4_flash.c **** 
 276:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0U; idx < XMC_FLASH_WORDS_PER_PAGE; idx += 2U)
 277:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 278:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(data[idx], data[idx + 1U]);
 583              	 .loc 1 278 0 discriminator 3
 584 0014 91E80C00 	 ldmia r1,{r2,r3}
 585              	.LVL35:
 586 0018 0831     	 adds r1,r1,#8
 276:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 587              	 .loc 1 276 0 discriminator 3
 588 001a A142     	 cmp r1,r4
 589              	.LBB79:
 590              	.LBB76:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 591              	 .loc 1 114 0 discriminator 3
 592 001c 3260     	 str r2,[r6]
 593              	.LVL36:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 594              	 .loc 1 116 0 discriminator 3
 595 001e 2B60     	 str r3,[r5]
 596              	.LBE76:
 597              	.LBE79:
 276:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 598              	 .loc 1 276 0 discriminator 3
 599 0020 F8D1     	 bne .L43
 600              	.LVL37:
 601              	.LBB80:
 602              	.LBB81:
 127:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 603              	 .loc 1 127 0
 604 0022 0749     	 ldr r1,.L49
 129:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 605              	 .loc 1 129 0
 606 0024 094D     	 ldr r5,.L49+12
 607              	.LBE81:
 608              	.LBE80:
 279:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 280:../Libraries/XMCLib/src/xmc4_flash.c **** 
 281:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWritePageCommand(address);    
 282:../Libraries/XMCLib/src/xmc4_flash.c **** 
 283:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 284:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 609              	 .loc 1 284 0
 610 0026 0A4A     	 ldr r2,.L49+16
 611              	.LVL38:
 612              	.LBB83:
 613              	.LBB82:
 127:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 614              	 .loc 1 127 0
 615 0028 AA23     	 movs r3,#170
 616              	.LVL39:
 129:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 617              	 .loc 1 129 0
 618 002a 5526     	 movs r6,#85
 131:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 619              	 .loc 1 131 0
 620 002c A024     	 movs r4,#160
 621              	.LVL40:
 127:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 622              	 .loc 1 127 0
 623 002e 0B60     	 str r3,[r1]
 624              	.LVL41:
 129:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 625              	 .loc 1 129 0
 626 0030 2E60     	 str r6,[r5]
 627              	.LVL42:
 131:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 628              	 .loc 1 131 0
 629 0032 0C60     	 str r4,[r1]
 630              	.LVL43:
 133:../Libraries/XMCLib/src/xmc4_flash.c **** }
 631              	 .loc 1 133 0
 632 0034 0360     	 str r3,[r0]
 633              	.L44:
 634              	.LBE82:
 635              	.LBE83:
 636              	 .loc 1 284 0 discriminator 1
 637 0036 1368     	 ldr r3,[r2]
 638 0038 DB07     	 lsls r3,r3,#31
 639 003a FCD4     	 bmi .L44
 285:../Libraries/XMCLib/src/xmc4_flash.c **** }
 640              	 .loc 1 285 0
 641 003c 70BC     	 pop {r4,r5,r6}
 642              	.LCFI9:
 643              	 .cfi_restore 6
 644              	 .cfi_restore 5
 645              	 .cfi_restore 4
 646              	 .cfi_def_cfa_offset 0
 647 003e 7047     	 bx lr
 648              	.L50:
 649              	 .align 2
 650              	.L49:
 651 0040 5455000C 	 .word 201348436
 652 0044 F055000C 	 .word 201348592
 653 0048 F455000C 	 .word 201348596
 654 004c A8AA000C 	 .word 201370280
 655 0050 10200058 	 .word 1476403216
 656              	 .cfi_endproc
 657              	.LFE154:
 659              	 .section .text.XMC_FLASH_EraseSector,"ax",%progbits
 660              	 .align 2
 661              	 .global XMC_FLASH_EraseSector
 662              	 .thumb
 663              	 .thumb_func
 665              	XMC_FLASH_EraseSector:
 666              	.LFB155:
 286:../Libraries/XMCLib/src/xmc4_flash.c **** 
 287:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 288:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API erase the logical sector
 289:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 290:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EraseSector(uint32_t *address)
 291:../Libraries/XMCLib/src/xmc4_flash.c **** {
 667              	 .loc 1 291 0
 668              	 .cfi_startproc
 669              	 
 670              	 
 671              	.LVL44:
 672              	.LBB84:
 673              	.LBB85:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 674              	 .loc 1 227 0
 675 0000 0A4B     	 ldr r3,.L55
 676              	.LBE85:
 677              	.LBE84:
 678              	.LBB88:
 679              	.LBB89:
 163:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 680              	 .loc 1 163 0
 681 0002 0B49     	 ldr r1,.L55+4
 682              	.LBE89:
 683              	.LBE88:
 292:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 293:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEraseSectorCommand(address);
 294:../Libraries/XMCLib/src/xmc4_flash.c **** 
 295:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 296:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 684              	 .loc 1 296 0
 685 0004 0B4A     	 ldr r2,.L55+8
 291:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 686              	 .loc 1 291 0
 687 0006 F0B5     	 push {r4,r5,r6,r7,lr}
 688              	.LCFI10:
 689              	 .cfi_def_cfa_offset 20
 690              	 .cfi_offset 4,-20
 691              	 .cfi_offset 5,-16
 692              	 .cfi_offset 6,-12
 693              	 .cfi_offset 7,-8
 694              	 .cfi_offset 14,-4
 695              	.LBB93:
 696              	.LBB90:
 161:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 697              	 .loc 1 161 0
 698 0008 AA25     	 movs r5,#170
 163:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 699              	 .loc 1 163 0
 700 000a 5524     	 movs r4,#85
 701              	.LBE90:
 702              	.LBE93:
 703              	.LBB94:
 704              	.LBB86:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 705              	 .loc 1 227 0
 706 000c 4FF0F50E 	 mov lr,#245
 707              	.LBE86:
 708              	.LBE94:
 709              	.LBB95:
 710              	.LBB91:
 165:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 711              	 .loc 1 165 0
 712 0010 8027     	 movs r7,#128
 171:../Libraries/XMCLib/src/xmc4_flash.c **** }
 713              	 .loc 1 171 0
 714 0012 3026     	 movs r6,#48
 715              	.LBE91:
 716              	.LBE95:
 717              	.LBB96:
 718              	.LBB87:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 719              	 .loc 1 227 0
 720 0014 C3F800E0 	 str lr,[r3]
 721              	.LVL45:
 722              	.LBE87:
 723              	.LBE96:
 724              	.LBB97:
 725              	.LBB92:
 161:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 726              	 .loc 1 161 0
 727 0018 1D60     	 str r5,[r3]
 728              	.LVL46:
 163:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 729              	 .loc 1 163 0
 730 001a 0C60     	 str r4,[r1]
 731              	.LVL47:
 165:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 732              	 .loc 1 165 0
 733 001c 1F60     	 str r7,[r3]
 167:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 734              	 .loc 1 167 0
 735 001e 1D60     	 str r5,[r3]
 736              	.LVL48:
 169:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 737              	 .loc 1 169 0
 738 0020 0C60     	 str r4,[r1]
 739              	.LVL49:
 171:../Libraries/XMCLib/src/xmc4_flash.c **** }
 740              	 .loc 1 171 0
 741 0022 0660     	 str r6,[r0]
 742              	.L52:
 743              	.LBE92:
 744              	.LBE97:
 745              	 .loc 1 296 0 discriminator 1
 746 0024 1368     	 ldr r3,[r2]
 747 0026 DB07     	 lsls r3,r3,#31
 748 0028 FCD4     	 bmi .L52
 297:../Libraries/XMCLib/src/xmc4_flash.c **** }
 749              	 .loc 1 297 0
 750 002a F0BD     	 pop {r4,r5,r6,r7,pc}
 751              	.L56:
 752              	 .align 2
 753              	.L55:
 754 002c 5455000C 	 .word 201348436
 755 0030 A8AA000C 	 .word 201370280
 756 0034 10200058 	 .word 1476403216
 757              	 .cfi_endproc
 758              	.LFE155:
 760              	 .section .text.XMC_FLASH_lErasePhysicalSectorCommand,"ax",%progbits
 761              	 .align 2
 762              	 .global XMC_FLASH_lErasePhysicalSectorCommand
 763              	 .thumb
 764              	 .thumb_func
 766              	XMC_FLASH_lErasePhysicalSectorCommand:
 767              	.LFB156:
 298:../Libraries/XMCLib/src/xmc4_flash.c **** 
 299:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 300:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase physical sector which is starting with the specified address
 301:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 302:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address)
 303:../Libraries/XMCLib/src/xmc4_flash.c **** {
 768              	 .loc 1 303 0
 769              	 .cfi_startproc
 770              	 
 771              	 
 772              	 
 773              	.LVL50:
 774 0000 70B4     	 push {r4,r5,r6}
 775              	.LCFI11:
 776              	 .cfi_def_cfa_offset 12
 777              	 .cfi_offset 4,-12
 778              	 .cfi_offset 5,-8
 779              	 .cfi_offset 6,-4
 304:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 305:../Libraries/XMCLib/src/xmc4_flash.c **** 
 306:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 307:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 780              	 .loc 1 307 0
 781 0002 074B     	 ldr r3,.L59
 308:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 309:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 782              	 .loc 1 309 0
 783 0004 074A     	 ldr r2,.L59+4
 307:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 784              	 .loc 1 307 0
 785 0006 AA24     	 movs r4,#170
 786              	 .loc 1 309 0
 787 0008 5521     	 movs r1,#85
 310:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 311:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 788              	 .loc 1 311 0
 789 000a 8026     	 movs r6,#128
 312:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 313:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 314:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 315:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 316:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 317:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x40U;
 790              	 .loc 1 317 0
 791 000c 4025     	 movs r5,#64
 307:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 792              	 .loc 1 307 0
 793 000e 1C60     	 str r4,[r3]
 794              	.LVL51:
 309:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 795              	 .loc 1 309 0
 796 0010 1160     	 str r1,[r2]
 797              	.LVL52:
 311:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 798              	 .loc 1 311 0
 799 0012 1E60     	 str r6,[r3]
 313:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 800              	 .loc 1 313 0
 801 0014 1C60     	 str r4,[r3]
 802              	.LVL53:
 315:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 803              	 .loc 1 315 0
 804 0016 1160     	 str r1,[r2]
 805              	.LVL54:
 806              	 .loc 1 317 0
 807 0018 0560     	 str r5,[r0]
 318:../Libraries/XMCLib/src/xmc4_flash.c **** }
 808              	 .loc 1 318 0
 809 001a 70BC     	 pop {r4,r5,r6}
 810              	.LCFI12:
 811              	 .cfi_restore 6
 812              	 .cfi_restore 5
 813              	 .cfi_restore 4
 814              	 .cfi_def_cfa_offset 0
 815 001c 7047     	 bx lr
 816              	.L60:
 817 001e 00BF     	 .align 2
 818              	.L59:
 819 0020 5455000C 	 .word 201348436
 820 0024 A8AA000C 	 .word 201370280
 821              	 .cfi_endproc
 822              	.LFE156:
 824              	 .section .text.XMC_FLASH_lRepairPhysicalSectorCommand,"ax",%progbits
 825              	 .align 2
 826              	 .global XMC_FLASH_lRepairPhysicalSectorCommand
 827              	 .thumb
 828              	 .thumb_func
 830              	XMC_FLASH_lRepairPhysicalSectorCommand:
 831              	.LFB157:
 319:../Libraries/XMCLib/src/xmc4_flash.c **** 
 320:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 321:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase physical sector-4 which is starting with the specified address
 322:../Libraries/XMCLib/src/xmc4_flash.c ****  * This command is only available if PROCON1.PRS = 1.
 323:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 324:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void)
 325:../Libraries/XMCLib/src/xmc4_flash.c **** {
 832              	 .loc 1 325 0
 833              	 .cfi_startproc
 834              	 
 835              	 
 836              	 
 837              	.LVL55:
 838 0000 70B4     	 push {r4,r5,r6}
 839              	.LCFI13:
 840              	 .cfi_def_cfa_offset 12
 841              	 .cfi_offset 4,-12
 842              	 .cfi_offset 5,-8
 843              	 .cfi_offset 6,-4
 326:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 327:../Libraries/XMCLib/src/xmc4_flash.c **** 
 328:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 329:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 844              	 .loc 1 329 0
 845 0002 074B     	 ldr r3,.L63
 330:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 331:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 846              	 .loc 1 331 0
 847 0004 074A     	 ldr r2,.L63+4
 332:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 333:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 334:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 335:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 336:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 337:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 338:../Libraries/XMCLib/src/xmc4_flash.c ****   address = XMC_FLASH_PHY_SECTOR_4;
 339:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x40U;
 848              	 .loc 1 339 0
 849 0006 084C     	 ldr r4,.L63+8
 329:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 850              	 .loc 1 329 0
 851 0008 AA20     	 movs r0,#170
 331:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 852              	 .loc 1 331 0
 853 000a 5521     	 movs r1,#85
 333:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 854              	 .loc 1 333 0
 855 000c 8026     	 movs r6,#128
 856              	 .loc 1 339 0
 857 000e 4025     	 movs r5,#64
 329:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 858              	 .loc 1 329 0
 859 0010 1860     	 str r0,[r3]
 860              	.LVL56:
 331:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 861              	 .loc 1 331 0
 862 0012 1160     	 str r1,[r2]
 863              	.LVL57:
 333:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 864              	 .loc 1 333 0
 865 0014 1E60     	 str r6,[r3]
 335:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 866              	 .loc 1 335 0
 867 0016 1860     	 str r0,[r3]
 868              	.LVL58:
 337:../Libraries/XMCLib/src/xmc4_flash.c ****   address = XMC_FLASH_PHY_SECTOR_4;
 869              	 .loc 1 337 0
 870 0018 1160     	 str r1,[r2]
 871              	.LVL59:
 872              	 .loc 1 339 0
 873 001a 2560     	 str r5,[r4]
 340:../Libraries/XMCLib/src/xmc4_flash.c **** }
 874              	 .loc 1 340 0
 875 001c 70BC     	 pop {r4,r5,r6}
 876              	.LCFI14:
 877              	 .cfi_restore 6
 878              	 .cfi_restore 5
 879              	 .cfi_restore 4
 880              	 .cfi_def_cfa_offset 0
 881 001e 7047     	 bx lr
 882              	.L64:
 883              	 .align 2
 884              	.L63:
 885 0020 5455000C 	 .word 201348436
 886 0024 A8AA000C 	 .word 201370280
 887 0028 0000010C 	 .word 201392128
 888              	 .cfi_endproc
 889              	.LFE157:
 891              	 .section .text.XMC_FLASH_ErasePhysicalSector,"ax",%progbits
 892              	 .align 2
 893              	 .global XMC_FLASH_ErasePhysicalSector
 894              	 .thumb
 895              	 .thumb_func
 897              	XMC_FLASH_ErasePhysicalSector:
 898              	.LFB158:
 341:../Libraries/XMCLib/src/xmc4_flash.c **** 
 342:../Libraries/XMCLib/src/xmc4_flash.c ****  /* 
 343:../Libraries/XMCLib/src/xmc4_flash.c ****   * This API erase the physical sector
 344:../Libraries/XMCLib/src/xmc4_flash.c ****   */
 345:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ErasePhysicalSector(uint32_t *address)
 346:../Libraries/XMCLib/src/xmc4_flash.c **** {
 899              	 .loc 1 346 0
 900              	 .cfi_startproc
 901              	 
 902              	 
 903              	.LVL60:
 904              	.LBB98:
 905              	.LBB99:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 906              	 .loc 1 227 0
 907 0000 0A4B     	 ldr r3,.L69
 908              	.LBE99:
 909              	.LBE98:
 910              	.LBB102:
 911              	.LBB103:
 309:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 912              	 .loc 1 309 0
 913 0002 0B49     	 ldr r1,.L69+4
 914              	.LBE103:
 915              	.LBE102:
 347:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 348:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lErasePhysicalSectorCommand(address);
 349:../Libraries/XMCLib/src/xmc4_flash.c **** 
 350:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 351:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 916              	 .loc 1 351 0
 917 0004 0B4A     	 ldr r2,.L69+8
 346:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 918              	 .loc 1 346 0
 919 0006 F0B5     	 push {r4,r5,r6,r7,lr}
 920              	.LCFI15:
 921              	 .cfi_def_cfa_offset 20
 922              	 .cfi_offset 4,-20
 923              	 .cfi_offset 5,-16
 924              	 .cfi_offset 6,-12
 925              	 .cfi_offset 7,-8
 926              	 .cfi_offset 14,-4
 927              	.LBB107:
 928              	.LBB104:
 307:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 929              	 .loc 1 307 0
 930 0008 AA25     	 movs r5,#170
 309:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 931              	 .loc 1 309 0
 932 000a 5524     	 movs r4,#85
 933              	.LBE104:
 934              	.LBE107:
 935              	.LBB108:
 936              	.LBB100:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 937              	 .loc 1 227 0
 938 000c 4FF0F50E 	 mov lr,#245
 939              	.LBE100:
 940              	.LBE108:
 941              	.LBB109:
 942              	.LBB105:
 311:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 943              	 .loc 1 311 0
 944 0010 8027     	 movs r7,#128
 317:../Libraries/XMCLib/src/xmc4_flash.c **** }
 945              	 .loc 1 317 0
 946 0012 4026     	 movs r6,#64
 947              	.LBE105:
 948              	.LBE109:
 949              	.LBB110:
 950              	.LBB101:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 951              	 .loc 1 227 0
 952 0014 C3F800E0 	 str lr,[r3]
 953              	.LVL61:
 954              	.LBE101:
 955              	.LBE110:
 956              	.LBB111:
 957              	.LBB106:
 307:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 958              	 .loc 1 307 0
 959 0018 1D60     	 str r5,[r3]
 960              	.LVL62:
 309:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 961              	 .loc 1 309 0
 962 001a 0C60     	 str r4,[r1]
 963              	.LVL63:
 311:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 964              	 .loc 1 311 0
 965 001c 1F60     	 str r7,[r3]
 313:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 966              	 .loc 1 313 0
 967 001e 1D60     	 str r5,[r3]
 968              	.LVL64:
 315:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 969              	 .loc 1 315 0
 970 0020 0C60     	 str r4,[r1]
 971              	.LVL65:
 317:../Libraries/XMCLib/src/xmc4_flash.c **** }
 972              	 .loc 1 317 0
 973 0022 0660     	 str r6,[r0]
 974              	.L66:
 975              	.LBE106:
 976              	.LBE111:
 977              	 .loc 1 351 0 discriminator 1
 978 0024 1368     	 ldr r3,[r2]
 979 0026 DB07     	 lsls r3,r3,#31
 980 0028 FCD4     	 bmi .L66
 352:../Libraries/XMCLib/src/xmc4_flash.c **** }
 981              	 .loc 1 352 0
 982 002a F0BD     	 pop {r4,r5,r6,r7,pc}
 983              	.L70:
 984              	 .align 2
 985              	.L69:
 986 002c 5455000C 	 .word 201348436
 987 0030 A8AA000C 	 .word 201370280
 988 0034 10200058 	 .word 1476403216
 989              	 .cfi_endproc
 990              	.LFE158:
 992              	 .section .text.XMC_FLASH_RepairPhysicalSector,"ax",%progbits
 993              	 .align 2
 994              	 .global XMC_FLASH_RepairPhysicalSector
 995              	 .thumb
 996              	 .thumb_func
 998              	XMC_FLASH_RepairPhysicalSector:
 999              	.LFB159:
 353:../Libraries/XMCLib/src/xmc4_flash.c **** 
 354:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 355:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API repair the physical sector
 356:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 357:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_RepairPhysicalSector(void)
 358:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1000              	 .loc 1 358 0
 1001              	 .cfi_startproc
 1002              	 
 1003              	 
 1004              	 
 1005              	.LVL66:
 1006 0000 F0B4     	 push {r4,r5,r6,r7}
 1007              	.LCFI16:
 1008              	 .cfi_def_cfa_offset 16
 1009              	 .cfi_offset 4,-16
 1010              	 .cfi_offset 5,-12
 1011              	 .cfi_offset 6,-8
 1012              	 .cfi_offset 7,-4
 1013              	.LBB112:
 1014              	.LBB113:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1015              	 .loc 1 227 0
 1016 0002 084B     	 ldr r3,.L73
 1017              	.LBE113:
 1018              	.LBE112:
 1019              	.LBB116:
 1020              	.LBB117:
 331:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1021              	 .loc 1 331 0
 1022 0004 084A     	 ldr r2,.L73+4
 339:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1023              	 .loc 1 339 0
 1024 0006 094C     	 ldr r4,.L73+8
 1025              	.LBE117:
 1026              	.LBE116:
 1027              	.LBB120:
 1028              	.LBB114:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1029              	 .loc 1 227 0
 1030 0008 F527     	 movs r7,#245
 1031              	.LBE114:
 1032              	.LBE120:
 1033              	.LBB121:
 1034              	.LBB118:
 329:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1035              	 .loc 1 329 0
 1036 000a AA20     	 movs r0,#170
 331:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1037              	 .loc 1 331 0
 1038 000c 5521     	 movs r1,#85
 333:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1039              	 .loc 1 333 0
 1040 000e 8026     	 movs r6,#128
 339:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1041              	 .loc 1 339 0
 1042 0010 4025     	 movs r5,#64
 1043              	.LBE118:
 1044              	.LBE121:
 1045              	.LBB122:
 1046              	.LBB115:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1047              	 .loc 1 227 0
 1048 0012 1F60     	 str r7,[r3]
 1049              	.LVL67:
 1050              	.LBE115:
 1051              	.LBE122:
 1052              	.LBB123:
 1053              	.LBB119:
 329:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1054              	 .loc 1 329 0
 1055 0014 1860     	 str r0,[r3]
 1056              	.LVL68:
 331:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1057              	 .loc 1 331 0
 1058 0016 1160     	 str r1,[r2]
 1059              	.LVL69:
 333:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1060              	 .loc 1 333 0
 1061 0018 1E60     	 str r6,[r3]
 335:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1062              	 .loc 1 335 0
 1063 001a 1860     	 str r0,[r3]
 1064              	.LVL70:
 337:../Libraries/XMCLib/src/xmc4_flash.c ****   address = XMC_FLASH_PHY_SECTOR_4;
 1065              	 .loc 1 337 0
 1066 001c 1160     	 str r1,[r2]
 1067              	.LVL71:
 339:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1068              	 .loc 1 339 0
 1069 001e 2560     	 str r5,[r4]
 1070              	.LBE119:
 1071              	.LBE123:
 359:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 360:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lRepairPhysicalSectorCommand();
 361:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1072              	 .loc 1 361 0
 1073 0020 F0BC     	 pop {r4,r5,r6,r7}
 1074              	.LCFI17:
 1075              	 .cfi_restore 7
 1076              	 .cfi_restore 6
 1077              	 .cfi_restore 5
 1078              	 .cfi_restore 4
 1079              	 .cfi_def_cfa_offset 0
 1080 0022 7047     	 bx lr
 1081              	.L74:
 1082              	 .align 2
 1083              	.L73:
 1084 0024 5455000C 	 .word 201348436
 1085 0028 A8AA000C 	 .word 201370280
 1086 002c 0000010C 	 .word 201392128
 1087              	 .cfi_endproc
 1088              	.LFE159:
 1090              	 .section .text.XMC_FLASH_EraseUCB,"ax",%progbits
 1091              	 .align 2
 1092              	 .global XMC_FLASH_EraseUCB
 1093              	 .thumb
 1094              	 .thumb_func
 1096              	XMC_FLASH_EraseUCB:
 1097              	.LFB160:
 362:../Libraries/XMCLib/src/xmc4_flash.c **** 
 363:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 364:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase UCB sector which is starting with the specified address
 365:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 366:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EraseUCB(uint32_t *ucb_sector_start_address)
 367:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1098              	 .loc 1 367 0
 1099              	 .cfi_startproc
 1100              	 
 1101              	 
 1102              	 
 1103              	.LVL72:
 368:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 369:../Libraries/XMCLib/src/xmc4_flash.c **** 
 370:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 371:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1104              	 .loc 1 371 0
 1105 0000 094B     	 ldr r3,.L79
 372:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 373:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1106              	 .loc 1 373 0
 1107 0002 0A49     	 ldr r1,.L79+4
 374:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 375:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 376:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 377:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 378:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 379:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 380:../Libraries/XMCLib/src/xmc4_flash.c ****   address = ucb_sector_start_address;
 381:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 382:../Libraries/XMCLib/src/xmc4_flash.c **** 
 383:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 384:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1108              	 .loc 1 384 0
 1109 0004 0A4A     	 ldr r2,.L79+8
 367:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 1110              	 .loc 1 367 0
 1111 0006 F0B4     	 push {r4,r5,r6,r7}
 1112              	.LCFI18:
 1113              	 .cfi_def_cfa_offset 16
 1114              	 .cfi_offset 4,-16
 1115              	 .cfi_offset 5,-12
 1116              	 .cfi_offset 6,-8
 1117              	 .cfi_offset 7,-4
 371:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1118              	 .loc 1 371 0
 1119 0008 AA25     	 movs r5,#170
 373:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1120              	 .loc 1 373 0
 1121 000a 5524     	 movs r4,#85
 375:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1122              	 .loc 1 375 0
 1123 000c 8027     	 movs r7,#128
 381:../Libraries/XMCLib/src/xmc4_flash.c **** 
 1124              	 .loc 1 381 0
 1125 000e C026     	 movs r6,#192
 371:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1126              	 .loc 1 371 0
 1127 0010 1D60     	 str r5,[r3]
 1128              	.LVL73:
 373:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1129              	 .loc 1 373 0
 1130 0012 0C60     	 str r4,[r1]
 1131              	.LVL74:
 375:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1132              	 .loc 1 375 0
 1133 0014 1F60     	 str r7,[r3]
 377:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1134              	 .loc 1 377 0
 1135 0016 1D60     	 str r5,[r3]
 1136              	.LVL75:
 379:../Libraries/XMCLib/src/xmc4_flash.c ****   address = ucb_sector_start_address;
 1137              	 .loc 1 379 0
 1138 0018 0C60     	 str r4,[r1]
 1139              	.LVL76:
 381:../Libraries/XMCLib/src/xmc4_flash.c **** 
 1140              	 .loc 1 381 0
 1141 001a 0660     	 str r6,[r0]
 1142              	.L76:
 1143              	 .loc 1 384 0 discriminator 1
 1144 001c 1368     	 ldr r3,[r2]
 1145 001e DB07     	 lsls r3,r3,#31
 1146 0020 FCD4     	 bmi .L76
 385:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1147              	 .loc 1 385 0
 1148 0022 F0BC     	 pop {r4,r5,r6,r7}
 1149              	.LCFI19:
 1150              	 .cfi_restore 7
 1151              	 .cfi_restore 6
 1152              	 .cfi_restore 5
 1153              	 .cfi_restore 4
 1154              	 .cfi_def_cfa_offset 0
 1155 0024 7047     	 bx lr
 1156              	.L80:
 1157 0026 00BF     	 .align 2
 1158              	.L79:
 1159 0028 5455000C 	 .word 201348436
 1160 002c A8AA000C 	 .word 201370280
 1161 0030 10200058 	 .word 1476403216
 1162              	 .cfi_endproc
 1163              	.LFE160:
 1165              	 .section .text.XMC_FLASH_Reset,"ax",%progbits
 1166              	 .align 2
 1167              	 .global XMC_FLASH_Reset
 1168              	 .thumb
 1169              	 .thumb_func
 1171              	XMC_FLASH_Reset:
 1172              	.LFB161:
 386:../Libraries/XMCLib/src/xmc4_flash.c **** 
 387:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 388:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to reset the status of the PFLASH
 389:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 390:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_Reset(void)
 391:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1173              	 .loc 1 391 0
 1174              	 .cfi_startproc
 1175              	 
 1176              	 
 1177              	 
 1178              	.LVL77:
 392:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 393:../Libraries/XMCLib/src/xmc4_flash.c **** 
 394:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 395:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xf0U;
 1179              	 .loc 1 395 0
 1180 0000 014B     	 ldr r3,.L82
 1181 0002 F022     	 movs r2,#240
 1182 0004 1A60     	 str r2,[r3]
 1183 0006 7047     	 bx lr
 1184              	.L83:
 1185              	 .align 2
 1186              	.L82:
 1187 0008 5455000C 	 .word 201348436
 1188              	 .cfi_endproc
 1189              	.LFE161:
 1191              	 .section .text.XMC_FLASH_InstallProtection,"ax",%progbits
 1192              	 .align 2
 1193              	 .global XMC_FLASH_InstallProtection
 1194              	 .thumb
 1195              	 .thumb_func
 1197              	XMC_FLASH_InstallProtection:
 1198              	.LFB162:
 396:../Libraries/XMCLib/src/xmc4_flash.c **** }
 397:../Libraries/XMCLib/src/xmc4_flash.c **** 
 398:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 399:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API install the global read and sector write protection for the specified user
 400:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 401:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_InstallProtection(uint8_t user,
 402:../Libraries/XMCLib/src/xmc4_flash.c ****                                  uint32_t protection_mask,
 403:../Libraries/XMCLib/src/xmc4_flash.c **** 	                             uint32_t password_0,
 404:../Libraries/XMCLib/src/xmc4_flash.c ****                                  uint32_t password_1)
 405:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1199              	 .loc 1 405 0
 1200              	 .cfi_startproc
 1201              	 
 1202              	 
 1203              	.LVL78:
 1204 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1205              	.LCFI20:
 1206              	 .cfi_def_cfa_offset 20
 1207              	 .cfi_offset 4,-20
 1208              	 .cfi_offset 5,-16
 1209              	 .cfi_offset 6,-12
 1210              	 .cfi_offset 7,-8
 1211              	 .cfi_offset 14,-4
 1212              	.LBB124:
 1213              	.LBB125:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1214              	 .loc 1 114 0
 1215 0002 DFF86CE0 	 ldr lr,.L90+16
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1216              	 .loc 1 116 0
 1217 0006 164F     	 ldr r7,.L90
 1218              	.LBE125:
 1219              	.LBE124:
 1220              	.LBB129:
 1221              	.LBB130:
 103:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1222              	 .loc 1 103 0
 1223 0008 164C     	 ldr r4,.L90+4
 1224              	.LBE130:
 1225              	.LBE129:
 1226              	 .loc 1 405 0
 1227 000a 9446     	 mov ip,r2
 1228              	.LBB133:
 1229              	.LBB131:
 103:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1230              	 .loc 1 103 0
 1231 000c 5025     	 movs r5,#80
 1232              	.LBE131:
 1233              	.LBE133:
 1234              	 .loc 1 405 0
 1235 000e 1A46     	 mov r2,r3
 1236              	.LVL79:
 1237              	.LBB134:
 1238              	.LBB126:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1239              	 .loc 1 116 0
 1240 0010 0023     	 movs r3,#0
 1241              	.LVL80:
 1242              	.LBE126:
 1243              	.LBE134:
 1244              	.LBB135:
 1245              	.LBB132:
 103:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1246              	 .loc 1 103 0
 1247 0012 2560     	 str r5,[r4]
 1248              	.LVL81:
 1249              	.LBE132:
 1250              	.LBE135:
 1251              	.LBB136:
 1252              	.LBB137:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1253              	 .loc 1 114 0
 1254 0014 7646     	 mov r6,lr
 1255              	.LBE137:
 1256              	.LBE136:
 1257              	.LBB141:
 1258              	.LBB127:
 1259 0016 CEF80010 	 str r1,[lr]
 1260              	.LVL82:
 1261              	.LBE127:
 1262              	.LBE141:
 1263              	.LBB142:
 1264              	.LBB138:
 1265 001a 1C46     	 mov r4,r3
 1266              	.LBE138:
 1267              	.LBE142:
 1268              	.LBB143:
 1269              	.LBB128:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1270              	 .loc 1 116 0
 1271 001c 3B60     	 str r3,[r7]
 1272              	.LVL83:
 1273              	.LBE128:
 1274              	.LBE143:
 1275              	.LBB144:
 1276              	.LBB139:
 1277 001e 3D46     	 mov r5,r7
 1278              	.LBE139:
 1279              	.LBE144:
 1280              	.LBB145:
 1281              	.LBB146:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1282              	 .loc 1 114 0
 1283 0020 CEF80010 	 str r1,[lr]
 1284              	.LVL84:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1285              	 .loc 1 116 0
 1286 0024 3B60     	 str r3,[r7]
 1287              	.LVL85:
 1288              	.LBE146:
 1289              	.LBE145:
 1290              	.LBB147:
 1291              	.LBB148:
 1292 0026 1C21     	 movs r1,#28
 1293              	.LVL86:
 1294              	.LBE148:
 1295              	.LBE147:
 1296              	.LBB150:
 1297              	.LBB151:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1298              	 .loc 1 114 0
 1299 0028 CEF800C0 	 str ip,[lr]
 1300              	.LVL87:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1301              	 .loc 1 116 0
 1302 002c 3A60     	 str r2,[r7]
 1303              	.LVL88:
 1304              	.LBE151:
 1305              	.LBE150:
 1306              	.LBB152:
 1307              	.LBB149:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1308              	 .loc 1 114 0
 1309 002e CEF800C0 	 str ip,[lr]
 1310              	.LVL89:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1311              	 .loc 1 116 0
 1312 0032 3A60     	 str r2,[r7]
 1313              	.LVL90:
 1314              	.L85:
 1315              	.LBE149:
 1316              	.LBE152:
 406:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 407:../Libraries/XMCLib/src/xmc4_flash.c ****   
 408:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfigureProtection: User level out of range", (user < 3U))
 409:../Libraries/XMCLib/src/xmc4_flash.c **** 
 410:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 411:../Libraries/XMCLib/src/xmc4_flash.c **** 
 412:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 413:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 414:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 415:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 416:../Libraries/XMCLib/src/xmc4_flash.c ****   
 417:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0U; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROTECTION_CONFIGURATION_WORDS); idx +
 1317              	 .loc 1 417 0
 1318 0034 0139     	 subs r1,r1,#1
 1319              	.LBB153:
 1320              	.LBB140:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1321              	 .loc 1 114 0
 1322 0036 3460     	 str r4,[r6]
 1323              	.LVL91:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1324              	 .loc 1 116 0
 1325 0038 2C60     	 str r4,[r5]
 1326              	.LBE140:
 1327              	.LBE153:
 1328              	 .loc 1 417 0
 1329 003a FBD1     	 bne .L85
 418:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 419:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 420:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 421:../Libraries/XMCLib/src/xmc4_flash.c **** 
 422:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + (user * XMC_FLASH_BYTES_PE
 1330              	 .loc 1 422 0
 1331 003c 00F54033 	 add r3,r0,#196608
 1332 0040 9B02     	 lsls r3,r3,#10
 1333              	.LVL92:
 1334              	.LBB154:
 1335              	.LBB155:
 144:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1336              	 .loc 1 144 0
 1337 0042 0848     	 ldr r0,.L90+4
 1338              	.LVL93:
 146:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1339              	 .loc 1 146 0
 1340 0044 084D     	 ldr r5,.L90+8
 1341              	.LBE155:
 1342              	.LBE154:
 423:../Libraries/XMCLib/src/xmc4_flash.c **** 
 424:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 425:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1343              	 .loc 1 425 0
 1344 0046 094A     	 ldr r2,.L90+12
 1345              	.LVL94:
 1346              	.LBB157:
 1347              	.LBB156:
 144:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1348              	 .loc 1 144 0
 1349 0048 AA21     	 movs r1,#170
 146:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1350              	 .loc 1 146 0
 1351 004a 5526     	 movs r6,#85
 148:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 1352              	 .loc 1 148 0
 1353 004c C024     	 movs r4,#192
 144:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1354              	 .loc 1 144 0
 1355 004e 0160     	 str r1,[r0]
 1356              	.LVL95:
 146:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1357              	 .loc 1 146 0
 1358 0050 2E60     	 str r6,[r5]
 1359              	.LVL96:
 148:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 1360              	 .loc 1 148 0
 1361 0052 0460     	 str r4,[r0]
 1362              	.LVL97:
 150:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1363              	 .loc 1 150 0
 1364 0054 1960     	 str r1,[r3]
 1365              	.LVL98:
 1366              	.L86:
 1367              	.LBE156:
 1368              	.LBE157:
 1369              	 .loc 1 425 0 discriminator 1
 1370 0056 1368     	 ldr r3,[r2]
 1371 0058 DB07     	 lsls r3,r3,#31
 1372 005a FCD4     	 bmi .L86
 426:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1373              	 .loc 1 426 0
 1374 005c F0BD     	 pop {r4,r5,r6,r7,pc}
 1375              	.L91:
 1376 005e 00BF     	 .align 2
 1377              	.L90:
 1378 0060 F455000C 	 .word 201348596
 1379 0064 5455000C 	 .word 201348436
 1380 0068 A8AA000C 	 .word 201370280
 1381 006c 10200058 	 .word 1476403216
 1382 0070 F055000C 	 .word 201348592
 1383              	 .cfi_endproc
 1384              	.LFE162:
 1386              	 .section .text.XMC_FLASH_ConfirmProtection,"ax",%progbits
 1387              	 .align 2
 1388              	 .global XMC_FLASH_ConfirmProtection
 1389              	 .thumb
 1390              	 .thumb_func
 1392              	XMC_FLASH_ConfirmProtection:
 1393              	.LFB163:
 427:../Libraries/XMCLib/src/xmc4_flash.c **** 
 428:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 429:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API confirm the protection. So that This sectors are locked with the specified protection.
 430:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 431:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ConfirmProtection(uint8_t user)
 432:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1394              	 .loc 1 432 0
 1395              	 .cfi_startproc
 1396              	 
 1397              	 
 1398              	 
 1399              	.LVL99:
 1400 0000 F0B4     	 push {r4,r5,r6,r7}
 1401              	.LCFI21:
 1402              	 .cfi_def_cfa_offset 16
 1403              	 .cfi_offset 4,-16
 1404              	 .cfi_offset 5,-12
 1405              	 .cfi_offset 6,-8
 1406              	 .cfi_offset 7,-4
 1407              	.LBB158:
 1408              	.LBB159:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1409              	 .loc 1 114 0
 1410 0002 134B     	 ldr r3,.L98
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1411              	 .loc 1 116 0
 1412 0004 134D     	 ldr r5,.L98+4
 1413              	.LBE159:
 1414              	.LBE158:
 1415              	.LBB163:
 1416              	.LBB164:
 103:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1417              	 .loc 1 103 0
 1418 0006 144A     	 ldr r2,.L98+8
 1419              	.LBE164:
 1420              	.LBE163:
 1421              	.LBB166:
 1422              	.LBB160:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1423              	 .loc 1 114 0
 1424 0008 144F     	 ldr r7,.L98+12
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1425              	 .loc 1 116 0
 1426 000a 0026     	 movs r6,#0
 1427              	.LBE160:
 1428              	.LBE166:
 1429              	.LBB167:
 1430              	.LBB165:
 103:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1431              	 .loc 1 103 0
 1432 000c 5021     	 movs r1,#80
 1433 000e 1160     	 str r1,[r2]
 1434              	.LVL100:
 1435              	.LBE165:
 1436              	.LBE167:
 1437              	.LBB168:
 1438              	.LBB169:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1439              	 .loc 1 114 0
 1440 0010 1C46     	 mov r4,r3
 1441              	.LBE169:
 1442              	.LBE168:
 1443              	.LBB173:
 1444              	.LBB161:
 1445 0012 1F60     	 str r7,[r3]
 1446              	.LVL101:
 1447              	.LBE161:
 1448              	.LBE173:
 1449              	.LBB174:
 1450              	.LBB170:
 1451 0014 3246     	 mov r2,r6
 1452              	.LBE170:
 1453              	.LBE174:
 1454              	.LBB175:
 1455              	.LBB162:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1456              	 .loc 1 116 0
 1457 0016 2E60     	 str r6,[r5]
 1458              	.LVL102:
 1459              	.LBE162:
 1460              	.LBE175:
 1461              	.LBB176:
 1462              	.LBB171:
 1463 0018 2946     	 mov r1,r5
 1464              	.LBE171:
 1465              	.LBE176:
 1466              	.LBB177:
 1467              	.LBB178:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1468              	 .loc 1 114 0
 1469 001a 1F60     	 str r7,[r3]
 1470              	.LVL103:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1471              	 .loc 1 116 0
 1472 001c 1E23     	 movs r3,#30
 1473 001e 2E60     	 str r6,[r5]
 1474              	.LVL104:
 1475              	.L93:
 1476              	.LBE178:
 1477              	.LBE177:
 433:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 434:../Libraries/XMCLib/src/xmc4_flash.c **** 
 435:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfirmProtection: User level out of range", (user < 3U))
 436:../Libraries/XMCLib/src/xmc4_flash.c **** 
 437:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 438:../Libraries/XMCLib/src/xmc4_flash.c **** 
 439:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 440:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 441:../Libraries/XMCLib/src/xmc4_flash.c **** 
 442:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Fill the rest of page buffer with zeros*/
 443:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0UL; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROT_CONFIRM_WORDS); idx += 2U)
 1478              	 .loc 1 443 0
 1479 0020 013B     	 subs r3,r3,#1
 1480              	.LBB179:
 1481              	.LBB172:
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 1482              	 .loc 1 114 0
 1483 0022 2260     	 str r2,[r4]
 1484              	.LVL105:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1485              	 .loc 1 116 0
 1486 0024 0A60     	 str r2,[r1]
 1487              	.LBE172:
 1488              	.LBE179:
 1489              	 .loc 1 443 0
 1490 0026 FBD1     	 bne .L93
 444:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 445:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 446:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 447:../Libraries/XMCLib/src/xmc4_flash.c **** 
 448:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + 
 1491              	 .loc 1 448 0
 1492 0028 00F54033 	 add r3,r0,#196608
 1493 002c 9B02     	 lsls r3,r3,#10
 1494              	.LVL106:
 1495              	.LBB180:
 1496              	.LBB181:
 144:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1497              	 .loc 1 144 0
 1498 002e 0A48     	 ldr r0,.L98+8
 1499              	.LVL107:
 146:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1500              	 .loc 1 146 0
 1501 0030 0B4D     	 ldr r5,.L98+16
 1502              	.LBE181:
 1503              	.LBE180:
 449:../Libraries/XMCLib/src/xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROT_CONFIRM_OFFSET))
 450:../Libraries/XMCLib/src/xmc4_flash.c **** 
 451:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 452:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1504              	 .loc 1 452 0
 1505 0032 0C4A     	 ldr r2,.L98+20
 1506              	.LBB183:
 1507              	.LBB182:
 144:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1508              	 .loc 1 144 0
 1509 0034 AA21     	 movs r1,#170
 146:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1510              	 .loc 1 146 0
 1511 0036 5526     	 movs r6,#85
 148:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 1512              	 .loc 1 148 0
 1513 0038 C024     	 movs r4,#192
 144:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1514              	 .loc 1 144 0
 1515 003a 0160     	 str r1,[r0]
 1516              	.LVL108:
 146:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1517              	 .loc 1 146 0
 1518 003c 2E60     	 str r6,[r5]
 1519              	.LVL109:
 148:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 1520              	 .loc 1 148 0
 1521 003e 0460     	 str r4,[r0]
 1522              	.LVL110:
 150:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1523              	 .loc 1 150 0
 1524 0040 C3F80012 	 str r1,[r3,#512]
 1525              	.LVL111:
 1526              	.L94:
 1527              	.LBE182:
 1528              	.LBE183:
 1529              	 .loc 1 452 0 discriminator 1
 1530 0044 1368     	 ldr r3,[r2]
 1531 0046 DB07     	 lsls r3,r3,#31
 1532 0048 FCD4     	 bmi .L94
 453:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1533              	 .loc 1 453 0
 1534 004a F0BC     	 pop {r4,r5,r6,r7}
 1535              	.LCFI22:
 1536              	 .cfi_restore 7
 1537              	 .cfi_restore 6
 1538              	 .cfi_restore 5
 1539              	 .cfi_restore 4
 1540              	 .cfi_def_cfa_offset 0
 1541 004c 7047     	 bx lr
 1542              	.L99:
 1543 004e 00BF     	 .align 2
 1544              	.L98:
 1545 0050 F055000C 	 .word 201348592
 1546 0054 F455000C 	 .word 201348596
 1547 0058 5455000C 	 .word 201348436
 1548 005c C315FE8A 	 .word -1963059773
 1549 0060 A8AA000C 	 .word 201370280
 1550 0064 10200058 	 .word 1476403216
 1551              	 .cfi_endproc
 1552              	.LFE163:
 1554              	 .section .text.XMC_FLASH_VerifyReadProtection,"ax",%progbits
 1555              	 .align 2
 1556              	 .global XMC_FLASH_VerifyReadProtection
 1557              	 .thumb
 1558              	 .thumb_func
 1560              	XMC_FLASH_VerifyReadProtection:
 1561              	.LFB164:
 454:../Libraries/XMCLib/src/xmc4_flash.c **** 
 455:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 456:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API verify read protection configuration. And returns true if passwords are matching.
 457:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 458:../Libraries/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyReadProtection(uint32_t password_0, uint32_t password_1)
 459:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1562              	 .loc 1 459 0
 1563              	 .cfi_startproc
 1564              	 
 1565              	 
 1566              	.LVL112:
 1567 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
 1568              	.LCFI23:
 1569              	 .cfi_def_cfa_offset 32
 1570              	 .cfi_offset 4,-32
 1571              	 .cfi_offset 5,-28
 1572              	 .cfi_offset 6,-24
 1573              	 .cfi_offset 7,-20
 1574              	 .cfi_offset 8,-16
 1575              	 .cfi_offset 9,-12
 1576              	 .cfi_offset 10,-8
 1577              	 .cfi_offset 14,-4
 1578              	.LBB184:
 1579              	.LBB185:
 247:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1580              	 .loc 1 247 0
 1581 0004 41F21002 	 movw r2,#4112
 1582 0008 124C     	 ldr r4,.L104
 1583 000a A358     	 ldr r3,[r4,r2]
 1584              	.LBE185:
 1585              	.LBE184:
 460:../Libraries/XMCLib/src/xmc4_flash.c ****   bool status = false;
 461:../Libraries/XMCLib/src/xmc4_flash.c ****   
 462:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Check if read protection is installed */
 463:../Libraries/XMCLib/src/xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_INSTALLED) != 0U)
 1586              	 .loc 1 463 0
 1587 000c 13F48023 	 ands r3,r3,#262144
 1588 0010 1DD0     	 beq .L102
 1589              	.LVL113:
 1590              	.LBB186:
 1591              	.LBB187:
 208:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 1592              	 .loc 1 208 0
 1593 0012 114B     	 ldr r3,.L104+4
 1594              	.LBE187:
 1595              	.LBE186:
 1596              	.LBB191:
 1597              	.LBB192:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1598              	 .loc 1 227 0
 1599 0014 114D     	 ldr r5,.L104+8
 1600              	.LBE192:
 1601              	.LBE191:
 1602              	.LBB195:
 1603              	.LBB188:
 210:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1604              	 .loc 1 210 0
 1605 0016 DFF84CE0 	 ldr lr,.L104+16
 216:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1606              	 .loc 1 216 0
 1607 001a 114E     	 ldr r6,.L104+12
 1608              	.LBE188:
 1609              	.LBE195:
 1610              	.LBB196:
 1611              	.LBB193:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1612              	 .loc 1 227 0
 1613 001c 4FF0F50A 	 mov r10,#245
 1614              	.LBE193:
 1615              	.LBE196:
 1616              	.LBB197:
 1617              	.LBB189:
 206:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1618              	 .loc 1 206 0
 1619 0020 4FF0AA09 	 mov r9,#170
 208:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 1620              	 .loc 1 208 0
 1621 0024 4FF05508 	 mov r8,#85
 210:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1622              	 .loc 1 210 0
 1623 0028 4FF0000C 	 mov ip,#0
 216:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1624              	 .loc 1 216 0
 1625 002c 0827     	 movs r7,#8
 1626              	.LBE189:
 1627              	.LBE197:
 1628              	.LBB198:
 1629              	.LBB194:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1630              	 .loc 1 227 0
 1631 002e C5F800A0 	 str r10,[r5]
 1632              	.LVL114:
 1633              	.LBE194:
 1634              	.LBE198:
 1635              	.LBB199:
 1636              	.LBB190:
 206:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1637              	 .loc 1 206 0
 1638 0032 C5F80090 	 str r9,[r5]
 1639              	.LVL115:
 208:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 1640              	 .loc 1 208 0
 1641 0036 C3F80080 	 str r8,[r3]
 1642              	.LVL116:
 210:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1643              	 .loc 1 210 0
 1644 003a CEF800C0 	 str ip,[lr]
 1645              	.LVL117:
 212:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1646              	 .loc 1 212 0
 1647 003e 1860     	 str r0,[r3]
 214:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 1648              	 .loc 1 214 0
 1649 0040 1960     	 str r1,[r3]
 1650              	.LVL118:
 216:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1651              	 .loc 1 216 0
 1652 0042 3760     	 str r7,[r6]
 1653              	.LBE190:
 1654              	.LBE199:
 1655              	.LBB200:
 1656              	.LBB201:
 247:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1657              	 .loc 1 247 0
 1658 0044 A058     	 ldr r0,[r4,r2]
 1659              	.LVL119:
 1660              	.LBE201:
 1661              	.LBE200:
 464:../Libraries/XMCLib/src/xmc4_flash.c ****   {  
 465:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 466:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lDisableReadProtectionCommand(password_0, password_1);
 467:../Libraries/XMCLib/src/xmc4_flash.c **** 
 468:../Libraries/XMCLib/src/xmc4_flash.c ****     status = (bool)(XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_DISABLED_STA
 1662              	 .loc 1 468 0
 1663 0046 C0F3C040 	 ubfx r0,r0,#19,#1
 1664              	.LVL120:
 1665 004a BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 1666              	.LVL121:
 1667              	.L102:
 460:../Libraries/XMCLib/src/xmc4_flash.c ****   
 1668              	 .loc 1 460 0
 1669 004e 1846     	 mov r0,r3
 1670              	.LVL122:
 469:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 470:../Libraries/XMCLib/src/xmc4_flash.c **** 
 471:../Libraries/XMCLib/src/xmc4_flash.c ****   return status;
 472:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1671              	 .loc 1 472 0
 1672 0050 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 1673              	.L105:
 1674              	 .align 2
 1675              	.L104:
 1676 0054 00100058 	 .word 1476399104
 1677 0058 A8AA000C 	 .word 201370280
 1678 005c 5455000C 	 .word 201348436
 1679 0060 5855000C 	 .word 201348440
 1680 0064 3C55000C 	 .word 201348412
 1681              	 .cfi_endproc
 1682              	.LFE164:
 1684              	 .section .text.XMC_FLASH_VerifyWriteProtection,"ax",%progbits
 1685              	 .align 2
 1686              	 .global XMC_FLASH_VerifyWriteProtection
 1687              	 .thumb
 1688              	 .thumb_func
 1690              	XMC_FLASH_VerifyWriteProtection:
 1691              	.LFB165:
 473:../Libraries/XMCLib/src/xmc4_flash.c **** 
 474:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 475:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API verify sector write protection configuration. And returns true if passwords are matchin
 476:../Libraries/XMCLib/src/xmc4_flash.c ****  * specified user.
 477:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 478:../Libraries/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyWriteProtection(uint32_t user,
 479:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t protection_mask, 
 480:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_0, 
 481:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_1)
 482:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1692              	 .loc 1 482 0
 1693              	 .cfi_startproc
 1694              	 
 1695              	 
 1696              	.LVL123:
 1697 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 1698              	.LCFI24:
 1699              	 .cfi_def_cfa_offset 36
 1700              	 .cfi_offset 4,-36
 1701              	 .cfi_offset 5,-32
 1702              	 .cfi_offset 6,-28
 1703              	 .cfi_offset 7,-24
 1704              	 .cfi_offset 8,-20
 1705              	 .cfi_offset 9,-16
 1706              	 .cfi_offset 10,-12
 1707              	 .cfi_offset 11,-8
 1708              	 .cfi_offset 14,-4
 1709              	.LBB202:
 1710              	.LBB203:
 247:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1711              	 .loc 1 247 0
 1712 0004 1C4E     	 ldr r6,.L112
 1713 0006 41F21005 	 movw r5,#4112
 1714              	.LVL124:
 1715              	.LBE203:
 1716              	.LBE202:
 483:../Libraries/XMCLib/src/xmc4_flash.c ****   bool status = false;
 484:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t *flash_procon_ptr = (uint32_t *)(void*)(&(FLASH0->PROCON0) + user);
 485:../Libraries/XMCLib/src/xmc4_flash.c **** 
 486:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_VerifyWriteProtection: User level out of range", (user < 2U))
 487:../Libraries/XMCLib/src/xmc4_flash.c **** 
 488:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Check if write protection for selected user is installed */
 489:../Libraries/XMCLib/src/xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_FSR_WPROIN0_Po
 1717              	 .loc 1 489 0
 1718 000a 00F11507 	 add r7,r0,#21
 1719              	.LBB205:
 1720              	.LBB204:
 247:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1721              	 .loc 1 247 0
 1722 000e 7459     	 ldr r4,[r6,r5]
 1723              	.LBE204:
 1724              	.LBE205:
 1725              	 .loc 1 489 0
 1726 0010 FC40     	 lsrs r4,r4,r7
 1727 0012 14F00104 	 ands r4,r4,#1
 1728 0016 2BD0     	 beq .L109
 1729              	.LVL125:
 1730              	.LBB206:
 1731              	.LBB207:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1732              	 .loc 1 227 0
 1733 0018 184C     	 ldr r4,.L112+4
 1734              	.LBE207:
 1735              	.LBE206:
 1736              	.LBB210:
 1737              	.LBB211:
 186:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 1738              	 .loc 1 186 0
 1739 001a 194F     	 ldr r7,.L112+8
 188:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1740              	 .loc 1 188 0
 1741 001c DFF86880 	 ldr r8,.L112+16
 194:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1742              	 .loc 1 194 0
 1743 0020 DFF868E0 	 ldr lr,.L112+20
 1744              	.LBE211:
 1745              	.LBE210:
 1746              	.LBB214:
 1747              	.LBB208:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1748              	 .loc 1 227 0
 1749 0024 4FF0F50B 	 mov fp,#245
 1750              	.LBE208:
 1751              	.LBE214:
 1752              	.LBB215:
 1753              	.LBB212:
 184:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1754              	 .loc 1 184 0
 1755 0028 4FF0AA0A 	 mov r10,#170
 186:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 1756              	 .loc 1 186 0
 1757 002c 4FF05509 	 mov r9,#85
 194:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1758              	 .loc 1 194 0
 1759 0030 4FF0050C 	 mov ip,#5
 1760              	.LBE212:
 1761              	.LBE215:
 1762              	.LBB216:
 1763              	.LBB209:
 227:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1764              	 .loc 1 227 0
 1765 0034 C4F800B0 	 str fp,[r4]
 1766              	.LVL126:
 1767              	.LBE209:
 1768              	.LBE216:
 1769              	.LBB217:
 1770              	.LBB213:
 184:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1771              	 .loc 1 184 0
 1772 0038 C4F800A0 	 str r10,[r4]
 1773              	.LVL127:
 186:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 1774              	 .loc 1 186 0
 1775 003c C7F80090 	 str r9,[r7]
 1776              	.LVL128:
 188:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1777              	 .loc 1 188 0
 1778 0040 C8F80000 	 str r0,[r8]
 1779              	.LVL129:
 190:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1780              	 .loc 1 190 0
 1781 0044 3A60     	 str r2,[r7]
 192:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 1782              	 .loc 1 192 0
 1783 0046 3B60     	 str r3,[r7]
 1784              	.LVL130:
 194:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1785              	 .loc 1 194 0
 1786 0048 CEF800C0 	 str ip,[lr]
 1787              	.LBE213:
 1788              	.LBE217:
 1789              	.LBB218:
 1790              	.LBB219:
 247:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1791              	 .loc 1 247 0
 1792 004c 7459     	 ldr r4,[r6,r5]
 1793              	.LBE219:
 1794              	.LBE218:
 490:../Libraries/XMCLib/src/xmc4_flash.c ****   {  
 491:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 492:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lDisableSectorWriteProtectionCommand(user, password_0, password_1);
 493:../Libraries/XMCLib/src/xmc4_flash.c ****     
 494:../Libraries/XMCLib/src/xmc4_flash.c ****     status = (bool)((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_
 1795              	 .loc 1 494 0
 1796 004e 00F11903 	 add r3,r0,#25
 1797              	.LVL131:
 1798 0052 DC40     	 lsrs r4,r4,r3
 1799 0054 14F00104 	 ands r4,r4,#1
 1800 0058 0AD0     	 beq .L109
 495:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1801              	 .loc 1 495 0 discriminator 1
 1802 005a 0A4B     	 ldr r3,.L112+12
 494:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1803              	 .loc 1 494 0 discriminator 1
 1804 005c 53F82030 	 ldr r3,[r3,r0,lsl#2]
 1805              	 .loc 1 495 0 discriminator 1
 1806 0060 21F40040 	 bic r0,r1,#32768
 1807              	.LVL132:
 494:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1808              	 .loc 1 494 0 discriminator 1
 1809 0064 181A     	 subs r0,r3,r0
 1810 0066 B0FA80F0 	 clz r0,r0
 1811 006a 4009     	 lsrs r0,r0,#5
 1812 006c BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 1813              	.LVL133:
 1814              	.L109:
 483:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t *flash_procon_ptr = (uint32_t *)(void*)(&(FLASH0->PROCON0) + user);
 1815              	 .loc 1 483 0
 1816 0070 2046     	 mov r0,r4
 1817              	.LVL134:
 496:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 497:../Libraries/XMCLib/src/xmc4_flash.c **** 
 498:../Libraries/XMCLib/src/xmc4_flash.c ****   return status;
 499:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1818              	 .loc 1 499 0
 1819 0072 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 1820              	.L113:
 1821 0076 00BF     	 .align 2
 1822              	.L112:
 1823 0078 00100058 	 .word 1476399104
 1824 007c 5455000C 	 .word 201348436
 1825 0080 A8AA000C 	 .word 201370280
 1826 0084 20200058 	 .word 1476403232
 1827 0088 3C55000C 	 .word 201348412
 1828 008c 5855000C 	 .word 201348440
 1829              	 .cfi_endproc
 1830              	.LFE165:
 1832              	 .section .text.XMC_FLASH_ResumeProtection,"ax",%progbits
 1833              	 .align 2
 1834              	 .global XMC_FLASH_ResumeProtection
 1835              	 .thumb
 1836              	 .thumb_func
 1838              	XMC_FLASH_ResumeProtection:
 1839              	.LFB166:
 500:../Libraries/XMCLib/src/xmc4_flash.c **** 
 501:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 502:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to enables the protection as it was configured
 503:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 504:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ResumeProtection(void)
 505:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1840              	 .loc 1 505 0
 1841              	 .cfi_startproc
 1842              	 
 1843              	 
 1844              	 
 1845              	.LVL135:
 506:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 507:../Libraries/XMCLib/src/xmc4_flash.c **** 
 508:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 509:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x5eU;
 1846              	 .loc 1 509 0
 1847 0000 014B     	 ldr r3,.L115
 1848 0002 5E22     	 movs r2,#94
 1849 0004 1A60     	 str r2,[r3]
 1850 0006 7047     	 bx lr
 1851              	.L116:
 1852              	 .align 2
 1853              	.L115:
 1854 0008 5455000C 	 .word 201348436
 1855              	 .cfi_endproc
 1856              	.LFE166:
 1858              	 .text
 1859              	.Letext0:
 1860              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1861              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1862              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1863              	 .file 5 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc4_flash.h"
 1864              	 .file 6 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_flash.c
    {standard input}:20     .text.XMC_FLASH_lEnterPageModeCommand:00000000 $t
    {standard input}:25     .text.XMC_FLASH_lEnterPageModeCommand:00000000 XMC_FLASH_lEnterPageModeCommand
    {standard input}:42     .text.XMC_FLASH_lEnterPageModeCommand:00000008 $d
    {standard input}:47     .text.XMC_FLASH_lLoadPageCommand:00000000 $t
    {standard input}:52     .text.XMC_FLASH_lLoadPageCommand:00000000 XMC_FLASH_lLoadPageCommand
    {standard input}:73     .text.XMC_FLASH_lLoadPageCommand:0000000c $d
    {standard input}:79     .text.XMC_FLASH_lWritePageCommand:00000000 $t
    {standard input}:84     .text.XMC_FLASH_lWritePageCommand:00000000 XMC_FLASH_lWritePageCommand
    {standard input}:129    .text.XMC_FLASH_lWritePageCommand:00000018 $d
    {standard input}:135    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 $t
    {standard input}:140    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 XMC_FLASH_lWriteUCBPageCommand
    {standard input}:185    .text.XMC_FLASH_lWriteUCBPageCommand:00000018 $d
    {standard input}:191    .text.XMC_FLASH_lEraseSectorCommand:00000000 $t
    {standard input}:196    .text.XMC_FLASH_lEraseSectorCommand:00000000 XMC_FLASH_lEraseSectorCommand
    {standard input}:249    .text.XMC_FLASH_lEraseSectorCommand:00000020 $d
    {standard input}:255    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 $t
    {standard input}:260    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 XMC_FLASH_lDisableSectorWriteProtectionCommand
    {standard input}:309    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000024 $d
    {standard input}:317    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 $t
    {standard input}:322    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 XMC_FLASH_lDisableReadProtectionCommand
    {standard input}:373    .text.XMC_FLASH_lDisableReadProtectionCommand:00000028 $d
    {standard input}:381    .text.XMC_FLASH_lClearStatusCommand:00000000 $t
    {standard input}:386    .text.XMC_FLASH_lClearStatusCommand:00000000 XMC_FLASH_lClearStatusCommand
    {standard input}:402    .text.XMC_FLASH_lClearStatusCommand:00000008 $d
    {standard input}:407    .text.XMC_FLASH_ClearStatus:00000000 $t
    {standard input}:412    .text.XMC_FLASH_ClearStatus:00000000 XMC_FLASH_ClearStatus
    {standard input}:430    .text.XMC_FLASH_ClearStatus:00000008 $d
    {standard input}:437    .text.XMC_FLASH_GetStatus:00000000 $t
    {standard input}:442    .text.XMC_FLASH_GetStatus:00000000 XMC_FLASH_GetStatus
    {standard input}:458    .text.XMC_FLASH_GetStatus:0000000c $d
    {standard input}:463    .text.XMC_FLASH_EnableEvent:00000000 $t
    {standard input}:468    .text.XMC_FLASH_EnableEvent:00000000 XMC_FLASH_EnableEvent
    {standard input}:487    .text.XMC_FLASH_EnableEvent:00000010 $d
    {standard input}:492    .text.XMC_FLASH_DisableEvent:00000000 $t
    {standard input}:497    .text.XMC_FLASH_DisableEvent:00000000 XMC_FLASH_DisableEvent
    {standard input}:516    .text.XMC_FLASH_DisableEvent:00000010 $d
    {standard input}:521    .text.XMC_FLASH_ProgramPage:00000000 $t
    {standard input}:526    .text.XMC_FLASH_ProgramPage:00000000 XMC_FLASH_ProgramPage
    {standard input}:651    .text.XMC_FLASH_ProgramPage:00000040 $d
    {standard input}:660    .text.XMC_FLASH_EraseSector:00000000 $t
    {standard input}:665    .text.XMC_FLASH_EraseSector:00000000 XMC_FLASH_EraseSector
    {standard input}:754    .text.XMC_FLASH_EraseSector:0000002c $d
    {standard input}:761    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 $t
    {standard input}:766    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 XMC_FLASH_lErasePhysicalSectorCommand
    {standard input}:819    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000020 $d
    {standard input}:825    .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 $t
    {standard input}:830    .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 XMC_FLASH_lRepairPhysicalSectorCommand
    {standard input}:885    .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000020 $d
    {standard input}:892    .text.XMC_FLASH_ErasePhysicalSector:00000000 $t
    {standard input}:897    .text.XMC_FLASH_ErasePhysicalSector:00000000 XMC_FLASH_ErasePhysicalSector
    {standard input}:986    .text.XMC_FLASH_ErasePhysicalSector:0000002c $d
    {standard input}:993    .text.XMC_FLASH_RepairPhysicalSector:00000000 $t
    {standard input}:998    .text.XMC_FLASH_RepairPhysicalSector:00000000 XMC_FLASH_RepairPhysicalSector
    {standard input}:1084   .text.XMC_FLASH_RepairPhysicalSector:00000024 $d
    {standard input}:1091   .text.XMC_FLASH_EraseUCB:00000000 $t
    {standard input}:1096   .text.XMC_FLASH_EraseUCB:00000000 XMC_FLASH_EraseUCB
    {standard input}:1159   .text.XMC_FLASH_EraseUCB:00000028 $d
    {standard input}:1166   .text.XMC_FLASH_Reset:00000000 $t
    {standard input}:1171   .text.XMC_FLASH_Reset:00000000 XMC_FLASH_Reset
    {standard input}:1187   .text.XMC_FLASH_Reset:00000008 $d
    {standard input}:1192   .text.XMC_FLASH_InstallProtection:00000000 $t
    {standard input}:1197   .text.XMC_FLASH_InstallProtection:00000000 XMC_FLASH_InstallProtection
    {standard input}:1378   .text.XMC_FLASH_InstallProtection:00000060 $d
    {standard input}:1387   .text.XMC_FLASH_ConfirmProtection:00000000 $t
    {standard input}:1392   .text.XMC_FLASH_ConfirmProtection:00000000 XMC_FLASH_ConfirmProtection
    {standard input}:1545   .text.XMC_FLASH_ConfirmProtection:00000050 $d
    {standard input}:1555   .text.XMC_FLASH_VerifyReadProtection:00000000 $t
    {standard input}:1560   .text.XMC_FLASH_VerifyReadProtection:00000000 XMC_FLASH_VerifyReadProtection
    {standard input}:1676   .text.XMC_FLASH_VerifyReadProtection:00000054 $d
    {standard input}:1685   .text.XMC_FLASH_VerifyWriteProtection:00000000 $t
    {standard input}:1690   .text.XMC_FLASH_VerifyWriteProtection:00000000 XMC_FLASH_VerifyWriteProtection
    {standard input}:1823   .text.XMC_FLASH_VerifyWriteProtection:00000078 $d
    {standard input}:1833   .text.XMC_FLASH_ResumeProtection:00000000 $t
    {standard input}:1838   .text.XMC_FLASH_ResumeProtection:00000000 XMC_FLASH_ResumeProtection
    {standard input}:1854   .text.XMC_FLASH_ResumeProtection:00000008 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
