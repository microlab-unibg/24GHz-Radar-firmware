   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_can.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigure,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_CAN_NODE_NominalBitTimeConfigure
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_CAN_NODE_NominalBitTimeConfigure:
  26              	.LFB217:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_can.c"
   1:../Libraries/XMCLib/src/xmc_can.c **** /**
   2:../Libraries/XMCLib/src/xmc_can.c ****  * @file xmc_can.c
   3:../Libraries/XMCLib/src/xmc_can.c ****  * @date 2016-06-20
   4:../Libraries/XMCLib/src/xmc_can.c ****  *
   5:../Libraries/XMCLib/src/xmc_can.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_can.c ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_can.c ****  *
   9:../Libraries/XMCLib/src/xmc_can.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_can.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_can.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_can.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_can.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_can.c ****  * 
  18:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_can.c ****  * 
  21:../Libraries/XMCLib/src/xmc_can.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_can.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_can.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_can.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_can.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_can.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_can.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_can.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_can.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_can.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_can.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_can.c ****  *
  36:../Libraries/XMCLib/src/xmc_can.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_can.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_can.c ****  *
  39:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_can.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_can.c ****  *
  42:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc_can.c ****  *     - New API added: XMC_CAN_MO_ReceiveData() <br>
  44:../Libraries/XMCLib/src/xmc_can.c ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  45:../Libraries/XMCLib/src/xmc_can.c ****  *     - Minor fix in XMC_CAN_TXFIFO_ConfigMOSlaveObject(). <br>
  46:../Libraries/XMCLib/src/xmc_can.c ****  *
  47:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  49:../Libraries/XMCLib/src/xmc_can.c ****  *
  50:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-01:
  51:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed  fCANB clock support <br>
  52:../Libraries/XMCLib/src/xmc_can.c ****  *
  53:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-08:
  54:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_Init() <br>
  55:../Libraries/XMCLib/src/xmc_can.c ****  *
  56:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-07:
  57:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed XMC_CAN_AllocateMOtoNodeList to wait for ready status of list controller
  58:../Libraries/XMCLib/src/xmc_can.c ****  *
  59:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-06-20:
  60:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_MO_Config() <br> 
  61:../Libraries/XMCLib/src/xmc_can.c ****  * @endcond
  62:../Libraries/XMCLib/src/xmc_can.c ****  *
  63:../Libraries/XMCLib/src/xmc_can.c ****  */ 
  64:../Libraries/XMCLib/src/xmc_can.c **** 
  65:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  66:../Libraries/XMCLib/src/xmc_can.c ****  * HEADER FILES
  67:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  68:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_can.h"
  69:../Libraries/XMCLib/src/xmc_can.c **** 
  70:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CAN)
  71:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_scu.h"
  72:../Libraries/XMCLib/src/xmc_can.c **** 
  73:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t max(uint32_t a, uint32_t b)
  74:../Libraries/XMCLib/src/xmc_can.c **** {
  75:../Libraries/XMCLib/src/xmc_can.c ****   return (a > b) ? a : b;
  76:../Libraries/XMCLib/src/xmc_can.c **** }
  77:../Libraries/XMCLib/src/xmc_can.c **** 
  78:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t min(uint32_t a, uint32_t b)
  79:../Libraries/XMCLib/src/xmc_can.c **** {
  80:../Libraries/XMCLib/src/xmc_can.c ****   return (a < b) ? a : b;
  81:../Libraries/XMCLib/src/xmc_can.c **** }
  82:../Libraries/XMCLib/src/xmc_can.c **** 
  83:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  84:../Libraries/XMCLib/src/xmc_can.c ****  * API IMPLEMENTATION
  85:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  86:../Libraries/XMCLib/src/xmc_can.c **** 
  87:../Libraries/XMCLib/src/xmc_can.c **** /* Baudrate Configuration */
  88:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
  89:../Libraries/XMCLib/src/xmc_can.c ****                                            const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_
  90:../Libraries/XMCLib/src/xmc_can.c **** {
  28              	 .loc 1 90 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 32
  36              	 .cfi_offset 4,-32
  37              	 .cfi_offset 5,-28
  38              	 .cfi_offset 6,-24
  39              	 .cfi_offset 7,-20
  40              	 .cfi_offset 8,-16
  41              	 .cfi_offset 9,-12
  42              	 .cfi_offset 10,-8
  43              	 .cfi_offset 14,-4
  44 0004 0F68     	 ldr r7,[r1]
  45 0006 4D68     	 ldr r5,[r1,#4]
  46              	.LBB24:
  91:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
  92:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_tseg1 = 12U;
  93:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_brp = 0U;
  94:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg1 = 1U;
  95:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg2 = 0U;
  96:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tbaud = 0U;
  97:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
  98:../Libraries/XMCLib/src/xmc_can.c **** 
  99:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: rate not supported", (can_bit_time->baudrate
 100:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->baudrate >= 100000U));
 101:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 102:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency <= 120000000U);
 103:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 104:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency > 5000000U);
 105:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: sample point not supported",
 106:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->sample_point < 10000U) && ((can_bit_time->sample_point > 0U)));
 107:../Libraries/XMCLib/src/xmc_can.c **** 			 
 108:../Libraries/XMCLib/src/xmc_can.c ****   /*
 109:../Libraries/XMCLib/src/xmc_can.c ****    * Bit timing & sampling
 110:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = (BRP+1)/Fcan if DIV8 = 0
 111:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = 8*(BRP+1)/Fcan if DIV8 = 1
 112:../Libraries/XMCLib/src/xmc_can.c ****    * TSync = 1.Tq
 113:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 = (TSEG1+1)*Tq                >= 3Tq
 114:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 = (TSEG2+1)*Tq                >= 2Tq
 115:../Libraries/XMCLib/src/xmc_can.c ****    * Bit Time = TSync + TSeg1 + TSeg2    >= 8Tq
 116:../Libraries/XMCLib/src/xmc_can.c ****    *
 117:../Libraries/XMCLib/src/xmc_can.c ****    * Resynchronization:
 118:../Libraries/XMCLib/src/xmc_can.c ****    *
 119:../Libraries/XMCLib/src/xmc_can.c ****    * Tsjw = (SJW + 1)*Tq
 120:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 >= Tsjw + Tprop
 121:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 >= Tsjw
 122:../Libraries/XMCLib/src/xmc_can.c ****    */
 123:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best baudrate */
 124:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_brp = 1U; temp_brp <= 64U; temp_brp++)
 125:../Libraries/XMCLib/src/xmc_can.c ****   {
 126:../Libraries/XMCLib/src/xmc_can.c **** 
 127:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t f_quanta = (uint32_t)((can_bit_time->can_frequency * 10U) / temp_brp);
 128:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 129:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_baudrate;
 130:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 131:../Libraries/XMCLib/src/xmc_can.c **** 
 132:../Libraries/XMCLib/src/xmc_can.c ****   if((temp_tbaud % 10U) > 5U)
  47              	 .loc 1 132 0
  48 0008 3E4E     	 ldr r6,.L24
  49              	.LBE24:
  96:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
  50              	 .loc 1 96 0
  51 000a 4FF0000E 	 mov lr,#0
  52 000e 07EB8707 	 add r7,r7,r7,lsl#2
  53 0012 7F00     	 lsls r7,r7,#1
  93:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg1 = 1U;
  54              	 .loc 1 93 0
  55 0014 F046     	 mov r8,lr
  97:../Libraries/XMCLib/src/xmc_can.c **** 
  56              	 .loc 1 97 0
  57 0016 42F2107C 	 movw ip,#10000
 124:../Libraries/XMCLib/src/xmc_can.c ****   {
  58              	 .loc 1 124 0
  59 001a 0124     	 movs r4,#1
  60 001c 17E0     	 b .L10
  61              	.LVL1:
  62              	.L21:
  63              	.LBB25:
 133:../Libraries/XMCLib/src/xmc_can.c ****   {
 134:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 135:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud++;
  64              	 .loc 1 135 0
  65 001e 0133     	 adds r3,r3,#1
  66              	.LVL2:
  67              	.L3:
 136:../Libraries/XMCLib/src/xmc_can.c ****   }
 137:../Libraries/XMCLib/src/xmc_can.c ****   else
 138:../Libraries/XMCLib/src/xmc_can.c ****   {
 139:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 140:../Libraries/XMCLib/src/xmc_can.c ****   }
 141:../Libraries/XMCLib/src/xmc_can.c **** 
 142:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_tbaud > 0U)
 143:../Libraries/XMCLib/src/xmc_can.c ****   {
 144:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = (uint32_t) (f_quanta / (temp_tbaud * 10U));
  68              	 .loc 1 144 0
  69 0020 03EB8309 	 add r9,r3,r3,lsl#2
  70 0024 4FEA4909 	 lsl r9,r9,#1
  71 0028 B2FBF9F2 	 udiv r2,r2,r9
  72              	.LVL3:
  73              	.L5:
 145:../Libraries/XMCLib/src/xmc_can.c ****   }
 146:../Libraries/XMCLib/src/xmc_can.c ****   else
 147:../Libraries/XMCLib/src/xmc_can.c ****   {
 148:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = f_quanta / 10U;
 149:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud = 1;
 150:../Libraries/XMCLib/src/xmc_can.c ****   }
 151:../Libraries/XMCLib/src/xmc_can.c **** 
 152:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_baudrate >= can_bit_time->baudrate)
  74              	 .loc 1 152 0
  75 002c AA42     	 cmp r2,r5
 153:../Libraries/XMCLib/src/xmc_can.c ****   {
 154:../Libraries/XMCLib/src/xmc_can.c **** 	error = temp_baudrate - can_bit_time->baudrate;
  76              	 .loc 1 154 0
  77 002e 2CBF     	 ite cs
  78 0030 521B     	 subcs r2,r2,r5
  79              	.LVL4:
 155:../Libraries/XMCLib/src/xmc_can.c ****   }
 156:../Libraries/XMCLib/src/xmc_can.c ****   else
 157:../Libraries/XMCLib/src/xmc_can.c ****   {
 158:../Libraries/XMCLib/src/xmc_can.c **** 	error = can_bit_time->baudrate - temp_baudrate;
  80              	 .loc 1 158 0
  81 0032 AA1A     	 subcc r2,r5,r2
  82              	.LVL5:
 159:../Libraries/XMCLib/src/xmc_can.c ****   }
 160:../Libraries/XMCLib/src/xmc_can.c **** 
 161:../Libraries/XMCLib/src/xmc_can.c ****   if ((temp_tbaud <= 20U) && (best_error > error))
  83              	 .loc 1 161 0
  84 0034 142B     	 cmp r3,#20
  85 0036 07D8     	 bhi .L8
  86              	 .loc 1 161 0 is_stmt 0 discriminator 1
  87 0038 6245     	 cmp r2,ip
  88 003a 05D2     	 bcs .L8
  89              	.LVL6:
 162:../Libraries/XMCLib/src/xmc_can.c ****   {
 163:../Libraries/XMCLib/src/xmc_can.c ****     best_brp = temp_brp;
 164:../Libraries/XMCLib/src/xmc_can.c ****     best_tbaud = temp_tbaud;
 165:../Libraries/XMCLib/src/xmc_can.c ****     best_error = (error);
 166:../Libraries/XMCLib/src/xmc_can.c **** 
 167:../Libraries/XMCLib/src/xmc_can.c ****     if (error < 1000U)
  90              	 .loc 1 167 0 is_stmt 1
  91 003c B2F57A7F 	 cmp r2,#1000
  92 0040 1AD3     	 bcc .L15
  93 0042 9446     	 mov ip,r2
  94 0044 9E46     	 mov lr,r3
  95 0046 A046     	 mov r8,r4
  96              	.LVL7:
  97              	.L8:
  98              	.LBE25:
 124:../Libraries/XMCLib/src/xmc_can.c ****   {
  99              	 .loc 1 124 0 discriminator 2
 100 0048 0134     	 adds r4,r4,#1
 101              	.LVL8:
 102 004a 412C     	 cmp r4,#65
 103 004c 16D0     	 beq .L9
 104              	.LVL9:
 105              	.L10:
 106              	.LBB26:
 127:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 107              	 .loc 1 127 0
 108 004e B7FBF4F2 	 udiv r2,r7,r4
 109              	.LVL10:
 128:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_baudrate;
 110              	 .loc 1 128 0
 111 0052 B2FBF5F9 	 udiv r9,r2,r5
 112              	.LVL11:
 132:../Libraries/XMCLib/src/xmc_can.c ****   {
 113              	 .loc 1 132 0
 114 0056 A6FB09A3 	 umull r10,r3,r6,r9
 115 005a DB08     	 lsrs r3,r3,#3
 116 005c 03EB830A 	 add r10,r3,r3,lsl#2
 117 0060 A9EB4A09 	 sub r9,r9,r10,lsl#1
 118              	.LVL12:
 119 0064 B9F1050F 	 cmp r9,#5
 120 0068 D9D8     	 bhi .L21
 121              	.LVL13:
 142:../Libraries/XMCLib/src/xmc_can.c ****   {
 122              	 .loc 1 142 0
 123 006a 002B     	 cmp r3,#0
 124 006c D8D1     	 bne .L3
 148:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud = 1;
 125              	 .loc 1 148 0
 126 006e A6FB0232 	 umull r3,r2,r6,r2
 127              	.LVL14:
 128 0072 D208     	 lsrs r2,r2,#3
 129              	.LVL15:
 149:../Libraries/XMCLib/src/xmc_can.c ****   }
 130              	 .loc 1 149 0
 131 0074 0123     	 movs r3,#1
 132 0076 D9E7     	 b .L5
 133              	.LVL16:
 134              	.L15:
 135              	.LBE26:
 136 0078 9E46     	 mov lr,r3
 137 007a A046     	 mov r8,r4
 138              	.LVL17:
 139              	.L9:
 140 007c 0C89     	 ldrh r4,[r1,#8]
 141              	.LVL18:
 142 007e 224B     	 ldr r3,.L24+4
 143              	.LVL19:
 168:../Libraries/XMCLib/src/xmc_can.c ****     {
 169:../Libraries/XMCLib/src/xmc_can.c ****       break;
 170:../Libraries/XMCLib/src/xmc_can.c ****     }
 171:../Libraries/XMCLib/src/xmc_can.c ****    }
 172:../Libraries/XMCLib/src/xmc_can.c ****   }
 173:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best sample point */
 174:../Libraries/XMCLib/src/xmc_can.c ****   best_error = 10000U;
 144              	 .loc 1 174 0
 145 0080 42F21077 	 movw r7,#10000
  94:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg2 = 0U;
 146              	 .loc 1 94 0
 147 0084 4FF0010C 	 mov ip,#1
 175:../Libraries/XMCLib/src/xmc_can.c **** 
 176:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_tseg1 = 64U; temp_tseg1 >= 3U; temp_tseg1--)
 148              	 .loc 1 176 0
 149 0088 4022     	 movs r2,#64
 150              	.LVL20:
 151 008a 0AE0     	 b .L14
 152              	.LVL21:
 153              	.L23:
 154              	.LBB27:
 177:../Libraries/XMCLib/src/xmc_can.c ****   {
 178:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tempSamplePoint = ((temp_tseg1 + 1U) * 10000U) / best_tbaud;
 179:../Libraries/XMCLib/src/xmc_can.c **** 	uint32_t error;
 180:../Libraries/XMCLib/src/xmc_can.c **** 	if (tempSamplePoint >= can_bit_time->sample_point)
 181:../Libraries/XMCLib/src/xmc_can.c **** 	{
 182:../Libraries/XMCLib/src/xmc_can.c ****       error = tempSamplePoint  - can_bit_time->sample_point;
 183:../Libraries/XMCLib/src/xmc_can.c **** 	}
 184:../Libraries/XMCLib/src/xmc_can.c **** 	else
 185:../Libraries/XMCLib/src/xmc_can.c **** 	{
 186:../Libraries/XMCLib/src/xmc_can.c **** 	  error = can_bit_time->sample_point  - tempSamplePoint;
 187:../Libraries/XMCLib/src/xmc_can.c **** 	}
 188:../Libraries/XMCLib/src/xmc_can.c ****     if (best_error > error)
 155              	 .loc 1 188 0
 156 008c BE42     	 cmp r6,r7
 157 008e 01D2     	 bcs .L12
 158 0090 3746     	 mov r7,r6
 159              	.LVL22:
 160 0092 9446     	 mov ip,r2
 161              	.L12:
 162              	.LVL23:
 163              	.LBE27:
 176:../Libraries/XMCLib/src/xmc_can.c ****   {
 164              	 .loc 1 176 0 discriminator 2
 165 0094 013A     	 subs r2,r2,#1
 166              	.LVL24:
 167 0096 A3F51C53 	 sub r3,r3,#9984
 168 009a 022A     	 cmp r2,#2
 169 009c A3F11003 	 sub r3,r3,#16
 170 00a0 2DD0     	 beq .L22
 171              	.LVL25:
 172              	.L14:
 173              	.LBB28:
 178:../Libraries/XMCLib/src/xmc_can.c **** 	uint32_t error;
 174              	 .loc 1 178 0
 175 00a2 B3FBFEF5 	 udiv r5,r3,lr
 176              	.LVL26:
 180:../Libraries/XMCLib/src/xmc_can.c **** 	{
 177              	 .loc 1 180 0
 178 00a6 A542     	 cmp r5,r4
 182:../Libraries/XMCLib/src/xmc_can.c **** 	}
 179              	 .loc 1 182 0
 180 00a8 A5EB0406 	 sub r6,r5,r4
 181              	.LVL27:
 180:../Libraries/XMCLib/src/xmc_can.c **** 	{
 182              	 .loc 1 180 0
 183 00ac EED2     	 bcs .L23
 184              	.LVL28:
 186:../Libraries/XMCLib/src/xmc_can.c **** 	}
 185              	 .loc 1 186 0
 186 00ae 641B     	 subs r4,r4,r5
 187              	.LVL29:
 188              	 .loc 1 188 0
 189 00b0 BC42     	 cmp r4,r7
 190 00b2 28BF     	 it cs
 191 00b4 6246     	 movcs r2,ip
 192              	.LVL30:
 193              	.L13:
 194              	.LBE28:
 189:../Libraries/XMCLib/src/xmc_can.c ****     {
 190:../Libraries/XMCLib/src/xmc_can.c ****       best_tseg1 = temp_tseg1;
 191:../Libraries/XMCLib/src/xmc_can.c ****       best_error = error;
 192:../Libraries/XMCLib/src/xmc_can.c ****     }
 193:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint < (can_bit_time->sample_point))
 194:../Libraries/XMCLib/src/xmc_can.c ****     {
 195:../Libraries/XMCLib/src/xmc_can.c ****       break;
 196:../Libraries/XMCLib/src/xmc_can.c ****     }
 197:../Libraries/XMCLib/src/xmc_can.c ****   }
 198:../Libraries/XMCLib/src/xmc_can.c **** 
 199:../Libraries/XMCLib/src/xmc_can.c ****   best_tseg2 = best_tbaud - best_tseg1 - 1U;
 200:../Libraries/XMCLib/src/xmc_can.c **** 
 201:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_EnableConfigurationChange(can_node);
 202:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure bit timing register */
 203:../Libraries/XMCLib/src/xmc_can.c ****   can_node->NBTR = (((uint32_t)(best_tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_N
 204:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 195              	 .loc 1 204 0
 196 00b6 4B89     	 ldrh r3,[r1,#10]
 197              	.LBB29:
 198              	.LBB30:
 199              	 .file 2 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2016-06-07
   4:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
   7:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.                        
  11:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *                                             
  12:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * following conditions are met:   
  14:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  15:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer.                        
  17:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 
  18:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 
  21:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  24:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  32:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
  35:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  37:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  38:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
  39:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  40:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  41:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  42:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
  43:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  44:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  45:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  46:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  47:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  49:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  50:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  51:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *      
  52:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  53:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  54:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
  55:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  56:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  57:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
  58:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  59:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  60:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
  61:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  62:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  63:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
  64:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  65:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  66:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  67:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  68:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  69:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  70:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  71:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
  72:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  73:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  74:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  75:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  76:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  77:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  78:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  79:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  80:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  81:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  82:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  83:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  84:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  85:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  86:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
  87:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
  88:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>  
  89:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
  90:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
  91:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
  92:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
  93:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
  94:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
  95:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
  96:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
  97:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
  98:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
  99:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 100:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 101:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 102:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 103:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 104:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 105:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 106:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 107:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 108:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 109:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 110:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 111:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 112:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 113:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 114:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 115:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 116:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 117:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 118:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 119:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes. 
 120:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 121:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between 
 122:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 123:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 124:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 
 125:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 126:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 127:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 128:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 129:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 130:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 
 131:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 132:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 133:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 134:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 135:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 136:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 137:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 138:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 139:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure(). 
 140:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 141:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 142:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 143:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 144:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions 
 145:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 146:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent(). 
 147:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 148:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 149:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 150:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 151:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 152:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 153:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 154:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 155:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 156:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 157:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 158:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 159:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 160:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 161:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)		/**< Standard Identifier bitposition */
 162:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 163:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 164:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 165:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL)	/**< Node event mask */
 166:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 167:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)	/**< Message Object event mask */
 168:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 169:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 170:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 171:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 172:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 173:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 174:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** */
 175:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 176:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 177:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 178:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 179:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 180:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 181:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 182:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 183:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 184:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 185:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 186:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** */
 187:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 188:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 189:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 190:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 191:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 192:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 193:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,	  /**< Remove a message object from the list and insert
 194:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 195:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 196:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 197:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 198:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 199:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 200:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 201:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 202:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** */
 203:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 204:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 205:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 206:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 207:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 208:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 209:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 210:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 211:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 212:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 213:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 214:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 215:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 216:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 217:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 218:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 219:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 220:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 221:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 222:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 223:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 224:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 225:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 226:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 227:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 228:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 229:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 230:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 231:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 232:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 233:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 234:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 235:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 236:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 237:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 238:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 239:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 240:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 241:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 242:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 243:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U, 			 /**< Frame Count Mode */
 244:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 245:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 246:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 247:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 248:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 249:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 250:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 251:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 252:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 253:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 254:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 255:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 256:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 257:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 258:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 259:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 260:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 261:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 262:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 263:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 264:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 265:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 266:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 267:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 268:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 269:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 270:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 271:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 272:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 273:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 274:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 275:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 276:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 277:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 278:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 279:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 280:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 281:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 282:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 283:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 284:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 285:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 286:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 287:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 288:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 289:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 290:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 291:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 292:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 293:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 294:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 295:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 296:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 297:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 298:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 299:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 300:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 301:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 302:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 303:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 304:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 305:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 306:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 307:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 308:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 309:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 310:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 311:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 312:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 313:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 314:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,    	/**< Pointer to previous 
 315:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 316:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 317:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 318:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 319:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 320:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 321:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 322:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 323:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 324:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 325:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 326:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 327:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 328:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF= CAN_NODE_NSR_BOFF_Msk,				/**< Bus-off status */
 329:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 330:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 331:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 332:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 333:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #endif
 334:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 335:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 336:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 337:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 338:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 339:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 340:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 341:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 342:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 343:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 344:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 345:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 346:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 347:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE= CAN_NODE_NCR_CCE_Msk,     /**< Configuration change enab
 348:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 349:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 350:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 351:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #endif
 352:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 353:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 354:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 355:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 356:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 357:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 358:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 359:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 360:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 361:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 362:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 363:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 364:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 365:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 366:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 367:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 368:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 369:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 370:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 371:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 372:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 373:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 374:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 375:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 376:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 377:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 378:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 379:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 380:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 381:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 382:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 383:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 384:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 385:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 386:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 387:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 388:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 389:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 390:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 391:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 392:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 393:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 394:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 395:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 396:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 397:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 398:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 399:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 400:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA, 	/**< CAN Receive Input A */
 401:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,		/**< CAN Receive Input B */
 402:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,		/**< CAN Receive Input C */
 403:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,		/**< CAN Receive Input D */
 404:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,		/**< CAN Receive Input E */
 405:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,		/**< CAN Receive Input F */
 406:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,		/**< CAN Receive Input G */
 407:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH		/**< CAN Receive Input H */
 408:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 409:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 410:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 411:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 412:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 413:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 414:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 415:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 416:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 417:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 418:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 419:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 420:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 421:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 422:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 423:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 424:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 425:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 426:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 427:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 428:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 429:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 430:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 431:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 432:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 433:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 434:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 435:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 436:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 437:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 438:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 439:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 440:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 441:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 442:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 443:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 444:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 445:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 446:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN peripheral. @note Only available for XMC1400, XMC4800
 447:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 448:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 449:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 450:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #if UC_FAMILY == XMC4
 451:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U,
 452:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U,
 453:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #else
 454:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U,
 455:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U
 456:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #endif
 457:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 458:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #endif
 459:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 460:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 461:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 462:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 463:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 464:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 465:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** */
 466:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 467:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 468:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;       /**< Frequency of the CAN module(fCAN). \a can_frequency shall be r
 469:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;        	/**< Specifies the node baud rate. Unit: baud \a baudrate shall be ran
 470:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;    	/**< Sample point is used to compensate mismatch between transmitter a
 471:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 									 the synchronization segment. Sample point. Range = [0, 10000] with respect [0%, 100%] of 
 472:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;             	/**< (Re) Synchronization Jump Width. Range:0-3 */
 473:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 474:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 475:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 476:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 477:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 478:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 479:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 480:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 481:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;		/**< points to the first element(slave object) in a FIFO structure.Range :0
 482:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;			/**< points to the last element(slave object) in a FIFO structure. Range :0-6
 483:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;		/**< points to the actual target object(Base object) within a FIFO/Gateway st
 484:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 485:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 486:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 487:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 488:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 489:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 490:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 491:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 492:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom; 			/**< points to the first element(gateway destination object) in a FIFO
 493:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;				/**< points to the last element(gateway destination object) in a FIFO str
 494:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;				/**< points to the actual target object within a FIFO/Gateway structure.
 495:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;		/**< TXRQ updated in the gateway destination object after the inte
 496:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	  	  	 to the gateway destination object */
 497:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;		/**< The identifier of the gateway source object (after storing th
 498:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	  	  	 to the gateway destination object. */
 499:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 500:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 501:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	  	  	   gateway destination object */
 502:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 503:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	are copied to the gateway destination.*/
 504:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 505:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 506:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 507:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 508:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 509:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** */
 510:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 511:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 512:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 513:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 514:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   #pragma push
 515:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   #pragma anon_unions
 516:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 517:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning 586
 518:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #endif
 519:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 520:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 521:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 522:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 523:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 524:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** */
 525:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 526:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 527:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 528:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   union{
 529:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 	  struct{
 530:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t : 16;
 531:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t can_frame_count_selection:3;		/**<   Defines function of the frame counter  */
 532:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t can_frame_count_mode:2;			/**<   Determines the operation mode of the frame counter */
 533:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t : 11;
 534:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 	  };
 535:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 	  uint32_t nfcr;
 536:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 537:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   };
 538:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 539:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 540:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 541:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 542:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** */
 543:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 544:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 545:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 546:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 547:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 548:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 549:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 550:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 	CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register */
 551:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 	union{
 552:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		struct{
 553:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_identifier:29;            /**< standard (11 bit)/Extended (29 bit) message identifi
 554:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_id_mode:1;                /**< Standard/Extended identifier support */
 555:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_priority:2;               /**< Arbitration Mode/Priority */
 556:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		};
 557:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		uint32_t mo_ar;
 558:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 	};
 559:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 	union{
 560:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		struct{
 561:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_id_mask:29;              /**< CAN Identifier of Message Object */
 562:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_ide_mask:1;              /**< Identifier Extension Bit of Message Object */
 563:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		};
 564:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		uint32_t mo_amr;
 565:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 	};
 566:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 567:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 568:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   union{
 569:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 570:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   		uint8_t can_data_byte[8];                 /**< Each position of the array represents a data byt
 571:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   		uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bits 
 572:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   		uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_data[
 573:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   		 	 	 	 	 	 	 	 	 	 	    of the data */
 574:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   		uint64_t can_data_long;                   /** Data of the Message Object*/
 575:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   	  };
 576:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 577:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 578:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 579:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 580:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 581:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 582:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   #pragma pop
 583:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 584:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning restore
 585:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #endif
 586:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 587:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 588:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 589:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 590:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 591:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #endif
 592:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 593:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 594:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 595:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj	Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 596:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 				for details.
 597:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 598:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 599:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 600:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 601:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 602:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 603:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 604:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 605:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 606:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 607:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 608:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 609:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 610:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 611:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 612:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 613:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 			   for details.
 614:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 615:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 616:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 617:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 618:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 619:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 620:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 622:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 623:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 625:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 626:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 627:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 628:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 629:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 630:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 631:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 		   for details.
 632:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 633:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num	CAN node number,Range : 0-2
 634:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num 	CAN Message Object number,Range : 0-63
 635:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 636:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 637:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 638:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 639:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 640:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 641:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 642:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 643:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 644:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 645:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 646:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 647:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 648:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 649:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 650:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 651:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 652:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 653:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 654:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 655:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 656:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 657:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 658:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 659:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 660:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 661:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 662:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 663:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 664:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 665:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 666:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
 667:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
 668:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 669:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 670:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 671:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 672:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 			  for details.
 673:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 674:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 675:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1	 Panel Argument 1,Range : 0-2
 676:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2 	 Panel Argument 2, Range : 0-63
 677:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 678:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 679:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 680:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 681:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 682:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 683:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 684:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 685:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 686:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 687:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 688:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 689:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 690:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 691:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 692:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 693:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_PANCMD_t pancmd,
 694:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		                                  const uint8_t arg1,
 695:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		                                  const uint8_t arg2)
 696:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 697:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 698:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 699:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 700:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
 701:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 702:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 703:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 704:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 705:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 706:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 			  for details.
 707:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 708:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr	Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_TR
 709:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 							 Multiple interrupt trigger events can be ORed.
 710:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 711:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 712:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 713:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 714:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 715:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 716:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 717:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 718:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 719:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 720:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 721:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 722:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj,const XMC_CAN_NODE_INTERRUPT_TRIGGER
 723:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 724:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 725:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
 726:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 727:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 728:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 729:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 								/*INIT APIs*/
 730:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 731:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 732:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 733:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 734:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 			  for details.
 735:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 736:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency	CAN module frequency(fCAN). Range : 5MHz to 120MHz
 737:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 738:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 739:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 740:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 741:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 742:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() to configure baud rate for current CAN frequency.It 
 743:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 744:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 745:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure()\n\n\n
 746:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 747:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 748:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 749:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 750:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS)
 751:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 752:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 753:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 754:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 755:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 756:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 757:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 758:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 759:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source);
 760:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 761:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 762:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 763:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 764:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #else
 765:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 766:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** #endif
 767:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 768:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 769:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 770:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 771:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 773:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 774:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 775:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 776:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 777:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 778:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 779:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * None
 780:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 781:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 782:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 783:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 784:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 785:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 786:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 	  /*NODE APIs*/
 787:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 788:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 789:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 790:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 791:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  	  Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 792:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event		  CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_t
 793:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 794:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 795:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 796:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 797:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 798:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 799:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 800:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 801:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * None
 802:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 803:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 804:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 805:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 806:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		                                      const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 807:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		                                      const uint32_t service_request)
 808:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 809:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
 810:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
 811:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 812:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 813:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 814:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 815:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node		Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CAN_
 816:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time	Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMIN
 817:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 818:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 819:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 820:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 821:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 822:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 823:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 824:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 825:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * None
 826:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 827:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 828:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
 829:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****                                            const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_
 830:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 831:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 832:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 833:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 834:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 835:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 836:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 837:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 838:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 839:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 840:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 841:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 842:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 843:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 844:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * None
 845:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 846:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 847:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 848:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 849:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 850:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 851:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 852:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		                                          const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 853:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 854:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 855:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 856:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
 857:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 858:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 859:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 860:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node	Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 861:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 862:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 863:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 864:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 865:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 866:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 867:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 868:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 869:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 870:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 871:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 872:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 873:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 874:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 875:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 876:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 877:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 878:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 879:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 880:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 881:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 882:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
 883:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 884:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 885:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 886:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 887:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 888:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 889:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 890:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 891:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 892:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 893:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 894:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 896:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 897:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 898:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 899:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 900:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 901:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 902:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 903:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 904:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
 905:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 906:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
 907:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
 908:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 909:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 910:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 911:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 912:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 913:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param event	   CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
 914:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 				   multiple events can be ORed.
 915:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 916:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 917:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 918:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 919:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
 920:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 921:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 922:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
 923:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 924:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 925:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 926:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
 927:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 928:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 929:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 930:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 931:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 932:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param event	   CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
 933:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * 				   multiple events can be ORed.
 934:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 935:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 936:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 937:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 938:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
 939:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 940:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 941:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
 942:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 943:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 944:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 945:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
 946:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 947:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 948:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 949:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 950:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
 951:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 952:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
 953:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 954:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 955:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
 956:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 957:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 958:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
 959:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 960:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 961:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 962:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
 963:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 964:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
 965:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
 966:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 967:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 968:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 969:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 970:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
 971:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 972:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
 973:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 974:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 975:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
 976:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 977:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 978:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
 979:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 980:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
 981:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 982:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
 983:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
 984:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk)>> CAN_NODE_NECN
 985:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
 986:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 987:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
 988:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
 989:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 990:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 991:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level	Error Warning level value. Range :0-255.
 992:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 993:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 994:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 995:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 996:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
 997:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
 998:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
 999:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1000:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1001:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1002:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1003:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1004:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1005:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
1006:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1007:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1008:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
1009:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1010:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1011:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
1012:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1013:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1014:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
1015:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1016:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1017:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1018:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1019:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1020:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1021:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1022:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1023:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1024:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1025:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1026:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1027:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1028:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1029:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1030:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1031:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
1032:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1033:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1034:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1035:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
1036:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1037:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1038:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
1039:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1040:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1041:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
1042:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1043:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1044:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1045:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1046:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1047:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1048:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1049:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1050:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1051:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1052:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1053:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1054:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1055:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1056:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1057:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1058:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
1059:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1060:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1061:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
1062:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1063:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_Ms
1064:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
1065:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1066:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1067:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
1068:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1069:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1070:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1071:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1072:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1073:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1074:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *	Returns error warning level. This determines the threshold value (warning level, default 96) to 
1075:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *	to set the corresponding error warning bit EWRN. It reads NECNT register.
1076:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1077:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1078:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1079:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1080:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
1081:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1082:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1083:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1084:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
1085:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EWR
1086:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
1087:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1088:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1089:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
1090:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1091:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1092:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1093:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1094:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1095:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1096:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *	Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a transm
1097:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *	running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the erro
1098:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *	reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1099:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1100:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1101:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1102:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1103:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1104:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1105:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1106:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
1107:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1108:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1109:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
1110:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1111:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
1112:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1113:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1114:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
1115:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1116:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1117:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t	receive error counter value.
1119:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1120:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1121:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *	Returns Receive Error Counter value. It reads NECNT register.
1122:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1123:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1124:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1125:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1126:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
1127:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1128:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1129:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
1130:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1131:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
1132:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1133:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1134:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
1135:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1136:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1137:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1138:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1139:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1140:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1141:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1142:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1143:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1144:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1145:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1146:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
1147:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1148:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1149:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
1150:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
1151:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
1152:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1153:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
1154:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1155:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1156:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1157:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1158:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1159:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1160:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1161:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1162:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1163:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1164:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1165:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1166:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
1167:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1168:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node,XMC_CAN_NODE_STATUS_t 
1169:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
1170:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****    can_node->NSR &= ~(uint32_t)can_node_status;
1171:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
1172:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1173:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1174:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
1175:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1176:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1177:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1178:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1179:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1180:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1181:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1182:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1183:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1184:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1185:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1186:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1187:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
1188:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1189:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1190:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
1191:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 200              	 .loc 2 1191 0
 201 00b8 0168     	 ldr r1,[r0]
 202              	.LVL31:
 203              	.LBE30:
 204              	.LBE29:
 205              	 .loc 1 204 0
 206 00ba 013B     	 subs r3,r3,#1
 205:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1-1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBT
 207              	 .loc 1 205 0
 208 00bc 541E     	 subs r4,r2,#1
 204:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1-1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBT
 209              	 .loc 1 204 0
 210 00be 9B01     	 lsls r3,r3,#6
 206:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 211              	 .loc 1 206 0
 212 00c0 08F1FF38 	 add r8,r8,#-1
 213              	.LVL32:
 214 00c4 AEF1020E 	 sub lr,lr,#2
 215              	.LVL33:
 204:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1-1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBT
 216              	 .loc 1 204 0
 217 00c8 DBB2     	 uxtb r3,r3
 218              	 .loc 1 206 0
 219 00ca 08F03F08 	 and r8,r8,#63
 220              	.LVL34:
 203:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 221              	 .loc 1 203 0
 222 00ce C2EB0E02 	 rsb r2,r2,lr
 223              	.LVL35:
 205:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 224              	 .loc 1 205 0
 225 00d2 2402     	 lsls r4,r4,#8
 226              	.LVL36:
 227 00d4 48EA0308 	 orr r8,r8,r3
 203:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 228              	 .loc 1 203 0
 229 00d8 1203     	 lsls r2,r2,#12
 205:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 230              	 .loc 1 205 0
 231 00da 04F47063 	 and r3,r4,#3840
 203:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 232              	 .loc 1 203 0
 233 00de 02F4E042 	 and r2,r2,#28672
 234 00e2 48EA0308 	 orr r8,r8,r3
 235              	 .loc 1 206 0
 236 00e6 48EA0203 	 orr r3,r8,r2
 237              	.LBB32:
 238              	.LBB31:
 239              	 .loc 2 1191 0
 240 00ea 41F04001 	 orr r1,r1,#64
 241 00ee 0160     	 str r1,[r0]
 242              	.LBE31:
 243              	.LBE32:
 203:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 244              	 .loc 1 203 0
 245 00f0 0361     	 str r3,[r0,#16]
 246              	.LVL37:
 247              	.LBB33:
 248              	.LBB34:
1192:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
1193:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1194:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1195:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** /**
1196:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1197:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1198:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1199:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1200:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1201:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1202:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *	Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1203:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1204:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1205:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1206:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  *
1207:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****  */
1208:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 
1209:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1210:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** {
1211:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 249              	 .loc 2 1211 0
 250 00f2 0368     	 ldr r3,[r0]
 251 00f4 23F04003 	 bic r3,r3,#64
 252 00f8 0360     	 str r3,[r0]
 253 00fa BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 254              	.LVL38:
 255              	.L22:
 256              	.LBE34:
 257              	.LBE33:
 258 00fe 6246     	 mov r2,ip
 259              	.LVL39:
 260 0100 D9E7     	 b .L13
 261              	.L25:
 262 0102 00BF     	 .align 2
 263              	.L24:
 264 0104 CDCCCCCC 	 .word -858993459
 265 0108 10EB0900 	 .word 650000
 266              	 .cfi_endproc
 267              	.LFE217:
 269              	 .section .text.XMC_CAN_AllocateMOtoNodeList,"ax",%progbits
 270              	 .align 2
 271              	 .global XMC_CAN_AllocateMOtoNodeList
 272              	 .thumb
 273              	 .thumb_func
 275              	XMC_CAN_AllocateMOtoNodeList:
 276              	.LFB218:
 207:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)0U << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 208:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_DisableConfigurationChange(can_node);
 209:../Libraries/XMCLib/src/xmc_can.c **** }
 210:../Libraries/XMCLib/src/xmc_can.c **** /* Function to allocate message object from free list to node list */
 211:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 212:../Libraries/XMCLib/src/xmc_can.c **** {
 277              	 .loc 1 212 0
 278              	 .cfi_startproc
 279              	 
 280              	 
 281              	 
 282              	.LVL40:
 283              	.L27:
 284              	.LBB35:
 285              	.LBB36:
 666:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** }
 286              	 .loc 2 666 0 discriminator 1
 287 0000 D0F8C431 	 ldr r3,[r0,#452]
 288              	.LBE36:
 289              	.LBE35:
 213:../Libraries/XMCLib/src/xmc_can.c ****   /* wait while panel operation is in progress. */
 214:../Libraries/XMCLib/src/xmc_can.c ****   while (XMC_CAN_IsPanelControlReady(obj) == false)
 290              	 .loc 1 214 0 discriminator 1
 291 0004 13F4407F 	 tst r3,#768
 292 0008 FAD1     	 bne .L27
 293              	.LVL41:
 294              	.LBB37:
 295              	.LBB38:
 698:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 296              	 .loc 2 698 0
 297 000a 1204     	 lsls r2,r2,#16
 298              	.LVL42:
 697:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 299              	 .loc 2 697 0
 300 000c 42F00202 	 orr r2,r2,#2
 301              	.LBE38:
 302              	.LBE37:
 215:../Libraries/XMCLib/src/xmc_can.c ****   {
 216:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 217:../Libraries/XMCLib/src/xmc_can.c ****   };
 218:../Libraries/XMCLib/src/xmc_can.c **** 
 219:../Libraries/XMCLib/src/xmc_can.c ****   /* Panel Command for  allocation of MO to node list */
 220:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_PanelControl(obj, XMC_CAN_PANCMD_STATIC_ALLOCATE,mo_num,(node_num + 1U));
 303              	 .loc 1 220 0
 304 0010 0131     	 adds r1,r1,#1
 305              	.LVL43:
 306              	.LBB40:
 307              	.LBB39:
 698:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 308              	 .loc 2 698 0
 309 0012 42EA0161 	 orr r1,r2,r1,lsl#24
 697:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 310              	 .loc 2 697 0
 311 0016 C0F8C411 	 str r1,[r0,#452]
 312 001a 7047     	 bx lr
 313              	.LBE39:
 314              	.LBE40:
 315              	 .cfi_endproc
 316              	.LFE218:
 318              	 .section .text.XMC_CAN_Disable,"ax",%progbits
 319              	 .align 2
 320              	 .global XMC_CAN_Disable
 321              	 .thumb
 322              	 .thumb_func
 324              	XMC_CAN_Disable:
 325              	.LFB219:
 221:../Libraries/XMCLib/src/xmc_can.c **** }
 222:../Libraries/XMCLib/src/xmc_can.c **** 
 223:../Libraries/XMCLib/src/xmc_can.c **** /* Disable XMC_CAN Peripheral */
 224:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Disable(XMC_CAN_t *const obj)
 225:../Libraries/XMCLib/src/xmc_can.c **** {
 326              	 .loc 1 225 0
 327              	 .cfi_startproc
 328              	 
 329              	 
 330              	.LVL44:
 331 0000 10B5     	 push {r4,lr}
 332              	.LCFI1:
 333              	 .cfi_def_cfa_offset 8
 334              	 .cfi_offset 4,-8
 335              	 .cfi_offset 14,-4
 226:../Libraries/XMCLib/src/xmc_can.c ****   /* Disable CAN Module */
 227:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC = CAN_CLC_DISR_Msk;
 228:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 229:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 336              	 .loc 1 229 0
 337 0002 054C     	 ldr r4,.L31
 227:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 338              	 .loc 1 227 0
 339 0004 0123     	 movs r3,#1
 340 0006 0360     	 str r3,[r0]
 341              	 .loc 1 229 0
 342 0008 2046     	 mov r0,r4
 343              	.LVL45:
 344 000a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 345              	.LVL46:
 230:../Libraries/XMCLib/src/xmc_can.c **** #endif
 231:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 232:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 346              	 .loc 1 232 0
 347 000e 2046     	 mov r0,r4
 233:../Libraries/XMCLib/src/xmc_can.c **** #endif
 234:../Libraries/XMCLib/src/xmc_can.c **** }
 348              	 .loc 1 234 0
 349 0010 BDE81040 	 pop {r4,lr}
 350              	.LCFI2:
 351              	 .cfi_restore 14
 352              	 .cfi_restore 4
 353              	 .cfi_def_cfa_offset 0
 232:../Libraries/XMCLib/src/xmc_can.c **** #endif
 354              	 .loc 1 232 0
 355 0014 FFF7FEBF 	 b XMC_SCU_CLOCK_GatePeripheralClock
 356              	.LVL47:
 357              	.L32:
 358              	 .align 2
 359              	.L31:
 360 0018 10000010 	 .word 268435472
 361              	 .cfi_endproc
 362              	.LFE219:
 364              	 .section .text.XMC_CAN_Enable,"ax",%progbits
 365              	 .align 2
 366              	 .global XMC_CAN_Enable
 367              	 .thumb
 368              	 .thumb_func
 370              	XMC_CAN_Enable:
 371              	.LFB220:
 235:../Libraries/XMCLib/src/xmc_can.c **** 
 236:../Libraries/XMCLib/src/xmc_can.c **** /* Enable XMC_CAN Peripheral */
 237:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Enable(XMC_CAN_t *const obj)
 238:../Libraries/XMCLib/src/xmc_can.c **** {
 372              	 .loc 1 238 0
 373              	 .cfi_startproc
 374              	 
 375              	 
 376              	.LVL48:
 377 0000 10B5     	 push {r4,lr}
 378              	.LCFI3:
 379              	 .cfi_def_cfa_offset 8
 380              	 .cfi_offset 4,-8
 381              	 .cfi_offset 14,-4
 382              	 .loc 1 238 0
 383 0002 0446     	 mov r4,r0
 239:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 240:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 384              	 .loc 1 240 0
 385 0004 0648     	 ldr r0,.L37
 386              	.LVL49:
 387 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 388              	.LVL50:
 241:../Libraries/XMCLib/src/xmc_can.c **** #endif
 242:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 243:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 389              	 .loc 1 243 0
 390 000a 0548     	 ldr r0,.L37
 391 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 392              	.LVL51:
 244:../Libraries/XMCLib/src/xmc_can.c **** #endif
 245:../Libraries/XMCLib/src/xmc_can.c ****   /* Enable CAN Module */
 246:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC &= ~(uint32_t)CAN_CLC_DISR_Msk;
 393              	 .loc 1 246 0
 394 0010 2368     	 ldr r3,[r4]
 395 0012 23F00103 	 bic r3,r3,#1
 396 0016 2360     	 str r3,[r4]
 397              	.L34:
 247:../Libraries/XMCLib/src/xmc_can.c ****   while (obj->CLC & CAN_CLC_DISS_Msk)
 398              	 .loc 1 247 0 discriminator 1
 399 0018 2368     	 ldr r3,[r4]
 400 001a 9B07     	 lsls r3,r3,#30
 401 001c FCD4     	 bmi .L34
 248:../Libraries/XMCLib/src/xmc_can.c ****   {
 249:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 250:../Libraries/XMCLib/src/xmc_can.c ****   };
 251:../Libraries/XMCLib/src/xmc_can.c **** }
 402              	 .loc 1 251 0
 403 001e 10BD     	 pop {r4,pc}
 404              	.LVL52:
 405              	.L38:
 406              	 .align 2
 407              	.L37:
 408 0020 10000010 	 .word 268435472
 409              	 .cfi_endproc
 410              	.LFE220:
 412              	 .section .text.XMC_CAN_GetBaudrateClockFrequency,"ax",%progbits
 413              	 .align 2
 414              	 .global XMC_CAN_GetBaudrateClockFrequency
 415              	 .thumb
 416              	 .thumb_func
 418              	XMC_CAN_GetBaudrateClockFrequency:
 419              	.LFB221:
 252:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 253:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj)
 254:../Libraries/XMCLib/src/xmc_can.c **** {
 420              	 .loc 1 254 0
 421              	 .cfi_startproc
 422              	 
 423              	 
 424              	 
 425              	.LVL53:
 426              	.LBB43:
 427              	.LBB44:
 255:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t frequency;
 256:../Libraries/XMCLib/src/xmc_can.c **** 
 257:../Libraries/XMCLib/src/xmc_can.c ****   switch(XMC_CAN_GetBaudrateClockSource(obj))
 258:../Libraries/XMCLib/src/xmc_can.c ****   {
 259:../Libraries/XMCLib/src/xmc_can.c **** #if UC_FAMILY == XMC4
 260:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FPERI:
 261:../Libraries/XMCLib/src/xmc_can.c ****          frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 262:../Libraries/XMCLib/src/xmc_can.c ****          break;
 263:../Libraries/XMCLib/src/xmc_can.c **** #else
 264:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_MCLK:
 265:../Libraries/XMCLib/src/xmc_can.c ****            frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 266:../Libraries/XMCLib/src/xmc_can.c ****            break;
 267:../Libraries/XMCLib/src/xmc_can.c **** #endif
 268:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FOHP:
 269:../Libraries/XMCLib/src/xmc_can.c ****          frequency = OSCHP_GetFrequency();
 270:../Libraries/XMCLib/src/xmc_can.c ****          break;
 271:../Libraries/XMCLib/src/xmc_can.c **** 
 272:../Libraries/XMCLib/src/xmc_can.c ****     default:
 273:../Libraries/XMCLib/src/xmc_can.c ****          frequency = 0;
 274:../Libraries/XMCLib/src/xmc_can.c ****          break;
 275:../Libraries/XMCLib/src/xmc_can.c ****   }
 276:../Libraries/XMCLib/src/xmc_can.c **** 
 277:../Libraries/XMCLib/src/xmc_can.c ****   return frequency;
 278:../Libraries/XMCLib/src/xmc_can.c **** }
 279:../Libraries/XMCLib/src/xmc_can.c **** 
 280:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 281:../Libraries/XMCLib/src/xmc_can.c **** {
 282:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 283:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 284:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 285:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 286:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 287:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 288:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 289:../Libraries/XMCLib/src/xmc_can.c **** 
 290:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 291:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 292:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 293:../Libraries/XMCLib/src/xmc_can.c **** 
 294:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 295:../Libraries/XMCLib/src/xmc_can.c **** 
 296:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 297:../Libraries/XMCLib/src/xmc_can.c **** 
 298:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 299:../Libraries/XMCLib/src/xmc_can.c **** 
 300:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 301:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 302:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 303:../Libraries/XMCLib/src/xmc_can.c **** 
 304:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 305:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 306:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 307:../Libraries/XMCLib/src/xmc_can.c **** 
 308:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 309:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 310:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 311:../Libraries/XMCLib/src/xmc_can.c **** 
 312:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 313:../Libraries/XMCLib/src/xmc_can.c **** 
 314:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 315:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 316:../Libraries/XMCLib/src/xmc_can.c **** 
 317:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 318:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 319:../Libraries/XMCLib/src/xmc_can.c **** 
 320:../Libraries/XMCLib/src/xmc_can.c **** }
 321:../Libraries/XMCLib/src/xmc_can.c **** 
 322:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source)
 323:../Libraries/XMCLib/src/xmc_can.c **** {
 324:../Libraries/XMCLib/src/xmc_can.c ****   obj->MCR = (obj->MCR & ~CAN_MCR_CLKSEL_Msk) | source ;
 325:../Libraries/XMCLib/src/xmc_can.c **** }
 326:../Libraries/XMCLib/src/xmc_can.c **** 
 327:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj)
 328:../Libraries/XMCLib/src/xmc_can.c **** {
 329:../Libraries/XMCLib/src/xmc_can.c ****   return ((XMC_CAN_CANCLKSRC_t)((obj->MCR & CAN_MCR_CLKSEL_Msk) >> CAN_MCR_CLKSEL_Pos));
 428              	 .loc 1 329 0
 429 0000 D0F8C831 	 ldr r3,[r0,#456]
 430              	.LBE44:
 431              	.LBE43:
 257:../Libraries/XMCLib/src/xmc_can.c ****   {
 432              	 .loc 1 257 0
 433 0004 03F00F03 	 and r3,r3,#15
 434 0008 012B     	 cmp r3,#1
 435 000a 05D0     	 beq .L41
 436 000c 022B     	 cmp r3,#2
 437 000e 01D1     	 bne .L45
 269:../Libraries/XMCLib/src/xmc_can.c ****          break;
 438              	 .loc 1 269 0
 439 0010 FFF7FEBF 	 b OSCHP_GetFrequency
 440              	.LVL54:
 441              	.L45:
 278:../Libraries/XMCLib/src/xmc_can.c **** 
 442              	 .loc 1 278 0
 443 0014 0020     	 movs r0,#0
 444              	.LVL55:
 445 0016 7047     	 bx lr
 446              	.LVL56:
 447              	.L41:
 261:../Libraries/XMCLib/src/xmc_can.c ****          break;
 448              	 .loc 1 261 0
 449 0018 FFF7FEBF 	 b XMC_SCU_CLOCK_GetPeripheralClockFrequency
 450              	.LVL57:
 451              	 .cfi_endproc
 452              	.LFE221:
 454              	 .section .text.XMC_CAN_Init,"ax",%progbits
 455              	 .align 2
 456              	 .global XMC_CAN_Init
 457              	 .thumb
 458              	 .thumb_func
 460              	XMC_CAN_Init:
 461              	.LFB222:
 281:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 462              	 .loc 1 281 0
 463              	 .cfi_startproc
 464              	 
 465              	 
 466              	.LVL58:
 467 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 468              	.LCFI4:
 469              	 .cfi_def_cfa_offset 24
 470              	 .cfi_offset 3,-24
 471              	 .cfi_offset 4,-20
 472              	 .cfi_offset 5,-16
 473              	 .cfi_offset 6,-12
 474              	 .cfi_offset 7,-8
 475              	 .cfi_offset 14,-4
 281:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 476              	 .loc 1 281 0
 477 0002 0446     	 mov r4,r0
 478              	.LVL59:
 479              	.LBB59:
 480              	.LBB60:
 240:../Libraries/XMCLib/src/xmc_can.c **** #endif
 481              	 .loc 1 240 0
 482 0004 3048     	 ldr r0,.L58
 483              	.LVL60:
 484              	.LBE60:
 485              	.LBE59:
 281:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 486              	 .loc 1 281 0
 487 0006 0D46     	 mov r5,r1
 488 0008 1646     	 mov r6,r2
 489              	.LBB62:
 490              	.LBB61:
 240:../Libraries/XMCLib/src/xmc_can.c **** #endif
 491              	 .loc 1 240 0
 492 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 493              	.LVL61:
 243:../Libraries/XMCLib/src/xmc_can.c **** #endif
 494              	 .loc 1 243 0
 495 000e 2E48     	 ldr r0,.L58
 496 0010 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 497              	.LVL62:
 246:../Libraries/XMCLib/src/xmc_can.c ****   while (obj->CLC & CAN_CLC_DISS_Msk)
 498              	 .loc 1 246 0
 499 0014 2368     	 ldr r3,[r4]
 500 0016 23F00103 	 bic r3,r3,#1
 501 001a 2360     	 str r3,[r4]
 502              	.L47:
 247:../Libraries/XMCLib/src/xmc_can.c ****   {
 503              	 .loc 1 247 0
 504 001c 2368     	 ldr r3,[r4]
 505 001e 13F00203 	 ands r3,r3,#2
 506 0022 FBD1     	 bne .L47
 507              	.LVL63:
 508              	.LBE61:
 509              	.LBE62:
 510              	.LBB63:
 511              	.LBB64:
 324:../Libraries/XMCLib/src/xmc_can.c **** }
 512              	 .loc 1 324 0
 513 0024 D4F8C821 	 ldr r2,[r4,#456]
 514 0028 22F00F02 	 bic r2,r2,#15
 515 002c 45EA0201 	 orr r1,r5,r2
 516 0030 C4F8C811 	 str r1,[r4,#456]
 517              	.LVL64:
 518              	.LBE64:
 519              	.LBE63:
 520              	.LBB65:
 521              	.LBB66:
 522              	.LBB67:
 523              	.LBB68:
 524              	 .loc 1 329 0
 525 0034 D4F8C821 	 ldr r2,[r4,#456]
 526              	.LBE68:
 527              	.LBE67:
 257:../Libraries/XMCLib/src/xmc_can.c ****   {
 528              	 .loc 1 257 0
 529 0038 02F00F02 	 and r2,r2,#15
 530 003c 012A     	 cmp r2,#1
 531 003e 40D0     	 beq .L49
 532 0040 022A     	 cmp r2,#2
 533 0042 10D1     	 bne .L57
 269:../Libraries/XMCLib/src/xmc_can.c ****          break;
 534              	 .loc 1 269 0
 535 0044 FFF7FEFF 	 bl OSCHP_GetFrequency
 536              	.LVL65:
 537              	.L56:
 538 0048 40F2FF32 	 movw r2,#1023
 539 004c B109     	 lsrs r1,r6,#6
 540 004e 8309     	 lsrs r3,r0,#6
 541 0050 8902     	 lsls r1,r1,#10
 542 0052 B1FBF3F1 	 udiv r1,r1,r3
 543 0056 9142     	 cmp r1,r2
 544 0058 28BF     	 it cs
 545 005a 1146     	 movcs r1,r2
 546 005c 03FB01F3 	 mul r3,r3,r1
 547 0060 9B0A     	 lsrs r3,r3,#10
 548 0062 9B01     	 lsls r3,r3,#6
 549 0064 09E0     	 b .L51
 550              	.LVL66:
 551              	.L57:
 552 0066 40F2FF31 	 movw r1,#1023
 553 006a B209     	 lsrs r2,r6,#6
 554 006c 9202     	 lsls r2,r2,#10
 555 006e B2FBF3F2 	 udiv r2,r2,r3
 257:../Libraries/XMCLib/src/xmc_can.c ****   {
 556              	 .loc 1 257 0
 557 0072 9142     	 cmp r1,r2
 273:../Libraries/XMCLib/src/xmc_can.c ****          break;
 558              	 .loc 1 273 0
 559 0074 1846     	 mov r0,r3
 257:../Libraries/XMCLib/src/xmc_can.c ****   {
 560              	 .loc 1 257 0
 561 0076 28BF     	 it cs
 562 0078 1146     	 movcs r1,r2
 563              	.L51:
 564              	.LVL67:
 565              	.LBE66:
 566              	.LBE65:
 301:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 567              	 .loc 1 301 0
 568 007a B0FBF6F5 	 udiv r5,r0,r6
 569              	.LVL68:
 570 007e C5F58065 	 rsb r5,r5,#1024
 571              	.LVL69:
 572              	.LBB70:
 573              	.LBB71:
  75:../Libraries/XMCLib/src/xmc_can.c **** }
 574              	 .loc 1 75 0
 575 0082 002D     	 cmp r5,#0
 576              	.LBE71:
 577              	.LBE70:
 317:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 578              	 .loc 1 317 0
 579 0084 E768     	 ldr r7,[r4,#12]
 580              	.LBB73:
 581              	.LBB72:
  75:../Libraries/XMCLib/src/xmc_can.c **** }
 582              	 .loc 1 75 0
 583 0086 38BF     	 it cc
 584 0088 0025     	 movcc r5,#0
 585              	.LVL70:
 586              	.LBE72:
 587              	.LBE73:
 588              	.LBB74:
 589              	.LBB75:
  80:../Libraries/XMCLib/src/xmc_can.c **** }
 590              	 .loc 1 80 0
 591 008a 40F2FF32 	 movw r2,#1023
 592 008e 9542     	 cmp r5,r2
 593 0090 28BF     	 it cs
 594 0092 1546     	 movcs r5,r2
 595              	.LVL71:
 596              	.LBE75:
 597              	.LBE74:
 317:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 598              	 .loc 1 317 0
 599 0094 27F44347 	 bic r7,r7,#49920
 302:../Libraries/XMCLib/src/xmc_can.c **** 
 600              	 .loc 1 302 0
 601 0098 C5F58062 	 rsb r2,r5,#1024
 312:../Libraries/XMCLib/src/xmc_can.c **** 
 602              	 .loc 1 312 0
 603 009c F31A     	 subs r3,r6,r3
 604              	.LVL72:
 302:../Libraries/XMCLib/src/xmc_can.c **** 
 605              	 .loc 1 302 0
 606 009e B0FBF2F0 	 udiv r0,r0,r2
 607              	.LVL73:
 317:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 608              	 .loc 1 317 0
 609 00a2 27F0FF07 	 bic r7,r7,#255
 312:../Libraries/XMCLib/src/xmc_can.c **** 
 610              	 .loc 1 312 0
 611 00a6 361A     	 subs r6,r6,r0
 612              	.LVL74:
 314:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 613              	 .loc 1 314 0
 614 00a8 9E42     	 cmp r6,r3
 317:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 615              	 .loc 1 317 0
 616 00aa E760     	 str r7,[r4,#12]
 318:../Libraries/XMCLib/src/xmc_can.c **** 
 617              	 .loc 1 318 0
 618 00ac E368     	 ldr r3,[r4,#12]
 314:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 619              	 .loc 1 314 0
 620 00ae 96BF     	 itet ls
 621 00b0 2946     	 movls r1,r5
 622 00b2 4FF40042 	 movhi r2,#32768
 623 00b6 4FF48042 	 movls r2,#16384
 624 00ba 1143     	 orrs r1,r1,r2
 318:../Libraries/XMCLib/src/xmc_can.c **** 
 625              	 .loc 1 318 0
 626 00bc 1943     	 orrs r1,r1,r3
 627 00be E160     	 str r1,[r4,#12]
 628 00c0 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 629              	.LVL75:
 630              	.L49:
 631              	.LBB76:
 632              	.LBB69:
 261:../Libraries/XMCLib/src/xmc_can.c ****          break;
 633              	 .loc 1 261 0
 634 00c2 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 635              	.LVL76:
 636 00c6 BFE7     	 b .L56
 637              	.L59:
 638              	 .align 2
 639              	.L58:
 640 00c8 10000010 	 .word 268435472
 641              	.LBE69:
 642              	.LBE76:
 643              	 .cfi_endproc
 644              	.LFE222:
 646              	 .section .text.XMC_CAN_SetBaudrateClockSource,"ax",%progbits
 647              	 .align 2
 648              	 .global XMC_CAN_SetBaudrateClockSource
 649              	 .thumb
 650              	 .thumb_func
 652              	XMC_CAN_SetBaudrateClockSource:
 653              	.LFB223:
 323:../Libraries/XMCLib/src/xmc_can.c ****   obj->MCR = (obj->MCR & ~CAN_MCR_CLKSEL_Msk) | source ;
 654              	 .loc 1 323 0
 655              	 .cfi_startproc
 656              	 
 657              	 
 658              	 
 659              	.LVL77:
 324:../Libraries/XMCLib/src/xmc_can.c **** }
 660              	 .loc 1 324 0
 661 0000 D0F8C831 	 ldr r3,[r0,#456]
 662 0004 23F00F03 	 bic r3,r3,#15
 663 0008 1943     	 orrs r1,r1,r3
 664              	.LVL78:
 665 000a C0F8C811 	 str r1,[r0,#456]
 666 000e 7047     	 bx lr
 667              	 .cfi_endproc
 668              	.LFE223:
 670              	 .section .text.XMC_CAN_GetBaudrateClockSource,"ax",%progbits
 671              	 .align 2
 672              	 .global XMC_CAN_GetBaudrateClockSource
 673              	 .thumb
 674              	 .thumb_func
 676              	XMC_CAN_GetBaudrateClockSource:
 677              	.LFB224:
 328:../Libraries/XMCLib/src/xmc_can.c ****   return ((XMC_CAN_CANCLKSRC_t)((obj->MCR & CAN_MCR_CLKSEL_Msk) >> CAN_MCR_CLKSEL_Pos));
 678              	 .loc 1 328 0
 679              	 .cfi_startproc
 680              	 
 681              	 
 682              	 
 683              	.LVL79:
 684              	 .loc 1 329 0
 685 0000 D0F8C801 	 ldr r0,[r0,#456]
 686              	.LVL80:
 330:../Libraries/XMCLib/src/xmc_can.c **** }
 687              	 .loc 1 330 0
 688 0004 00F00F00 	 and r0,r0,#15
 689 0008 7047     	 bx lr
 690              	 .cfi_endproc
 691              	.LFE224:
 693 000a 00BF     	 .section .text.XMC_CAN_MO_SetIdentifier,"ax",%progbits
 694              	 .align 2
 695              	 .global XMC_CAN_MO_SetIdentifier
 696              	 .thumb
 697              	 .thumb_func
 699              	XMC_CAN_MO_SetIdentifier:
 700              	.LFB225:
 331:../Libraries/XMCLib/src/xmc_can.c **** 
 332:../Libraries/XMCLib/src/xmc_can.c **** #else
 333:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN GLOBAL Object */
 334:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency)
 335:../Libraries/XMCLib/src/xmc_can.c **** {
 336:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 337:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 338:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 339:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 340:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 341:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 342:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 343:../Libraries/XMCLib/src/xmc_can.c **** 
 344:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency = (XMC_SCU_CLOCK_GetPeripheralClockFrequency());
 345:../Libraries/XMCLib/src/xmc_can.c **** 
 346:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 347:../Libraries/XMCLib/src/xmc_can.c **** 
 348:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 349:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 350:../Libraries/XMCLib/src/xmc_can.c **** 
 351:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 352:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 353:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 354:../Libraries/XMCLib/src/xmc_can.c **** 
 355:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 356:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 357:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 358:../Libraries/XMCLib/src/xmc_can.c **** 
 359:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 360:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 361:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 362:../Libraries/XMCLib/src/xmc_can.c **** 
 363:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 364:../Libraries/XMCLib/src/xmc_can.c **** 
 365:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 366:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 367:../Libraries/XMCLib/src/xmc_can.c **** 
 368:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 369:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 370:../Libraries/XMCLib/src/xmc_can.c **** }
 371:../Libraries/XMCLib/src/xmc_can.c **** #endif
 372:../Libraries/XMCLib/src/xmc_can.c **** 
 373:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the Identifier of the MO */
 374:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetIdentifier(XMC_CAN_MO_t *const can_mo, const uint32_t can_identifier)
 375:../Libraries/XMCLib/src/xmc_can.c **** {
 701              	 .loc 1 375 0
 702              	 .cfi_startproc
 703              	 
 704              	 
 705              	 
 706              	.LVL81:
 376:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 707              	 .loc 1 376 0
 708 0000 0368     	 ldr r3,[r0]
 709 0002 9A69     	 ldr r2,[r3,#24]
 710 0004 9200     	 lsls r2,r2,#2
 375:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 711              	 .loc 1 375 0
 712 0006 10B4     	 push {r4}
 713              	.LCFI5:
 714              	 .cfi_def_cfa_offset 4
 715              	 .cfi_offset 4,-4
 377:../Libraries/XMCLib/src/xmc_can.c ****   {
 378:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 716              	 .loc 1 378 0
 717 0008 9C69     	 ldr r4,[r3,#24]
 376:../Libraries/XMCLib/src/xmc_can.c ****   {
 718              	 .loc 1 376 0
 719 000a 0CD5     	 bpl .L66
 379:../Libraries/XMCLib/src/xmc_can.c **** 	                           ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR_
 380:../Libraries/XMCLib/src/xmc_can.c ****   }
 381:../Libraries/XMCLib/src/xmc_can.c ****   else
 382:../Libraries/XMCLib/src/xmc_can.c ****   {
 383:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 384:../Libraries/XMCLib/src/xmc_can.c ****     		                   (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 720              	 .loc 1 384 0
 721 000c 21F06042 	 bic r2,r1,#-536870912
 383:../Libraries/XMCLib/src/xmc_can.c ****     		                   (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 722              	 .loc 1 383 0
 723 0010 04F06044 	 and r4,r4,#-536870912
 724 0014 2243     	 orrs r2,r2,r4
 725 0016 9A61     	 str r2,[r3,#24]
 726              	.L64:
 385:../Libraries/XMCLib/src/xmc_can.c ****   }
 386:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_identifier = can_identifier;
 727              	 .loc 1 386 0
 728 0018 4368     	 ldr r3,[r0,#4]
 387:../Libraries/XMCLib/src/xmc_can.c **** }
 729              	 .loc 1 387 0
 730 001a 5DF8044B 	 ldr r4,[sp],#4
 731              	.LCFI6:
 732              	 .cfi_remember_state
 733              	 .cfi_restore 4
 734              	 .cfi_def_cfa_offset 0
 386:../Libraries/XMCLib/src/xmc_can.c **** }
 735              	 .loc 1 386 0
 736 001e 61F31C03 	 bfi r3,r1,#0,#29
 737 0022 4360     	 str r3,[r0,#4]
 738              	 .loc 1 387 0
 739 0024 7047     	 bx lr
 740              	.L66:
 741              	.LCFI7:
 742              	 .cfi_restore_state
 379:../Libraries/XMCLib/src/xmc_can.c ****   }
 743              	 .loc 1 379 0
 744 0026 8A04     	 lsls r2,r1,#18
 378:../Libraries/XMCLib/src/xmc_can.c **** 	                           ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR_
 745              	 .loc 1 378 0
 746 0028 04F06044 	 and r4,r4,#-536870912
 379:../Libraries/XMCLib/src/xmc_can.c ****   }
 747              	 .loc 1 379 0
 748 002c 22F06042 	 bic r2,r2,#-536870912
 378:../Libraries/XMCLib/src/xmc_can.c **** 	                           ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR_
 749              	 .loc 1 378 0
 750 0030 2243     	 orrs r2,r2,r4
 751 0032 9A61     	 str r2,[r3,#24]
 752 0034 F0E7     	 b .L64
 753              	 .cfi_endproc
 754              	.LFE225:
 756 0036 00BF     	 .section .text.XMC_CAN_MO_GetIdentifier,"ax",%progbits
 757              	 .align 2
 758              	 .global XMC_CAN_MO_GetIdentifier
 759              	 .thumb
 760              	 .thumb_func
 762              	XMC_CAN_MO_GetIdentifier:
 763              	.LFB226:
 388:../Libraries/XMCLib/src/xmc_can.c **** 
 389:../Libraries/XMCLib/src/xmc_can.c **** 
 390:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the Identifier of the MO */
 391:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetIdentifier(const XMC_CAN_MO_t *const can_mo)
 392:../Libraries/XMCLib/src/xmc_can.c **** {
 764              	 .loc 1 392 0
 765              	 .cfi_startproc
 766              	 
 767              	 
 768              	 
 769              	.LVL82:
 393:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier;
 394:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 770              	 .loc 1 394 0
 771 0000 0368     	 ldr r3,[r0]
 772 0002 9A69     	 ldr r2,[r3,#24]
 395:../Libraries/XMCLib/src/xmc_can.c ****   {
 396:../Libraries/XMCLib/src/xmc_can.c **** 	identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk)) >> XMC_CAN_MO_MOAR_STDI
 773              	 .loc 1 396 0
 774 0004 9869     	 ldr r0,[r3,#24]
 775              	.LVL83:
 394:../Libraries/XMCLib/src/xmc_can.c ****   {
 776              	 .loc 1 394 0
 777 0006 9300     	 lsls r3,r2,#2
 778              	 .loc 1 396 0
 779 0008 54BF     	 ite pl
 780 000a C0F38A40 	 ubfxpl r0,r0,#18,#11
 781              	.LVL84:
 397:../Libraries/XMCLib/src/xmc_can.c ****   }
 398:../Libraries/XMCLib/src/xmc_can.c ****   else
 399:../Libraries/XMCLib/src/xmc_can.c ****   {
 400:../Libraries/XMCLib/src/xmc_can.c **** 	identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk));
 782              	 .loc 1 400 0
 783 000e 20F06040 	 bicmi r0,r0,#-536870912
 784              	.LVL85:
 401:../Libraries/XMCLib/src/xmc_can.c ****   }
 402:../Libraries/XMCLib/src/xmc_can.c ****   return identifier;
 403:../Libraries/XMCLib/src/xmc_can.c **** }
 785              	 .loc 1 403 0
 786 0012 7047     	 bx lr
 787              	 .cfi_endproc
 788              	.LFE226:
 790              	 .section .text.XMC_CAN_MO_GetAcceptanceMask,"ax",%progbits
 791              	 .align 2
 792              	 .global XMC_CAN_MO_GetAcceptanceMask
 793              	 .thumb
 794              	 .thumb_func
 796              	XMC_CAN_MO_GetAcceptanceMask:
 797              	.LFB227:
 404:../Libraries/XMCLib/src/xmc_can.c **** 
 405:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask for the CAN MO. */
 406:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetAcceptanceMask(const XMC_CAN_MO_t *const can_mo)
 407:../Libraries/XMCLib/src/xmc_can.c **** {
 798              	 .loc 1 407 0
 799              	 .cfi_startproc
 800              	 
 801              	 
 802              	 
 803              	.LVL86:
 408:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier_mask;
 409:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 804              	 .loc 1 409 0
 805 0000 0368     	 ldr r3,[r0]
 806 0002 DA68     	 ldr r2,[r3,#12]
 807 0004 9100     	 lsls r1,r2,#2
 808 0006 02D4     	 bmi .L71
 410:../Libraries/XMCLib/src/xmc_can.c ****             && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 809              	 .loc 1 410 0
 810 0008 9A69     	 ldr r2,[r3,#24]
 811 000a 9200     	 lsls r2,r2,#2
 812 000c 03D5     	 bpl .L73
 813              	.L71:
 411:../Libraries/XMCLib/src/xmc_can.c ****   {
 412:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk)) >> XMC_CAN_MO
 413:../Libraries/XMCLib/src/xmc_can.c ****   }
 414:../Libraries/XMCLib/src/xmc_can.c ****   else
 415:../Libraries/XMCLib/src/xmc_can.c ****   {
 416:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk));
 814              	 .loc 1 416 0
 815 000e D868     	 ldr r0,[r3,#12]
 816              	.LVL87:
 817 0010 20F06040 	 bic r0,r0,#-536870912
 818              	.LVL88:
 417:../Libraries/XMCLib/src/xmc_can.c ****   }
 418:../Libraries/XMCLib/src/xmc_can.c ****   return identifier_mask;
 419:../Libraries/XMCLib/src/xmc_can.c **** }
 819              	 .loc 1 419 0
 820 0014 7047     	 bx lr
 821              	.LVL89:
 822              	.L73:
 412:../Libraries/XMCLib/src/xmc_can.c ****   }
 823              	 .loc 1 412 0
 824 0016 D868     	 ldr r0,[r3,#12]
 825              	.LVL90:
 826 0018 C0F38A40 	 ubfx r0,r0,#18,#11
 827              	.LVL91:
 828 001c 7047     	 bx lr
 829              	 .cfi_endproc
 830              	.LFE227:
 832 001e 00BF     	 .section .text.XMC_CAN_MO_SetAcceptanceMask,"ax",%progbits
 833              	 .align 2
 834              	 .global XMC_CAN_MO_SetAcceptanceMask
 835              	 .thumb
 836              	 .thumb_func
 838              	XMC_CAN_MO_SetAcceptanceMask:
 839              	.LFB228:
 420:../Libraries/XMCLib/src/xmc_can.c **** 
 421:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask of the MO */
 422:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetAcceptanceMask(XMC_CAN_MO_t *const can_mo,const uint32_t can_id_mask)
 423:../Libraries/XMCLib/src/xmc_can.c **** {
 840              	 .loc 1 423 0
 841              	 .cfi_startproc
 842              	 
 843              	 
 844              	 
 845              	.LVL92:
 846 0000 10B4     	 push {r4}
 847              	.LCFI8:
 848              	 .cfi_def_cfa_offset 4
 849              	 .cfi_offset 4,-4
 424:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 850              	 .loc 1 424 0
 851 0002 0468     	 ldr r4,[r0]
 852 0004 E368     	 ldr r3,[r4,#12]
 853 0006 9A00     	 lsls r2,r3,#2
 854 0008 02D4     	 bmi .L75
 425:../Libraries/XMCLib/src/xmc_can.c ****           && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 855              	 .loc 1 425 0
 856 000a A369     	 ldr r3,[r4,#24]
 857 000c 9B00     	 lsls r3,r3,#2
 858 000e 0DD5     	 bpl .L78
 859              	.L75:
 426:../Libraries/XMCLib/src/xmc_can.c ****   {
 427:../Libraries/XMCLib/src/xmc_can.c **** 	can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 428:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 429:../Libraries/XMCLib/src/xmc_can.c ****   }
 430:../Libraries/XMCLib/src/xmc_can.c ****   else
 431:../Libraries/XMCLib/src/xmc_can.c ****   {
 432:../Libraries/XMCLib/src/xmc_can.c **** 	can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 860              	 .loc 1 432 0
 861 0010 E268     	 ldr r2,[r4,#12]
 433:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 862              	 .loc 1 433 0
 863 0012 21F06043 	 bic r3,r1,#-536870912
 432:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 864              	 .loc 1 432 0
 865 0016 02F06042 	 and r2,r2,#-536870912
 866 001a 1343     	 orrs r3,r3,r2
 867 001c E360     	 str r3,[r4,#12]
 868              	.L76:
 434:../Libraries/XMCLib/src/xmc_can.c ****   }
 435:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_id_mask = can_id_mask;
 869              	 .loc 1 435 0
 870 001e 8368     	 ldr r3,[r0,#8]
 436:../Libraries/XMCLib/src/xmc_can.c **** }
 871              	 .loc 1 436 0
 872 0020 5DF8044B 	 ldr r4,[sp],#4
 873              	.LCFI9:
 874              	 .cfi_remember_state
 875              	 .cfi_restore 4
 876              	 .cfi_def_cfa_offset 0
 435:../Libraries/XMCLib/src/xmc_can.c **** }
 877              	 .loc 1 435 0
 878 0024 61F31C03 	 bfi r3,r1,#0,#29
 879 0028 8360     	 str r3,[r0,#8]
 880              	 .loc 1 436 0
 881 002a 7047     	 bx lr
 882              	.L78:
 883              	.LCFI10:
 884              	 .cfi_restore_state
 427:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 885              	 .loc 1 427 0
 886 002c E368     	 ldr r3,[r4,#12]
 887 002e 03F06043 	 and r3,r3,#-536870912
 888 0032 43EA8143 	 orr r3,r3,r1,lsl#18
 889 0036 E360     	 str r3,[r4,#12]
 890 0038 F1E7     	 b .L76
 891              	 .cfi_endproc
 892              	.LFE228:
 894 003a 00BF     	 .section .text.XMC_CAN_MO_Config,"ax",%progbits
 895              	 .align 2
 896              	 .global XMC_CAN_MO_Config
 897              	 .thumb
 898              	 .thumb_func
 900              	XMC_CAN_MO_Config:
 901              	.LFB229:
 437:../Libraries/XMCLib/src/xmc_can.c **** 
 438:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN MO Object */
 439:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo)
 440:../Libraries/XMCLib/src/xmc_can.c **** {
 902              	 .loc 1 440 0
 903              	 .cfi_startproc
 904              	 
 905              	 
 906              	 
 907              	.LVL93:
 441:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t reg;
 442:../Libraries/XMCLib/src/xmc_can.c ****   
 443:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure MPN */
 444:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t num = ((uint32_t)(can_mo->can_mo_ptr) - CAN_BASE - 0x1000U)/0x0020U;
 908              	 .loc 1 444 0
 909 0000 0268     	 ldr r2,[r0]
 445:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num/32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num%32) << CAN_
 446:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 910              	 .loc 1 446 0
 911 0002 9168     	 ldr r1,[r2,#8]
 444:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num/32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num%32) << CAN_
 912              	 .loc 1 444 0
 913 0004 02F13843 	 add r3,r2,#-1207959552
 914              	 .loc 1 446 0
 915 0008 21F47F41 	 bic r1,r1,#65280
 440:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t reg;
 916              	 .loc 1 440 0
 917 000c 10B4     	 push {r4}
 918              	.LCFI11:
 919              	 .cfi_def_cfa_offset 4
 920              	 .cfi_offset 4,-4
 444:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num/32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num%32) << CAN_
 921              	 .loc 1 444 0
 922 000e A3F5A833 	 sub r3,r3,#86016
 923              	.LVL94:
 447:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 448:../Libraries/XMCLib/src/xmc_can.c ****   
 449:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_STANDARD_11BITS) &&
 924              	 .loc 1 449 0
 925 0012 047E     	 ldrb r4,[r0,#24]
 446:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 926              	 .loc 1 446 0
 927 0014 9160     	 str r1,[r2,#8]
 447:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 928              	 .loc 1 447 0
 929 0016 9168     	 ldr r1,[r2,#8]
 445:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 930              	 .loc 1 445 0
 931 0018 DB00     	 lsls r3,r3,#3
 932              	.LVL95:
 933 001a 23F0FF03 	 bic r3,r3,#255
 447:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 934              	 .loc 1 447 0
 935 001e 0B43     	 orrs r3,r3,r1
 936              	 .loc 1 449 0
 937 0020 012C     	 cmp r4,#1
 447:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 938              	 .loc 1 447 0
 939 0022 9360     	 str r3,[r2,#8]
 940              	 .loc 1 449 0
 941 0024 02D9     	 bls .L89
 450:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 451:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 452:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_mo_type != XMC_CAN_MO_TYPE_TRANSMSGOBJ)))
 453:../Libraries/XMCLib/src/xmc_can.c ****   {
 454:../Libraries/XMCLib/src/xmc_can.c ****     ; /*Do nothing*/
 455:../Libraries/XMCLib/src/xmc_can.c ****   }
 456:../Libraries/XMCLib/src/xmc_can.c ****   else
 457:../Libraries/XMCLib/src/xmc_can.c ****   {
 458:../Libraries/XMCLib/src/xmc_can.c **** 
 459:../Libraries/XMCLib/src/xmc_can.c ****     /* Disable Message object */
 460:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 461:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_id_mode == (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS)
 462:../Libraries/XMCLib/src/xmc_can.c ****     {
 463:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_ar;
 464:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAR_ID_Msk);
 465:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_identifier << XMC_CAN_MO_MOAR_STDID_Pos);
 466:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = reg;
 467:../Libraries/XMCLib/src/xmc_can.c **** 
 468:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_amr;
 469:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAMR_AM_Msk);
 470:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 471:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = reg;
 472:../Libraries/XMCLib/src/xmc_can.c ****     }
 473:../Libraries/XMCLib/src/xmc_can.c ****     else
 474:../Libraries/XMCLib/src/xmc_can.c ****     {
 475:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = can_mo->mo_ar;
 476:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = can_mo->mo_amr;
 477:../Libraries/XMCLib/src/xmc_can.c ****     }
 478:../Libraries/XMCLib/src/xmc_can.c ****     /* Check whether message object is transmit message object */
 479:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 480:../Libraries/XMCLib/src/xmc_can.c ****     {
 481:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Transmit message object  */
 482:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_MO_UpdateData(can_mo);
 483:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_SETDIR_Msk;
 484:../Libraries/XMCLib/src/xmc_can.c ****     }
 485:../Libraries/XMCLib/src/xmc_can.c ****     else
 486:../Libraries/XMCLib/src/xmc_can.c ****     {
 487:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Receive message object and set RXEN bit */
 488:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 489:../Libraries/XMCLib/src/xmc_can.c ****     }
 490:../Libraries/XMCLib/src/xmc_can.c **** 
 491:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 492:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk | CAN_MO_MOC
 493:../Libraries/XMCLib/src/xmc_can.c ****                                  CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 494:../Libraries/XMCLib/src/xmc_can.c ****   }
 495:../Libraries/XMCLib/src/xmc_can.c **** }
 942              	 .loc 1 495 0
 943 0026 5DF8044B 	 ldr r4,[sp],#4
 944              	.LCFI12:
 945              	 .cfi_remember_state
 946              	 .cfi_restore 4
 947              	 .cfi_def_cfa_offset 0
 948 002a 7047     	 bx lr
 949              	.L89:
 950              	.LCFI13:
 951              	 .cfi_restore_state
 460:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_id_mode == (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS)
 952              	 .loc 1 460 0
 953 002c 2023     	 movs r3,#32
 954 002e D361     	 str r3,[r2,#28]
 461:../Libraries/XMCLib/src/xmc_can.c ****     {
 955              	 .loc 1 461 0
 956 0030 C379     	 ldrb r3,[r0,#7]
 957 0032 9B06     	 lsls r3,r3,#26
 958 0034 10D5     	 bpl .L90
 475:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = can_mo->mo_amr;
 959              	 .loc 1 475 0
 960 0036 0368     	 ldr r3,[r0]
 961 0038 4268     	 ldr r2,[r0,#4]
 962              	.LVL96:
 963 003a 9A61     	 str r2,[r3,#24]
 476:../Libraries/XMCLib/src/xmc_can.c ****     }
 964              	 .loc 1 476 0
 965 003c 8268     	 ldr r2,[r0,#8]
 966 003e DA60     	 str r2,[r3,#12]
 479:../Libraries/XMCLib/src/xmc_can.c ****     {
 967              	 .loc 1 479 0
 968 0040 027E     	 ldrb r2,[r0,#24]
 969 0042 012A     	 cmp r2,#1
 970 0044 18D0     	 beq .L91
 971              	.L86:
 488:../Libraries/XMCLib/src/xmc_can.c ****     }
 972              	 .loc 1 488 0
 973 0046 4FF40062 	 mov r2,#2048
 974 004a DA61     	 str r2,[r3,#28]
 975              	.L83:
 492:../Libraries/XMCLib/src/xmc_can.c ****                                  CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 976              	 .loc 1 492 0
 977 004c 0368     	 ldr r3,[r0]
 978 004e 164A     	 ldr r2,.L92
 979 0050 DA61     	 str r2,[r3,#28]
 980              	 .loc 1 495 0
 981 0052 5DF8044B 	 ldr r4,[sp],#4
 982              	.LCFI14:
 983              	 .cfi_remember_state
 984              	 .cfi_restore 4
 985              	 .cfi_def_cfa_offset 0
 986 0056 7047     	 bx lr
 987              	.LVL97:
 988              	.L90:
 989              	.LCFI15:
 990              	 .cfi_restore_state
 463:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAR_ID_Msk);
 991              	 .loc 1 463 0
 992 0058 4168     	 ldr r1,[r0,#4]
 993              	.LVL98:
 466:../Libraries/XMCLib/src/xmc_can.c **** 
 994              	 .loc 1 466 0
 995 005a 0368     	 ldr r3,[r0]
 464:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_identifier << XMC_CAN_MO_MOAR_STDID_Pos);
 996              	 .loc 1 464 0
 997 005c 01F06042 	 and r2,r1,#-536870912
 998              	.LVL99:
 465:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = reg;
 999              	 .loc 1 465 0
 1000 0060 42EA8142 	 orr r2,r2,r1,lsl#18
 1001              	.LVL100:
 466:../Libraries/XMCLib/src/xmc_can.c **** 
 1002              	 .loc 1 466 0
 1003 0064 9A61     	 str r2,[r3,#24]
 468:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAMR_AM_Msk);
 1004              	 .loc 1 468 0
 1005 0066 8168     	 ldr r1,[r0,#8]
 1006              	.LVL101:
 469:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1007              	 .loc 1 469 0
 1008 0068 01F06042 	 and r2,r1,#-536870912
 1009              	.LVL102:
 470:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = reg;
 1010              	 .loc 1 470 0
 1011 006c 42EA8142 	 orr r2,r2,r1,lsl#18
 1012              	.LVL103:
 471:../Libraries/XMCLib/src/xmc_can.c ****     }
 1013              	 .loc 1 471 0
 1014 0070 DA60     	 str r2,[r3,#12]
 479:../Libraries/XMCLib/src/xmc_can.c ****     {
 1015              	 .loc 1 479 0
 1016 0072 027E     	 ldrb r2,[r0,#24]
 1017              	.LVL104:
 1018 0074 012A     	 cmp r2,#1
 1019 0076 E6D1     	 bne .L86
 1020              	.LVL105:
 1021              	.L91:
 1022              	.LBB81:
 1023              	.LBB82:
 1024              	.LBB83:
 1025              	.LBB84:
 496:../Libraries/XMCLib/src/xmc_can.c **** 
 497:../Libraries/XMCLib/src/xmc_can.c **** /* Update of XMC_CAN Object */
 498:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo)
 499:../Libraries/XMCLib/src/xmc_can.c **** {
 500:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 501:../Libraries/XMCLib/src/xmc_can.c ****   /* Check whether message object is transmit message object */
 502:../Libraries/XMCLib/src/xmc_can.c ****   if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 503:../Libraries/XMCLib/src/xmc_can.c ****   {
 504:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1026              	 .loc 1 504 0
 1027 0078 2022     	 movs r2,#32
 1028 007a DA61     	 str r2,[r3,#28]
 505:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 506:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR) & ~(uint32_t)(CAN_MO_MOFCR_DLC_Msk)) |
 1029              	 .loc 1 506 0
 1030 007c 0368     	 ldr r3,[r0]
 507:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1031              	 .loc 1 507 0
 1032 007e 017B     	 ldrb r1,[r0,#12]
 506:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1033              	 .loc 1 506 0
 1034 0080 1A68     	 ldr r2,[r3]
 508:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 509:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAL = can_mo->can_data[0];
 510:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 511:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 512:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETNEWDAT_Msk| CAN_MO_MOCTR_SETMSGVAL_Msk |CAN_MO_MOC
 1035              	 .loc 1 512 0
 1036 0082 0A4C     	 ldr r4,.L92+4
 507:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 1037              	 .loc 1 507 0
 1038 0084 0906     	 lsls r1,r1,#24
 506:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1039              	 .loc 1 506 0
 1040 0086 22F07062 	 bic r2,r2,#251658240
 507:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 1041              	 .loc 1 507 0
 1042 008a 01F07061 	 and r1,r1,#251658240
 506:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1043              	 .loc 1 506 0
 1044 008e 0A43     	 orrs r2,r2,r1
 1045 0090 1A60     	 str r2,[r3]
 509:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 1046              	 .loc 1 509 0
 1047 0092 0269     	 ldr r2,[r0,#16]
 1048 0094 1A61     	 str r2,[r3,#16]
 510:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 1049              	 .loc 1 510 0
 1050 0096 4269     	 ldr r2,[r0,#20]
 1051 0098 5A61     	 str r2,[r3,#20]
 1052              	 .loc 1 512 0
 1053 009a DC61     	 str r4,[r3,#28]
 1054              	.LVL106:
 1055              	.LBE84:
 1056              	.LBE83:
 1057              	.LBE82:
 1058              	.LBE81:
 483:../Libraries/XMCLib/src/xmc_can.c ****     }
 1059              	 .loc 1 483 0
 1060 009c 0368     	 ldr r3,[r0]
 1061 009e 4FF00062 	 mov r2,#134217728
 1062 00a2 DA61     	 str r2,[r3,#28]
 1063 00a4 D2E7     	 b .L83
 1064              	.L93:
 1065 00a6 00BF     	 .align 2
 1066              	.L92:
 1067 00a8 4000A006 	 .word 111149120
 1068 00ac 40002800 	 .word 2621504
 1069              	 .cfi_endproc
 1070              	.LFE229:
 1072              	 .section .text.XMC_CAN_MO_UpdateData,"ax",%progbits
 1073              	 .align 2
 1074              	 .global XMC_CAN_MO_UpdateData
 1075              	 .thumb
 1076              	 .thumb_func
 1078              	XMC_CAN_MO_UpdateData:
 1079              	.LFB230:
 499:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1080              	 .loc 1 499 0
 1081              	 .cfi_startproc
 1082              	 
 1083              	 
 1084              	 
 1085              	.LVL107:
 502:../Libraries/XMCLib/src/xmc_can.c ****   {
 1086              	 .loc 1 502 0
 1087 0000 037E     	 ldrb r3,[r0,#24]
 1088 0002 012B     	 cmp r3,#1
 1089 0004 01D0     	 beq .L99
 513:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 514:../Libraries/XMCLib/src/xmc_can.c ****   }
 515:../Libraries/XMCLib/src/xmc_can.c ****   else
 516:../Libraries/XMCLib/src/xmc_can.c ****   {
 517:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1090              	 .loc 1 517 0
 1091 0006 0320     	 movs r0,#3
 1092              	.LVL108:
 1093 0008 7047     	 bx lr
 1094              	.LVL109:
 1095              	.L99:
 499:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1096              	 .loc 1 499 0
 1097 000a 10B4     	 push {r4}
 1098              	.LCFI16:
 1099              	 .cfi_def_cfa_offset 4
 1100              	 .cfi_offset 4,-4
 1101              	.LBB87:
 1102              	.LBB88:
 504:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 1103              	 .loc 1 504 0
 1104 000c 0368     	 ldr r3,[r0]
 512:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1105              	 .loc 1 512 0
 1106 000e 0B4C     	 ldr r4,.L100
 504:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 1107              	 .loc 1 504 0
 1108 0010 2022     	 movs r2,#32
 1109 0012 DA61     	 str r2,[r3,#28]
 506:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1110              	 .loc 1 506 0
 1111 0014 0368     	 ldr r3,[r0]
 507:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 1112              	 .loc 1 507 0
 1113 0016 027B     	 ldrb r2,[r0,#12]
 506:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1114              	 .loc 1 506 0
 1115 0018 1968     	 ldr r1,[r3]
 507:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 1116              	 .loc 1 507 0
 1117 001a 1206     	 lsls r2,r2,#24
 506:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1118              	 .loc 1 506 0
 1119 001c 21F07061 	 bic r1,r1,#251658240
 507:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 1120              	 .loc 1 507 0
 1121 0020 02F07062 	 and r2,r2,#251658240
 506:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1122              	 .loc 1 506 0
 1123 0024 0A43     	 orrs r2,r2,r1
 1124 0026 1A60     	 str r2,[r3]
 509:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 1125              	 .loc 1 509 0
 1126 0028 0269     	 ldr r2,[r0,#16]
 1127 002a 1A61     	 str r2,[r3,#16]
 510:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 1128              	 .loc 1 510 0
 1129 002c 4269     	 ldr r2,[r0,#20]
 1130 002e 5A61     	 str r2,[r3,#20]
 512:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1131              	 .loc 1 512 0
 1132 0030 DC61     	 str r4,[r3,#28]
 1133              	.LVL110:
 1134 0032 0020     	 movs r0,#0
 1135              	.LVL111:
 1136              	.LBE88:
 1137              	.LBE87:
 518:../Libraries/XMCLib/src/xmc_can.c ****   }
 519:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 520:../Libraries/XMCLib/src/xmc_can.c **** }
 1138              	 .loc 1 520 0
 1139 0034 5DF8044B 	 ldr r4,[sp],#4
 1140              	.LCFI17:
 1141              	 .cfi_restore 4
 1142              	 .cfi_def_cfa_offset 0
 1143 0038 7047     	 bx lr
 1144              	.L101:
 1145 003a 00BF     	 .align 2
 1146              	.L100:
 1147 003c 40002800 	 .word 2621504
 1148              	 .cfi_endproc
 1149              	.LFE230:
 1151              	 .section .text.XMC_CAN_MO_Transmit,"ax",%progbits
 1152              	 .align 2
 1153              	 .global XMC_CAN_MO_Transmit
 1154              	 .thumb
 1155              	 .thumb_func
 1157              	XMC_CAN_MO_Transmit:
 1158              	.LFB231:
 521:../Libraries/XMCLib/src/xmc_can.c **** 
 522:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will put a transmit request to transmit message object */
 523:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo)
 524:../Libraries/XMCLib/src/xmc_can.c **** {
 1159              	 .loc 1 524 0
 1160              	 .cfi_startproc
 1161              	 
 1162              	 
 1163              	 
 1164              	.LVL112:
 525:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 526:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)(((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 1165              	 .loc 1 526 0
 1166 0000 0368     	 ldr r3,[r0]
 1167 0002 DA69     	 ldr r2,[r3,#28]
 1168              	.LVL113:
 527:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t) ((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_
 1169              	 .loc 1 527 0
 1170 0004 D969     	 ldr r1,[r3,#28]
 1171              	.LVL114:
 528:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 529:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 1172              	 .loc 1 529 0
 1173 0006 9006     	 lsls r0,r2,#26
 1174              	.LVL115:
 1175 0008 01D4     	 bmi .L106
 530:../Libraries/XMCLib/src/xmc_can.c ****   {
 531:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 1176              	 .loc 1 531 0
 1177 000a 0420     	 movs r0,#4
 1178 000c 7047     	 bx lr
 1179              	.L106:
 532:../Libraries/XMCLib/src/xmc_can.c ****   }
 533:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 534:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 1180              	 .loc 1 534 0
 1181 000e CA05     	 lsls r2,r1,#23
 1182              	.LVL116:
 1183 0010 04D4     	 bmi .L105
 535:../Libraries/XMCLib/src/xmc_can.c ****   {
 536:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 537:../Libraries/XMCLib/src/xmc_can.c ****   }
 538:../Libraries/XMCLib/src/xmc_can.c ****   else
 539:../Libraries/XMCLib/src/xmc_can.c ****   {
 540:../Libraries/XMCLib/src/xmc_can.c ****     /* set TXRQ bit */
 541:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr-> MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCT
 1184              	 .loc 1 541 0
 1185 0012 4FF0E062 	 mov r2,#117440512
 1186 0016 DA61     	 str r2,[r3,#28]
 1187              	.LVL117:
 542:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1188              	 .loc 1 542 0
 1189 0018 0020     	 movs r0,#0
 1190 001a 7047     	 bx lr
 1191              	.LVL118:
 1192              	.L105:
 536:../Libraries/XMCLib/src/xmc_can.c ****   }
 1193              	 .loc 1 536 0
 1194 001c 0220     	 movs r0,#2
 1195              	.LVL119:
 543:../Libraries/XMCLib/src/xmc_can.c ****   }
 544:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 545:../Libraries/XMCLib/src/xmc_can.c **** }
 1196              	 .loc 1 545 0
 1197 001e 7047     	 bx lr
 1198              	 .cfi_endproc
 1199              	.LFE231:
 1201              	 .section .text.XMC_CAN_MO_ReceiveData,"ax",%progbits
 1202              	 .align 2
 1203              	 .global XMC_CAN_MO_ReceiveData
 1204              	 .thumb
 1205              	 .thumb_func
 1207              	XMC_CAN_MO_ReceiveData:
 1208              	.LFB232:
 546:../Libraries/XMCLib/src/xmc_can.c **** 
 547:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 548:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo)
 549:../Libraries/XMCLib/src/xmc_can.c **** {
 1209              	 .loc 1 549 0
 1210              	 .cfi_startproc
 1211              	 
 1212              	 
 1213              	 
 1214              	.LVL120:
 550:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 551:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 552:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 553:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 1215              	 .loc 1 553 0
 1216 0000 0368     	 ldr r3,[r0]
 1217 0002 DA69     	 ldr r2,[r3,#28]
 1218              	.LVL121:
 554:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 1219              	 .loc 1 554 0
 1220 0004 D969     	 ldr r1,[r3,#28]
 1221              	.LVL122:
 555:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 556:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 1222              	 .loc 1 556 0
 1223 0006 1205     	 lsls r2,r2,#20
 1224              	.LVL123:
 1225 0008 01D5     	 bpl .L115
 557:../Libraries/XMCLib/src/xmc_can.c ****   {
 558:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1226              	 .loc 1 558 0
 1227 000a 0320     	 movs r0,#3
 1228              	.LVL124:
 1229 000c 7047     	 bx lr
 1230              	.LVL125:
 1231              	.L115:
 559:../Libraries/XMCLib/src/xmc_can.c ****   }
 560:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 561:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 1232              	 .loc 1 561 0
 1233 000e 4A07     	 lsls r2,r1,#29
 1234 0010 02D5     	 bpl .L113
 562:../Libraries/XMCLib/src/xmc_can.c ****   {
 563:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 1235              	 .loc 1 563 0
 1236 0012 0220     	 movs r0,#2
 1237              	.LVL126:
 1238 0014 7047     	 bx lr
 1239              	.LVL127:
 1240              	.L117:
 564:../Libraries/XMCLib/src/xmc_can.c ****   }
 565:../Libraries/XMCLib/src/xmc_can.c ****   else
 566:../Libraries/XMCLib/src/xmc_can.c ****   {
 567:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 568:../Libraries/XMCLib/src/xmc_can.c ****     do
 569:../Libraries/XMCLib/src/xmc_can.c ****     {
 570:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 571:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 572:../Libraries/XMCLib/src/xmc_can.c **** 
 573:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 574:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 575:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 1241              	 .loc 1 575 0 discriminator 1
 1242 0016 69B1     	 cbz r1,.L116
 1243              	.LVL128:
 1244              	.L113:
 570:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 1245              	 .loc 1 570 0 discriminator 2
 1246 0018 1A69     	 ldr r2,[r3,#16]
 1247 001a 0261     	 str r2,[r0,#16]
 571:../Libraries/XMCLib/src/xmc_can.c **** 
 1248              	 .loc 1 571 0 discriminator 2
 1249 001c 5A69     	 ldr r2,[r3,#20]
 1250 001e 4261     	 str r2,[r0,#20]
 573:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 1251              	 .loc 1 573 0 discriminator 2
 1252 0020 DA69     	 ldr r2,[r3,#28]
 1253              	.LVL129:
 574:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 1254              	 .loc 1 574 0 discriminator 2
 1255 0022 D969     	 ldr r1,[r3,#28]
 573:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 1256              	 .loc 1 573 0 discriminator 2
 1257 0024 C2F38002 	 ubfx r2,r2,#2,#1
 1258              	.LVL130:
 574:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 1259              	 .loc 1 574 0 discriminator 2
 1260 0028 C1F3C001 	 ubfx r1,r1,#3,#1
 1261              	.LVL131:
 1262              	 .loc 1 575 0 discriminator 2
 1263 002c 002A     	 cmp r2,#0
 1264 002e F2D1     	 bne .L117
 576:../Libraries/XMCLib/src/xmc_can.c **** 
 577:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1265              	 .loc 1 577 0
 1266 0030 1046     	 mov r0,r2
 1267              	.LVL132:
 578:../Libraries/XMCLib/src/xmc_can.c ****   }
 579:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 580:../Libraries/XMCLib/src/xmc_can.c **** }
 1268              	 .loc 1 580 0
 1269 0032 7047     	 bx lr
 1270              	.LVL133:
 1271              	.L116:
 577:../Libraries/XMCLib/src/xmc_can.c ****   }
 1272              	 .loc 1 577 0
 1273 0034 0846     	 mov r0,r1
 1274              	.LVL134:
 1275 0036 7047     	 bx lr
 1276              	 .cfi_endproc
 1277              	.LFE232:
 1279              	 .section .text.XMC_CAN_MO_Receive,"ax",%progbits
 1280              	 .align 2
 1281              	 .global XMC_CAN_MO_Receive
 1282              	 .thumb
 1283              	 .thumb_func
 1285              	XMC_CAN_MO_Receive:
 1286              	.LFB233:
 581:../Libraries/XMCLib/src/xmc_can.c **** 
 582:../Libraries/XMCLib/src/xmc_can.c **** 
 583:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 584:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive (XMC_CAN_MO_t *can_mo)
 585:../Libraries/XMCLib/src/xmc_can.c **** {
 1287              	 .loc 1 585 0
 1288              	 .cfi_startproc
 1289              	 
 1290              	 
 1291              	 
 1292              	.LVL135:
 586:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 587:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 588:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 589:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 1293              	 .loc 1 589 0
 1294 0000 0368     	 ldr r3,[r0]
 1295 0002 DA69     	 ldr r2,[r3,#28]
 1296              	.LVL136:
 590:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 1297              	 .loc 1 590 0
 1298 0004 D969     	 ldr r1,[r3,#28]
 1299              	.LVL137:
 591:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 592:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 1300              	 .loc 1 592 0
 1301 0006 1205     	 lsls r2,r2,#20
 1302              	.LVL138:
 1303 0008 01D5     	 bpl .L133
 593:../Libraries/XMCLib/src/xmc_can.c ****   {
 594:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1304              	 .loc 1 594 0
 1305 000a 0320     	 movs r0,#3
 1306              	.LVL139:
 1307 000c 7047     	 bx lr
 1308              	.LVL140:
 1309              	.L133:
 595:../Libraries/XMCLib/src/xmc_can.c ****   }
 596:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 597:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 1310              	 .loc 1 597 0
 1311 000e 4A07     	 lsls r2,r1,#29
 1312 0010 49D4     	 bmi .L126
 585:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 1313              	 .loc 1 585 0
 1314 0012 30B4     	 push {r4,r5}
 1315              	.LCFI18:
 1316              	 .cfi_def_cfa_offset 8
 1317              	 .cfi_offset 4,-8
 1318              	 .cfi_offset 5,-4
 598:../Libraries/XMCLib/src/xmc_can.c ****   {
 599:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 600:../Libraries/XMCLib/src/xmc_can.c ****   }
 601:../Libraries/XMCLib/src/xmc_can.c ****   else
 602:../Libraries/XMCLib/src/xmc_can.c ****   {
 603:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 604:../Libraries/XMCLib/src/xmc_can.c ****     do
 605:../Libraries/XMCLib/src/xmc_can.c ****     {
 606:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 1319              	 .loc 1 606 0
 1320 0014 0824     	 movs r4,#8
 1321 0016 29E0     	 b .L124
 1322              	.LVL141:
 1323              	.L134:
 607:../Libraries/XMCLib/src/xmc_can.c ****       if ((((can_mo->can_mo_ptr->MOAR) & CAN_MO_MOAR_IDE_Msk) >> CAN_MO_MOAR_IDE_Pos) == 0U)
 608:../Libraries/XMCLib/src/xmc_can.c ****       {
 609:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS;
 1324              	 .loc 1 609 0
 1325 0018 C579     	 ldrb r5,[r0,#7]
 610:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & XMC_CAN_MO_MOAR_STDID_Msk) >> XMC_CAN_
 611:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 1326              	 .loc 1 611 0
 1327 001a C17A     	 ldrb r1,[r0,#11]
 609:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & XMC_CAN_MO_MOAR_STDID_Msk) >> XMC_CAN_
 1328              	 .loc 1 609 0
 1329 001c 62F34515 	 bfi r5,r2,#5,#1
 1330 0020 C571     	 strb r5,[r0,#7]
 610:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & XMC_CAN_MO_MOAR_STDID_Msk) >> XMC_CAN_
 1331              	 .loc 1 610 0
 1332 0022 9A69     	 ldr r2,[r3,#24]
 1333 0024 4568     	 ldr r5,[r0,#4]
 1334 0026 C2F38A42 	 ubfx r2,r2,#18,#11
 1335 002a 62F31C05 	 bfi r5,r2,#0,#29
 1336 002e 4560     	 str r5,[r0,#4]
 1337              	 .loc 1 611 0
 1338 0030 DA68     	 ldr r2,[r3,#12]
 1339 0032 C2F34072 	 ubfx r2,r2,#29,#1
 1340 0036 62F34511 	 bfi r1,r2,#5,#1
 612:../Libraries/XMCLib/src/xmc_can.c ****         if(can_mo->can_ide_mask == 1U)
 1341              	 .loc 1 612 0
 1342 003a 8D06     	 lsls r5,r1,#26
 611:../Libraries/XMCLib/src/xmc_can.c ****         if(can_mo->can_ide_mask == 1U)
 1343              	 .loc 1 611 0
 1344 003c C172     	 strb r1,[r0,#11]
 1345              	 .loc 1 612 0
 1346 003e 34D5     	 bpl .L121
 613:../Libraries/XMCLib/src/xmc_can.c ****         {
 614:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & XMC_CAN_MO_MOAR_STDID_Msk) >
 1347              	 .loc 1 614 0
 1348 0040 DA68     	 ldr r2,[r3,#12]
 1349 0042 8168     	 ldr r1,[r0,#8]
 1350 0044 C2F38A42 	 ubfx r2,r2,#18,#11
 1351 0048 62F31C01 	 bfi r1,r2,#0,#29
 1352 004c 8160     	 str r1,[r0,#8]
 1353              	.L122:
 615:../Libraries/XMCLib/src/xmc_can.c ****         }
 616:../Libraries/XMCLib/src/xmc_can.c ****         else
 617:../Libraries/XMCLib/src/xmc_can.c ****         {
 618:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 619:../Libraries/XMCLib/src/xmc_can.c ****         }
 620:../Libraries/XMCLib/src/xmc_can.c ****       }
 621:../Libraries/XMCLib/src/xmc_can.c ****       else
 622:../Libraries/XMCLib/src/xmc_can.c ****       {
 623:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_EXTENDED_29BITS;
 624:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_ID_Msk);
 625:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 626:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 627:../Libraries/XMCLib/src/xmc_can.c ****       }
 628:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data_length = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOFCR) & CAN_MO_MOFCR_DLC
 1354              	 .loc 1 628 0
 1355 004e 1A68     	 ldr r2,[r3]
 1356 0050 C2F30362 	 ubfx r2,r2,#24,#4
 1357 0054 0273     	 strb r2,[r0,#12]
 629:../Libraries/XMCLib/src/xmc_can.c **** 
 630:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 1358              	 .loc 1 630 0
 1359 0056 1A69     	 ldr r2,[r3,#16]
 1360 0058 0261     	 str r2,[r0,#16]
 631:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 1361              	 .loc 1 631 0
 1362 005a 5A69     	 ldr r2,[r3,#20]
 1363 005c 4261     	 str r2,[r0,#20]
 632:../Libraries/XMCLib/src/xmc_can.c **** 
 633:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 1364              	 .loc 1 633 0
 1365 005e D969     	 ldr r1,[r3,#28]
 1366              	.LVL142:
 634:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 1367              	 .loc 1 634 0
 1368 0060 DA69     	 ldr r2,[r3,#28]
 635:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 1369              	 .loc 1 635 0
 1370 0062 4907     	 lsls r1,r1,#29
 1371              	.LVL143:
 634:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 1372              	 .loc 1 634 0
 1373 0064 C2F3C002 	 ubfx r2,r2,#3,#1
 1374              	.LVL144:
 1375              	 .loc 1 635 0
 1376 0068 25D5     	 bpl .L123
 1377              	 .loc 1 635 0 is_stmt 0 discriminator 1
 1378 006a 22B3     	 cbz r2,.L123
 1379              	.LVL145:
 1380              	.L124:
 606:../Libraries/XMCLib/src/xmc_can.c ****       if ((((can_mo->can_mo_ptr->MOAR) & CAN_MO_MOAR_IDE_Msk) >> CAN_MO_MOAR_IDE_Pos) == 0U)
 1381              	 .loc 1 606 0 is_stmt 1
 1382 006c DC61     	 str r4,[r3,#28]
 607:../Libraries/XMCLib/src/xmc_can.c ****       {
 1383              	 .loc 1 607 0
 1384 006e 0368     	 ldr r3,[r0]
 1385 0070 9A69     	 ldr r2,[r3,#24]
 1386 0072 C2F34072 	 ubfx r2,r2,#29,#1
 1387 0076 002A     	 cmp r2,#0
 1388 0078 CED0     	 beq .L134
 623:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_ID_Msk);
 1389              	 .loc 1 623 0
 1390 007a C279     	 ldrb r2,[r0,#7]
 625:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 1391              	 .loc 1 625 0
 1392 007c 8168     	 ldr r1,[r0,#8]
 623:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_ID_Msk);
 1393              	 .loc 1 623 0
 1394 007e 42F02002 	 orr r2,r2,#32
 1395 0082 C271     	 strb r2,[r0,#7]
 624:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 1396              	 .loc 1 624 0
 1397 0084 9D69     	 ldr r5,[r3,#24]
 1398 0086 4268     	 ldr r2,[r0,#4]
 1399 0088 65F31C02 	 bfi r2,r5,#0,#29
 1400 008c 4260     	 str r2,[r0,#4]
 625:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 1401              	 .loc 1 625 0
 1402 008e DA68     	 ldr r2,[r3,#12]
 1403 0090 62F31C01 	 bfi r1,r2,#0,#29
 1404 0094 8160     	 str r1,[r0,#8]
 626:../Libraries/XMCLib/src/xmc_can.c ****       }
 1405              	 .loc 1 626 0
 1406 0096 DA68     	 ldr r2,[r3,#12]
 1407 0098 C17A     	 ldrb r1,[r0,#11]
 1408 009a C2F34072 	 ubfx r2,r2,#29,#1
 1409 009e 62F34511 	 bfi r1,r2,#5,#1
 1410 00a2 C172     	 strb r1,[r0,#11]
 1411 00a4 D3E7     	 b .L122
 1412              	.LVL146:
 1413              	.L126:
 1414              	.LCFI19:
 1415              	 .cfi_def_cfa_offset 0
 1416              	 .cfi_restore 4
 1417              	 .cfi_restore 5
 599:../Libraries/XMCLib/src/xmc_can.c ****   }
 1418              	 .loc 1 599 0
 1419 00a6 0220     	 movs r0,#2
 1420              	.LVL147:
 1421 00a8 7047     	 bx lr
 1422              	.LVL148:
 1423              	.L121:
 1424              	.LCFI20:
 1425              	 .cfi_def_cfa_offset 8
 1426              	 .cfi_offset 4,-8
 1427              	 .cfi_offset 5,-4
 618:../Libraries/XMCLib/src/xmc_can.c ****         }
 1428              	 .loc 1 618 0
 1429 00aa D968     	 ldr r1,[r3,#12]
 1430 00ac 8268     	 ldr r2,[r0,#8]
 1431 00ae 61F31C02 	 bfi r2,r1,#0,#29
 1432 00b2 8260     	 str r2,[r0,#8]
 1433 00b4 CBE7     	 b .L122
 1434              	.LVL149:
 1435              	.L123:
 636:../Libraries/XMCLib/src/xmc_can.c **** 
 637:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_type = XMC_CAN_MO_TYPE_RECMSGOBJ;
 1436              	 .loc 1 637 0
 1437 00b6 0023     	 movs r3,#0
 1438 00b8 0376     	 strb r3,[r0,#24]
 1439              	.LVL150:
 638:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 639:../Libraries/XMCLib/src/xmc_can.c ****   }
 640:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 641:../Libraries/XMCLib/src/xmc_can.c **** }
 1440              	 .loc 1 641 0
 1441 00ba 30BC     	 pop {r4,r5}
 1442              	.LCFI21:
 1443              	 .cfi_restore 5
 1444              	 .cfi_restore 4
 1445              	 .cfi_def_cfa_offset 0
 638:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1446              	 .loc 1 638 0
 1447 00bc 1846     	 mov r0,r3
 1448              	.LVL151:
 1449              	 .loc 1 641 0
 1450 00be 7047     	 bx lr
 1451              	 .cfi_endproc
 1452              	.LFE233:
 1454              	 .section .text.XMC_CAN_NODE_EnableEvent,"ax",%progbits
 1455              	 .align 2
 1456              	 .global XMC_CAN_NODE_EnableEvent
 1457              	 .thumb
 1458              	 .thumb_func
 1460              	XMC_CAN_NODE_EnableEvent:
 1461              	.LFB234:
 642:../Libraries/XMCLib/src/xmc_can.c **** 
 643:../Libraries/XMCLib/src/xmc_can.c **** /* Function to enable node event */
 644:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 645:../Libraries/XMCLib/src/xmc_can.c **** {
 1462              	 .loc 1 645 0
 1463              	 .cfi_startproc
 1464              	 
 1465              	 
 1466              	 
 1467              	.LVL152:
 646:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 1468              	 .loc 1 646 0
 1469 0000 B1F5800F 	 cmp r1,#4194304
 1470 0004 03D0     	 beq .L136
 647:../Libraries/XMCLib/src/xmc_can.c ****   {
 648:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR |= (uint32_t)event;
 1471              	 .loc 1 648 0
 1472 0006 0368     	 ldr r3,[r0]
 1473 0008 1943     	 orrs r1,r1,r3
 1474              	.LVL153:
 1475 000a 0160     	 str r1,[r0]
 1476 000c 7047     	 bx lr
 1477              	.LVL154:
 1478              	.L136:
 649:../Libraries/XMCLib/src/xmc_can.c ****   }
 650:../Libraries/XMCLib/src/xmc_can.c ****   else
 651:../Libraries/XMCLib/src/xmc_can.c ****   {
 652:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR |= (uint32_t)event;
 1479              	 .loc 1 652 0
 1480 000e 8369     	 ldr r3,[r0,#24]
 1481 0010 43F48003 	 orr r3,r3,#4194304
 1482 0014 8361     	 str r3,[r0,#24]
 1483 0016 7047     	 bx lr
 1484              	 .cfi_endproc
 1485              	.LFE234:
 1487              	 .section .text.XMC_CAN_NODE_DisableEvent,"ax",%progbits
 1488              	 .align 2
 1489              	 .global XMC_CAN_NODE_DisableEvent
 1490              	 .thumb
 1491              	 .thumb_func
 1493              	XMC_CAN_NODE_DisableEvent:
 1494              	.LFB235:
 653:../Libraries/XMCLib/src/xmc_can.c ****   }
 654:../Libraries/XMCLib/src/xmc_can.c **** }
 655:../Libraries/XMCLib/src/xmc_can.c **** 
 656:../Libraries/XMCLib/src/xmc_can.c **** /* Function to disable node event */
 657:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 658:../Libraries/XMCLib/src/xmc_can.c **** {
 1495              	 .loc 1 658 0
 1496              	 .cfi_startproc
 1497              	 
 1498              	 
 1499              	 
 1500              	.LVL155:
 659:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 1501              	 .loc 1 659 0
 1502 0000 B1F5800F 	 cmp r1,#4194304
 1503 0004 04D0     	 beq .L139
 660:../Libraries/XMCLib/src/xmc_can.c ****   {
 661:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR &= ~(uint32_t)event;
 1504              	 .loc 1 661 0
 1505 0006 0368     	 ldr r3,[r0]
 1506 0008 23EA0101 	 bic r1,r3,r1
 1507              	.LVL156:
 1508 000c 0160     	 str r1,[r0]
 1509 000e 7047     	 bx lr
 1510              	.LVL157:
 1511              	.L139:
 662:../Libraries/XMCLib/src/xmc_can.c ****   }
 663:../Libraries/XMCLib/src/xmc_can.c ****   else
 664:../Libraries/XMCLib/src/xmc_can.c ****   {
 665:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR &= ~(uint32_t)event;
 1512              	 .loc 1 665 0
 1513 0010 8369     	 ldr r3,[r0,#24]
 1514 0012 23F48003 	 bic r3,r3,#4194304
 1515 0016 8361     	 str r3,[r0,#24]
 1516 0018 7047     	 bx lr
 1517              	 .cfi_endproc
 1518              	.LFE235:
 1520 001a 00BF     	 .section .text.XMC_CAN_TXFIFO_Transmit,"ax",%progbits
 1521              	 .align 2
 1522              	 .global XMC_CAN_TXFIFO_Transmit
 1523              	 .thumb
 1524              	 .thumb_func
 1526              	XMC_CAN_TXFIFO_Transmit:
 1527              	.LFB236:
 666:../Libraries/XMCLib/src/xmc_can.c ****   }
 667:../Libraries/XMCLib/src/xmc_can.c **** }
 668:../Libraries/XMCLib/src/xmc_can.c **** /* Function to transmit MO from the FIFO */
 669:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_TXFIFO_Transmit(const XMC_CAN_MO_t *const can_mo)
 670:../Libraries/XMCLib/src/xmc_can.c **** {
 1528              	 .loc 1 670 0
 1529              	 .cfi_startproc
 1530              	 
 1531              	 
 1532              	 
 1533              	.LVL158:
 671:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 672:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = ((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 1534              	 .loc 1 672 0
 1535 0000 0368     	 ldr r3,[r0]
 1536 0002 DA69     	 ldr r2,[r3,#28]
 1537              	.LVL159:
 673:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_M
 1538              	 .loc 1 673 0
 1539 0004 D969     	 ldr r1,[r3,#28]
 1540              	.LVL160:
 674:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_cur =  (uint32_t)(can_mo->can_mo_ptr-> MOFGPR & CAN_MO_MOFGPR_CUR_Msk) >> CAN_MO_MOFG
 1541              	 .loc 1 674 0
 1542 0006 5B68     	 ldr r3,[r3,#4]
 1543              	.LVL161:
 675:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef*  mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 676:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 677:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 1544              	 .loc 1 677 0
 1545 0008 9006     	 lsls r0,r2,#26
 1546              	.LVL162:
 1547 000a 01D4     	 bmi .L145
 678:../Libraries/XMCLib/src/xmc_can.c ****   {
 679:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 1548              	 .loc 1 679 0
 1549 000c 0420     	 movs r0,#4
 1550 000e 7047     	 bx lr
 1551              	.L145:
 680:../Libraries/XMCLib/src/xmc_can.c ****   }
 681:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 682:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 1552              	 .loc 1 682 0
 1553 0010 CA05     	 lsls r2,r1,#23
 1554              	.LVL163:
 1555 0012 0BD4     	 bmi .L144
 674:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef*  mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 1556              	 .loc 1 674 0
 1557 0014 C3F30743 	 ubfx r3,r3,#16,#8
 1558              	.LVL164:
 675:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 1559              	 .loc 1 675 0
 1560 0018 03F11073 	 add r3,r3,#37748736
 1561 001c 03F52863 	 add r3,r3,#2688
 1562 0020 5B01     	 lsls r3,r3,#5
 683:../Libraries/XMCLib/src/xmc_can.c ****   {
 684:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 685:../Libraries/XMCLib/src/xmc_can.c ****   }
 686:../Libraries/XMCLib/src/xmc_can.c ****   else
 687:../Libraries/XMCLib/src/xmc_can.c ****   {
 688:../Libraries/XMCLib/src/xmc_can.c ****     mo->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk;
 1563              	 .loc 1 688 0
 1564 0022 4FF0E062 	 mov r2,#117440512
 1565 0026 DA61     	 str r2,[r3,#28]
 1566              	.LVL165:
 689:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1567              	 .loc 1 689 0
 1568 0028 0020     	 movs r0,#0
 1569 002a 7047     	 bx lr
 1570              	.LVL166:
 1571              	.L144:
 684:../Libraries/XMCLib/src/xmc_can.c ****   }
 1572              	 .loc 1 684 0
 1573 002c 0220     	 movs r0,#2
 1574              	.LVL167:
 690:../Libraries/XMCLib/src/xmc_can.c ****   }
 691:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 692:../Libraries/XMCLib/src/xmc_can.c **** }
 1575              	 .loc 1 692 0
 1576 002e 7047     	 bx lr
 1577              	 .cfi_endproc
 1578              	.LFE236:
 1580              	 .section .text.XMC_CAN_TXFIFO_ConfigMOBaseObject,"ax",%progbits
 1581              	 .align 2
 1582              	 .global XMC_CAN_TXFIFO_ConfigMOBaseObject
 1583              	 .thumb
 1584              	 .thumb_func
 1586              	XMC_CAN_TXFIFO_ConfigMOBaseObject:
 1587              	.LFB237:
 693:../Libraries/XMCLib/src/xmc_can.c **** 
 694:../Libraries/XMCLib/src/xmc_can.c **** /* Function to initialize the transmit FIFO MO base object */
 695:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 696:../Libraries/XMCLib/src/xmc_can.c **** {
 1588              	 .loc 1 696 0
 1589              	 .cfi_startproc
 1590              	 
 1591              	 
 1592              	 
 1593              	.LVL168:
 1594 0000 30B4     	 push {r4,r5}
 1595              	.LCFI22:
 1596              	 .cfi_def_cfa_offset 8
 1597              	 .cfi_offset 4,-8
 1598              	 .cfi_offset 5,-4
 1599 0002 82B0     	 sub sp,sp,#8
 1600              	.LCFI23:
 1601              	 .cfi_def_cfa_offset 16
 697:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 1602              	 .loc 1 697 0
 1603 0004 0068     	 ldr r0,[r0]
 1604              	.LVL169:
 696:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 1605              	 .loc 1 696 0
 1606 0006 0191     	 str r1,[sp,#4]
 1607              	 .loc 1 697 0
 1608 0008 0168     	 ldr r1,[r0]
 698:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x2U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 699:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_BOT_Msk |
 700:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 701:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 702:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 1609              	 .loc 1 702 0
 1610 000a 9DF80450 	 ldrb r5,[sp,#4]
 703:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 704:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 1611              	 .loc 1 704 0
 1612 000e 9DF80530 	 ldrb r3,[sp,#5]
 703:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 1613              	 .loc 1 703 0
 1614 0012 9DF80640 	 ldrb r4,[sp,#6]
 697:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x2U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 1615              	 .loc 1 697 0
 1616 0016 21F00F01 	 bic r1,r1,#15
 1617 001a 41F00201 	 orr r1,r1,#2
 1618 001e 0160     	 str r1,[r0]
 699:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 1619              	 .loc 1 699 0
 1620 0020 4268     	 ldr r2,[r0,#4]
 1621 0022 02F07F42 	 and r2,r2,#-16777216
 1622 0026 2A43     	 orrs r2,r2,r5
 1623 0028 42EA0323 	 orr r3,r2,r3,lsl#8
 703:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 1624              	 .loc 1 703 0
 1625 002c 43EA0443 	 orr r3,r3,r4,lsl#16
 699:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 1626              	 .loc 1 699 0
 1627 0030 4360     	 str r3,[r0,#4]
 705:../Libraries/XMCLib/src/xmc_can.c **** }
 1628              	 .loc 1 705 0
 1629 0032 02B0     	 add sp,sp,#8
 1630              	.LCFI24:
 1631              	 .cfi_def_cfa_offset 8
 1632              	 
 1633 0034 30BC     	 pop {r4,r5}
 1634              	.LCFI25:
 1635              	 .cfi_restore 5
 1636              	 .cfi_restore 4
 1637              	 .cfi_def_cfa_offset 0
 1638 0036 7047     	 bx lr
 1639              	 .cfi_endproc
 1640              	.LFE237:
 1642              	 .section .text.XMC_CAN_RXFIFO_ConfigMOBaseObject,"ax",%progbits
 1643              	 .align 2
 1644              	 .global XMC_CAN_RXFIFO_ConfigMOBaseObject
 1645              	 .thumb
 1646              	 .thumb_func
 1648              	XMC_CAN_RXFIFO_ConfigMOBaseObject:
 1649              	.LFB238:
 706:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the receive FIFO MO base object */
 707:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_RXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 708:../Libraries/XMCLib/src/xmc_can.c **** {
 1650              	 .loc 1 708 0
 1651              	 .cfi_startproc
 1652              	 
 1653              	 
 1654              	 
 1655              	.LVL170:
 1656 0000 30B4     	 push {r4,r5}
 1657              	.LCFI26:
 1658              	 .cfi_def_cfa_offset 8
 1659              	 .cfi_offset 4,-8
 1660              	 .cfi_offset 5,-4
 1661 0002 82B0     	 sub sp,sp,#8
 1662              	.LCFI27:
 1663              	 .cfi_def_cfa_offset 16
 709:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 1664              	 .loc 1 709 0
 1665 0004 0068     	 ldr r0,[r0]
 1666              	.LVL171:
 708:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 1667              	 .loc 1 708 0
 1668 0006 0191     	 str r1,[sp,#4]
 1669              	 .loc 1 709 0
 1670 0008 0168     	 ldr r1,[r0]
 710:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x1U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 711:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~( uint32_t)(CAN_MO_MOFGPR_BOT_Msk 
 712:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 713:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 714:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 1671              	 .loc 1 714 0
 1672 000a 9DF80450 	 ldrb r5,[sp,#4]
 715:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 716:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 1673              	 .loc 1 716 0
 1674 000e 9DF80530 	 ldrb r3,[sp,#5]
 715:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 1675              	 .loc 1 715 0
 1676 0012 9DF80640 	 ldrb r4,[sp,#6]
 709:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x1U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 1677              	 .loc 1 709 0
 1678 0016 21F00F01 	 bic r1,r1,#15
 1679 001a 41F00101 	 orr r1,r1,#1
 1680 001e 0160     	 str r1,[r0]
 711:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 1681              	 .loc 1 711 0
 1682 0020 4268     	 ldr r2,[r0,#4]
 1683 0022 02F07F42 	 and r2,r2,#-16777216
 1684 0026 2A43     	 orrs r2,r2,r5
 1685 0028 42EA0323 	 orr r3,r2,r3,lsl#8
 715:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 1686              	 .loc 1 715 0
 1687 002c 43EA0443 	 orr r3,r3,r4,lsl#16
 711:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 1688              	 .loc 1 711 0
 1689 0030 4360     	 str r3,[r0,#4]
 717:../Libraries/XMCLib/src/xmc_can.c **** }
 1690              	 .loc 1 717 0
 1691 0032 02B0     	 add sp,sp,#8
 1692              	.LCFI28:
 1693              	 .cfi_def_cfa_offset 8
 1694              	 
 1695 0034 30BC     	 pop {r4,r5}
 1696              	.LCFI29:
 1697              	 .cfi_restore 5
 1698              	 .cfi_restore 4
 1699              	 .cfi_def_cfa_offset 0
 1700 0036 7047     	 bx lr
 1701              	 .cfi_endproc
 1702              	.LFE238:
 1704              	 .section .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject,"ax",%progbits
 1705              	 .align 2
 1706              	 .global XMC_CAN_TXFIFO_ConfigMOSlaveObject
 1707              	 .thumb
 1708              	 .thumb_func
 1710              	XMC_CAN_TXFIFO_ConfigMOSlaveObject:
 1711              	.LFB239:
 718:../Libraries/XMCLib/src/xmc_can.c **** 
 719:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the FIFO MO slave object */
 720:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOSlaveObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_
 721:../Libraries/XMCLib/src/xmc_can.c **** {
 1712              	 .loc 1 721 0
 1713              	 .cfi_startproc
 1714              	 
 1715              	 
 1716              	 
 1717              	.LVL172:
 1718 0000 10B4     	 push {r4}
 1719              	.LCFI30:
 1720              	 .cfi_def_cfa_offset 4
 1721              	 .cfi_offset 4,-4
 1722 0002 83B0     	 sub sp,sp,#12
 1723              	.LCFI31:
 1724              	 .cfi_def_cfa_offset 16
 722:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 1725              	 .loc 1 722 0
 1726 0004 0368     	 ldr r3,[r0]
 721:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 1727              	 .loc 1 721 0
 1728 0006 0191     	 str r1,[sp,#4]
 1729              	 .loc 1 722 0
 1730 0008 1968     	 ldr r1,[r3]
 723:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x3U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 724:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_CUR_Msk))
 725:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 1731              	 .loc 1 725 0
 1732 000a 9DF80640 	 ldrb r4,[sp,#6]
 726:../Libraries/XMCLib/src/xmc_can.c **** 
 727:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOCTR  = CAN_MO_MOCTR_SETTXEN0_Msk|
 1733              	 .loc 1 727 0
 1734 000e 0848     	 ldr r0,.L152
 1735              	.LVL173:
 722:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x3U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 1736              	 .loc 1 722 0
 1737 0010 21F00F01 	 bic r1,r1,#15
 1738 0014 41F00301 	 orr r1,r1,#3
 1739 0018 1960     	 str r1,[r3]
 724:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 1740              	 .loc 1 724 0
 1741 001a 5A68     	 ldr r2,[r3,#4]
 1742 001c 22F47F02 	 bic r2,r2,#16711680
 1743 0020 42EA0442 	 orr r2,r2,r4,lsl#16
 1744 0024 5A60     	 str r2,[r3,#4]
 1745              	 .loc 1 727 0
 1746 0026 D861     	 str r0,[r3,#28]
 728:../Libraries/XMCLib/src/xmc_can.c ****                                CAN_MO_MOCTR_RESTXEN1_Msk;
 729:../Libraries/XMCLib/src/xmc_can.c **** }
 1747              	 .loc 1 729 0
 1748 0028 03B0     	 add sp,sp,#12
 1749              	.LCFI32:
 1750              	 .cfi_def_cfa_offset 4
 1751              	 
 1752 002a 5DF8044B 	 ldr r4,[sp],#4
 1753              	.LCFI33:
 1754              	 .cfi_restore 4
 1755              	 .cfi_def_cfa_offset 0
 1756 002e 7047     	 bx lr
 1757              	.L153:
 1758              	 .align 2
 1759              	.L152:
 1760 0030 00040002 	 .word 33555456
 1761              	 .cfi_endproc
 1762              	.LFE239:
 1764              	 .section .text.XMC_CAN_GATEWAY_InitSourceObject,"ax",%progbits
 1765              	 .align 2
 1766              	 .global XMC_CAN_GATEWAY_InitSourceObject
 1767              	 .thumb
 1768              	 .thumb_func
 1770              	XMC_CAN_GATEWAY_InitSourceObject:
 1771              	.LFB240:
 730:../Libraries/XMCLib/src/xmc_can.c **** 
 731:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the Gateway Source Object */
 732:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_GATEWAY_InitSourceObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_GATEWAY_CONFIG
 733:../Libraries/XMCLib/src/xmc_can.c **** {
 1772              	 .loc 1 733 0
 1773              	 .cfi_startproc
 1774              	 
 1775              	 
 1776              	 
 1777              	.LVL174:
 1778 0000 F0B4     	 push {r4,r5,r6,r7}
 1779              	.LCFI34:
 1780              	 .cfi_def_cfa_offset 16
 1781              	 .cfi_offset 4,-16
 1782              	 .cfi_offset 5,-12
 1783              	 .cfi_offset 6,-8
 1784              	 .cfi_offset 7,-4
 1785 0002 82B0     	 sub sp,sp,#8
 1786              	.LCFI35:
 1787              	 .cfi_def_cfa_offset 24
 1788              	 .loc 1 733 0
 1789 0004 02AB     	 add r3,sp,#8
 1790 0006 03E90600 	 stmdb r3,{r1,r2}
 734:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = (((uint32_t)0x4U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 735:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 1791              	 .loc 1 735 0
 1792 000a 9DF80370 	 ldrb r7,[sp,#3]
 736:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 1793              	 .loc 1 736 0
 1794 000e 9DF80530 	 ldrb r3,[sp,#5]
 737:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 1795              	 .loc 1 737 0
 1796 0012 9DF80410 	 ldrb r1,[sp,#4]
 738:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 1797              	 .loc 1 738 0
 1798 0016 9DF80620 	 ldrb r2,[sp,#6]
 739:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 740:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR_Pos) & (ui
 741:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_Pos) & (uin
 1799              	 .loc 1 741 0
 1800 001a 9DF80160 	 ldrb r6,[sp,#1]
 739:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 1801              	 .loc 1 739 0
 1802 001e 9DF80040 	 ldrb r4,[sp]
 740:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_Pos) & (uin
 1803              	 .loc 1 740 0
 1804 0022 9DF80250 	 ldrb r5,[sp,#2]
 734:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 1805              	 .loc 1 734 0
 1806 0026 0068     	 ldr r0,[r0]
 1807              	.LVL175:
 735:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 1808              	 .loc 1 735 0
 1809 0028 3F02     	 lsls r7,r7,#8
 736:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 1810              	 .loc 1 736 0
 1811 002a 9B02     	 lsls r3,r3,#10
 735:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 1812              	 .loc 1 735 0
 1813 002c 07F48077 	 and r7,r7,#256
 736:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 1814              	 .loc 1 736 0
 1815 0030 03F48063 	 and r3,r3,#1024
 735:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 1816              	 .loc 1 735 0
 1817 0034 3B43     	 orrs r3,r3,r7
 737:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 1818              	 .loc 1 737 0
 1819 0036 4902     	 lsls r1,r1,#9
 1820 0038 01F40071 	 and r1,r1,#512
 1821 003c 43F00403 	 orr r3,r3,#4
 738:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 1822              	 .loc 1 738 0
 1823 0040 D202     	 lsls r2,r2,#11
 1824 0042 0B43     	 orrs r3,r3,r1
 1825 0044 02F40062 	 and r2,r2,#2048
 1826 0048 44EA0624 	 orr r4,r4,r6,lsl#8
 737:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 1827              	 .loc 1 737 0
 1828 004c 1343     	 orrs r3,r3,r2
 739:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR_Pos) & (ui
 1829              	 .loc 1 739 0
 1830 004e 44EA0545 	 orr r5,r4,r5,lsl#16
 734:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 1831              	 .loc 1 734 0
 1832 0052 0360     	 str r3,[r0]
 739:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR_Pos) & (ui
 1833              	 .loc 1 739 0
 1834 0054 4560     	 str r5,[r0,#4]
 742:../Libraries/XMCLib/src/xmc_can.c **** }
 1835              	 .loc 1 742 0
 1836 0056 02B0     	 add sp,sp,#8
 1837              	.LCFI36:
 1838              	 .cfi_def_cfa_offset 16
 1839              	 
 1840 0058 F0BC     	 pop {r4,r5,r6,r7}
 1841              	.LCFI37:
 1842              	 .cfi_restore 7
 1843              	 .cfi_restore 6
 1844              	 .cfi_restore 5
 1845              	 .cfi_restore 4
 1846              	 .cfi_def_cfa_offset 0
 1847 005a 7047     	 bx lr
 1848              	 .cfi_endproc
 1849              	.LFE240:
 1851              	 .text
 1852              	.Letext0:
 1853              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1854              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1855              	 .file 5 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1856              	 .file 6 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc4_scu.h"
 1857              	 .file 7 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Include/core_cm4.h"
 1858              	 .file 8 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 1859              	 .file 9 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_scu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_can.c
    {standard input}:20     .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 $t
    {standard input}:25     .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 XMC_CAN_NODE_NominalBitTimeConfigure
    {standard input}:264    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000104 $d
    {standard input}:270    .text.XMC_CAN_AllocateMOtoNodeList:00000000 $t
    {standard input}:275    .text.XMC_CAN_AllocateMOtoNodeList:00000000 XMC_CAN_AllocateMOtoNodeList
    {standard input}:319    .text.XMC_CAN_Disable:00000000 $t
    {standard input}:324    .text.XMC_CAN_Disable:00000000 XMC_CAN_Disable
    {standard input}:360    .text.XMC_CAN_Disable:00000018 $d
    {standard input}:365    .text.XMC_CAN_Enable:00000000 $t
    {standard input}:370    .text.XMC_CAN_Enable:00000000 XMC_CAN_Enable
    {standard input}:408    .text.XMC_CAN_Enable:00000020 $d
    {standard input}:413    .text.XMC_CAN_GetBaudrateClockFrequency:00000000 $t
    {standard input}:418    .text.XMC_CAN_GetBaudrateClockFrequency:00000000 XMC_CAN_GetBaudrateClockFrequency
    {standard input}:455    .text.XMC_CAN_Init:00000000 $t
    {standard input}:460    .text.XMC_CAN_Init:00000000 XMC_CAN_Init
    {standard input}:640    .text.XMC_CAN_Init:000000c8 $d
    {standard input}:647    .text.XMC_CAN_SetBaudrateClockSource:00000000 $t
    {standard input}:652    .text.XMC_CAN_SetBaudrateClockSource:00000000 XMC_CAN_SetBaudrateClockSource
    {standard input}:671    .text.XMC_CAN_GetBaudrateClockSource:00000000 $t
    {standard input}:676    .text.XMC_CAN_GetBaudrateClockSource:00000000 XMC_CAN_GetBaudrateClockSource
    {standard input}:694    .text.XMC_CAN_MO_SetIdentifier:00000000 $t
    {standard input}:699    .text.XMC_CAN_MO_SetIdentifier:00000000 XMC_CAN_MO_SetIdentifier
    {standard input}:757    .text.XMC_CAN_MO_GetIdentifier:00000000 $t
    {standard input}:762    .text.XMC_CAN_MO_GetIdentifier:00000000 XMC_CAN_MO_GetIdentifier
    {standard input}:791    .text.XMC_CAN_MO_GetAcceptanceMask:00000000 $t
    {standard input}:796    .text.XMC_CAN_MO_GetAcceptanceMask:00000000 XMC_CAN_MO_GetAcceptanceMask
    {standard input}:833    .text.XMC_CAN_MO_SetAcceptanceMask:00000000 $t
    {standard input}:838    .text.XMC_CAN_MO_SetAcceptanceMask:00000000 XMC_CAN_MO_SetAcceptanceMask
    {standard input}:895    .text.XMC_CAN_MO_Config:00000000 $t
    {standard input}:900    .text.XMC_CAN_MO_Config:00000000 XMC_CAN_MO_Config
    {standard input}:1067   .text.XMC_CAN_MO_Config:000000a8 $d
    {standard input}:1073   .text.XMC_CAN_MO_UpdateData:00000000 $t
    {standard input}:1078   .text.XMC_CAN_MO_UpdateData:00000000 XMC_CAN_MO_UpdateData
    {standard input}:1147   .text.XMC_CAN_MO_UpdateData:0000003c $d
    {standard input}:1152   .text.XMC_CAN_MO_Transmit:00000000 $t
    {standard input}:1157   .text.XMC_CAN_MO_Transmit:00000000 XMC_CAN_MO_Transmit
    {standard input}:1202   .text.XMC_CAN_MO_ReceiveData:00000000 $t
    {standard input}:1207   .text.XMC_CAN_MO_ReceiveData:00000000 XMC_CAN_MO_ReceiveData
    {standard input}:1280   .text.XMC_CAN_MO_Receive:00000000 $t
    {standard input}:1285   .text.XMC_CAN_MO_Receive:00000000 XMC_CAN_MO_Receive
    {standard input}:1455   .text.XMC_CAN_NODE_EnableEvent:00000000 $t
    {standard input}:1460   .text.XMC_CAN_NODE_EnableEvent:00000000 XMC_CAN_NODE_EnableEvent
    {standard input}:1488   .text.XMC_CAN_NODE_DisableEvent:00000000 $t
    {standard input}:1493   .text.XMC_CAN_NODE_DisableEvent:00000000 XMC_CAN_NODE_DisableEvent
    {standard input}:1521   .text.XMC_CAN_TXFIFO_Transmit:00000000 $t
    {standard input}:1526   .text.XMC_CAN_TXFIFO_Transmit:00000000 XMC_CAN_TXFIFO_Transmit
    {standard input}:1581   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:1586   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_TXFIFO_ConfigMOBaseObject
    {standard input}:1643   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:1648   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_RXFIFO_ConfigMOBaseObject
    {standard input}:1705   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 $t
    {standard input}:1710   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 XMC_CAN_TXFIFO_ConfigMOSlaveObject
    {standard input}:1760   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000030 $d
    {standard input}:1765   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 $t
    {standard input}:1770   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 XMC_CAN_GATEWAY_InitSourceObject
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
OSCHP_GetFrequency
XMC_SCU_CLOCK_GetPeripheralClockFrequency
