   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usbd.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USBD_GetCapabilities,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_USBD_GetCapabilities
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_USBD_GetCapabilities:
  26              	.LFB186:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_usbd.c"
   1:../Libraries/XMCLib/src/xmc_usbd.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbd.c ****  * @file xmc_usbd.c
   3:../Libraries/XMCLib/src/xmc_usbd.c ****  * @date 2015-06-20
   4:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbd.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbd.c ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbd.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbd.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usbd.c ****  * Redistribution and use in source and binary forms, with or without           
  13:../Libraries/XMCLib/src/xmc_usbd.c ****  * modification,are permitted provided that the following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions of source code must retain the above copyright notice,      
  16:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer in the documentation    
  20:../Libraries/XMCLib/src/xmc_usbd.c ****  *   and/or other materials provided with the distribution.                       
  21:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  22:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:../Libraries/XMCLib/src/xmc_usbd.c ****  *   may be used to endorse or promote products derived from this software without
  24:../Libraries/XMCLib/src/xmc_usbd.c ****  *   specific prior written permission.                                           
  25:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  26:../Libraries/XMCLib/src/xmc_usbd.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:../Libraries/XMCLib/src/xmc_usbd.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:../Libraries/XMCLib/src/xmc_usbd.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:../Libraries/XMCLib/src/xmc_usbd.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:../Libraries/XMCLib/src/xmc_usbd.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:../Libraries/XMCLib/src/xmc_usbd.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:../Libraries/XMCLib/src/xmc_usbd.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  38:../Libraries/XMCLib/src/xmc_usbd.c ****  * To improve the quality of the software, users are encouraged to share        
  39:../Libraries/XMCLib/src/xmc_usbd.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:../Libraries/XMCLib/src/xmc_usbd.c ****  * dave@infineon.com).                                                          
  41:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
  42:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  43:../Libraries/XMCLib/src/xmc_usbd.c ****  * Change History
  44:../Libraries/XMCLib/src/xmc_usbd.c ****  * --------------
  45:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  46:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-02-16:
  47:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Initial Version.<br>           
  48:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-03-18:
  49:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointStall() to fix issue on USB clear stall. <br>
  50:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointConfigure() to fix issue in EP0 configuration.<br>
  51:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IRQHandler()(Removed the DAVE_CE check on SOF event).<br>
  52:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-06-20:
  53:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Removed GetDriverVersion API.<br>
  54:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IsEnumDone() API.<br>
  55:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the copy right in the file header.<br>
  56:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_Disable() API to gate the clock after programming the SCU registers.<
  57:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  58:../Libraries/XMCLib/src/xmc_usbd.c ****  * @endcond 
  59:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  60:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  61:../Libraries/XMCLib/src/xmc_usbd.c **** 
  62:../Libraries/XMCLib/src/xmc_usbd.c **** 
  63:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  64:../Libraries/XMCLib/src/xmc_usbd.c ****  * HEADER FILES
  65:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  66:../Libraries/XMCLib/src/xmc_usbd.c **** #include <xmc_usbd.h>
  67:../Libraries/XMCLib/src/xmc_usbd.c **** 
  68:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(USB0)
  69:../Libraries/XMCLib/src/xmc_usbd.c **** 	
  70:../Libraries/XMCLib/src/xmc_usbd.c **** /**< macro to check the maximum number of endpoints used*/
  71:../Libraries/XMCLib/src/xmc_usbd.c **** #define XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(usbd_max_num_eps) \
  72:../Libraries/XMCLib/src/xmc_usbd.c ****   ((usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_1 ) || \
  73:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_2 ) || \
  74:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_3 ) || \
  75:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_4 ) || \
  76:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_5 ) || \
  77:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_6 ) || \
  78:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps == XMC_USBD_MAX_NUM_EPS_7 ))
  79:../Libraries/XMCLib/src/xmc_usbd.c **** 
  80:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  81:../Libraries/XMCLib/src/xmc_usbd.c ****  *GLOBAL DATA
  82:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  83:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  84:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo Size
  85:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  86:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_OUT_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  87:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  88:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo Size
  89:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  90:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_IN_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  91:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  92:../Libraries/XMCLib/src/xmc_usbd.c ****  * Device definition
  93:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  94:../Libraries/XMCLib/src/xmc_usbd.c ****  XMC_USBD_DEVICE_t xmc_device;
  95:../Libraries/XMCLib/src/xmc_usbd.c **** #ifdef __GNUC__															  /*GCC*/
  96:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  97:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
  98:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  99:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section("U
 100:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 101:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 102:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 103:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section("US
 104:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 105:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__ICCARM__)
 106:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 107:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 108:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 109:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 110:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] @ ".dram";
 111:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 112:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 113:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 114:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 115:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_IN_BUFFER[7][256] @ ".dram";
 116:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 117:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__CC_ARM)
 118:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 119:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 120:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 121:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section ("
 122:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 123:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 124:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 125:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section ("R
 126:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 127:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_t *usbd_init;
 128:../Libraries/XMCLib/src/xmc_usbd.c **** 
 129:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 130:../Libraries/XMCLib/src/xmc_usbd.c ****  *LOCAL ROUTINES
 131:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 132:../Libraries/XMCLib/src/xmc_usbd.c **** /*Local routines prototypes*/
 133:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj);
 134:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count);
 135:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *ep);
 136:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num);
 137:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void);
 138:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void);
 139:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep);
 140:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep);
 141:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void);
 142:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj);
 143:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void);
 144:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj);
 145:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr);
 146:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj);
 147:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void);
 148:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event);
 149:../Libraries/XMCLib/src/xmc_usbd.c **** 
 150:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 151:../Libraries/XMCLib/src/xmc_usbd.c ****  *  The device driver
 152:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 153:../Libraries/XMCLib/src/xmc_usbd.c **** const XMC_USBD_DRIVER_t Driver_USBD0 =
 154:../Libraries/XMCLib/src/xmc_usbd.c **** {
 155:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetCapabilities = XMC_USBD_GetCapabilities,
 156:../Libraries/XMCLib/src/xmc_usbd.c ****   .Initialize = XMC_USBD_Init,
 157:../Libraries/XMCLib/src/xmc_usbd.c ****   .Uninitialize = XMC_USBD_Uninitialize,
 158:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceConnect = XMC_USBD_DeviceConnect,
 159:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceDisconnect = XMC_USBD_DeviceDisconnect,
 160:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceGetState = XMC_USBD_DeviceGetState,
 161:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceSetAddress = XMC_USBD_DeviceSetAddress,
 162:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointConfigure = XMC_USBD_EndpointConfigure,
 163:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointUnconfigure = XMC_USBD_EndpointUnconfigure,
 164:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointStall = XMC_USBD_EndpointStall,
 165:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointReadStart = XMC_USBD_EndpointReadStart,
 166:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointRead = XMC_USBD_EndpointRead,
 167:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointWrite = XMC_USBD_EndpointWrite,
 168:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointAbort = XMC_USBD_EndpointAbort,
 169:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetFrameNumber = XMC_USBD_GetFrameNumber,
 170:../Libraries/XMCLib/src/xmc_usbd.c ****   .IsEnumDone = XMC_USBD_IsEnumDone
 171:../Libraries/XMCLib/src/xmc_usbd.c **** };
 172:../Libraries/XMCLib/src/xmc_usbd.c **** 
 173:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 174:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Checks if device is active
 175:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 176:../Libraries/XMCLib/src/xmc_usbd.c ****  * Therefore the endpoint inInUse flag are checked and if one endpoint is in use, 1 is returned,
 177:../Libraries/XMCLib/src/xmc_usbd.c ****  * else 0 is returned.
 178:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return 1 if an endpoint is active else 0
 179:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 180:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj) 
 181:../Libraries/XMCLib/src/xmc_usbd.c **** {
 182:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 183:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     if (xmc_device.ep[i].inInUse || xmc_device.ep[i].outInUse)
 187:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 188:../Libraries/XMCLib/src/xmc_usbd.c ****       result = 1U;
 189:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 190:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 191:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 192:../Libraries/XMCLib/src/xmc_usbd.c **** }
 193:../Libraries/XMCLib/src/xmc_usbd.c **** 
 194:../Libraries/XMCLib/src/xmc_usbd.c **** 
 195:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 196:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Read data from the rx fifo
 197:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 198:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the fifo is copied in to the buffer specified by @ref xfer_buffer and
 199:../Libraries/XMCLib/src/xmc_usbd.c ****  * the transfer values get updated. If the endpoint is disabled or the buffer not existent
 200:../Libraries/XMCLib/src/xmc_usbd.c ****  * the function exits.
 201:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 202:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg ep_num the endpoint to read for
 203:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg byte_count the byte count to read
 204:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 205:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count) 
 206:../Libraries/XMCLib/src/xmc_usbd.c **** {
 207:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num];
 208:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 209:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_data;
 210:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_word_count;
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo = xmc_device.fifo[0U];
 212:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 213:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.endpoint_out_register[ep_num]->doepctl;
 215:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 216:../Libraries/XMCLib/src/xmc_usbd.c ****   temp_word_count = (word_count << 2U);
 217:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
 218:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!data.b.usbactep)
 219:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 220:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 221:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 222:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->xferBuffer == NULL)
 223:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 224:../Libraries/XMCLib/src/xmc_usbd.c **** 	/*Do Nothing*/
 225:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 226:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 227:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 228:../Libraries/XMCLib/src/xmc_usbd.c ****     /* store the data */
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U;i < word_count; i++)
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 231:../Libraries/XMCLib/src/xmc_usbd.c ****       *(((uint32_t*)ep->xferBuffer)+i) = *fifo;
 232:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 233:../Libraries/XMCLib/src/xmc_usbd.c ****     /* space is not devidable by 4 */
 234:../Libraries/XMCLib/src/xmc_usbd.c ****     if (byte_count!=temp_word_count)
 235:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 236:../Libraries/XMCLib/src/xmc_usbd.c ****       temp_data = *fifo;
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 239:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->xferBuffer[(word_count << 2)+i] = (uint8_t)((temp_data & ((uint32_t)0xFFU << (i * 8U)))
 240:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 241:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 242:../Libraries/XMCLib/src/xmc_usbd.c **** 
 243:../Libraries/XMCLib/src/xmc_usbd.c ****     /* save the amount of data */
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount += byte_count;
 245:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 246:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 247:../Libraries/XMCLib/src/xmc_usbd.c **** }
 248:../Libraries/XMCLib/src/xmc_usbd.c **** 
 249:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 250:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Write data to an endpoint fifo
 251:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 252:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the @ref xfer_buffer gets copied in to the tx fifo of the endpoint until the buffe
 253:../Libraries/XMCLib/src/xmc_usbd.c ****  *completely or the tx fifo is full. The transfer values are not updated.
 254:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 255:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg[in] ep the endpoint to use
 256:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return the number of bytes written to the fifo
 257:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 258:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *const ep) 
 259:../Libraries/XMCLib/src/xmc_usbd.c **** {
 260:../Libraries/XMCLib/src/xmc_usbd.c ****   dtxfsts_data_t freeSpace; 
 261:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo;
 262:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t byte_count;
 263:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 264:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t result;
 265:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   fifo = xmc_device.fifo[ep->address_u.address_st.number]; /* fifo */
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 268:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   byte_count = ep->xferLength - ep->xferCount;
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 271:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 272:../Libraries/XMCLib/src/xmc_usbd.c ****     result = 0U;
 273:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 274:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 275:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 276:../Libraries/XMCLib/src/xmc_usbd.c ****     /* add the unaligned bytes to the word count to compare with the fifo space */
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     word_count = ((uint32_t)byte_count + 3U) >> 2U;
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 279:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 280:../Libraries/XMCLib/src/xmc_usbd.c ****       word_count = (uint32_t)freeSpace.b.txfspcavail;
 281:../Libraries/XMCLib/src/xmc_usbd.c ****       byte_count = (uint32_t)word_count << (uint32_t)2U;
 282:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 283:../Libraries/XMCLib/src/xmc_usbd.c **** 
 284:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data dword wise */
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count;ep->xferBuffer+= 4U)
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 287:../Libraries/XMCLib/src/xmc_usbd.c ****       *fifo = *(uint32_t*)ep->xferBuffer;
 288:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 289:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 290:../Libraries/XMCLib/src/xmc_usbd.c ****     result=byte_count;
 291:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 292:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 293:../Libraries/XMCLib/src/xmc_usbd.c **** }
 294:../Libraries/XMCLib/src/xmc_usbd.c **** 
 295:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 296:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush a tx fifo
 297:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 298:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_num Fifo number to flush
 299:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 300:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note Use 0x10 as parameter to flush all tx fifos.
 301:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 302:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num) 
 303:../Libraries/XMCLib/src/xmc_usbd.c **** {
 304:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 305:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 307:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 308:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfflsh = 1U;
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 310:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 311:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U;count < 1000U; count++){}
 312:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 313:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 314:../Libraries/XMCLib/src/xmc_usbd.c ****    data.d32 = xmc_device.global_register->grstctl;
 315:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.txfflsh);
 316:../Libraries/XMCLib/src/xmc_usbd.c ****     count = 0U;
 317:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 318:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 319:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 320:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 321:../Libraries/XMCLib/src/xmc_usbd.c **** }
 322:../Libraries/XMCLib/src/xmc_usbd.c **** 
 323:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 324:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush the rx fifo
 325:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 326:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void) 
 327:../Libraries/XMCLib/src/xmc_usbd.c **** {
 328:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 329:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 330:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 331:../Libraries/XMCLib/src/xmc_usbd.c **** 	data.d32 = 0U;
 332:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 333:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 334:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 335:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 336:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 337:../Libraries/XMCLib/src/xmc_usbd.c ****     for (count = 0U; count < 1000U; count++){}
 338:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 339:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.rxfflsh);
 340:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 341:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 342:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 343:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 344:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 345:../Libraries/XMCLib/src/xmc_usbd.c **** }
 346:../Libraries/XMCLib/src/xmc_usbd.c **** 
 347:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 348:../Libraries/XMCLib/src/xmc_usbd.c ****  * Support Functions
 349:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 350:../Libraries/XMCLib/src/xmc_usbd.c **** 
 351:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 352:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Assign a free tx fifo
 353:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 354:../Libraries/XMCLib/src/xmc_usbd.c ****  * A free tx fifo will be searched and the number will be returned.
 355:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 356:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return Fifo number for a free fifo
 357:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 358:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void) 
 359:../Libraries/XMCLib/src/xmc_usbd.c **** {
 360:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask = 1U;
 361:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 362:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 364:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     mask = (uint16_t)(mask << 1U);
 366:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 367:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 368:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((xmc_device.txfifomsk & mask) == 0U)
 369:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 370:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.txfifomsk |= mask;
 371:../Libraries/XMCLib/src/xmc_usbd.c ****     result=i;
 372:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 373:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 374:../Libraries/XMCLib/src/xmc_usbd.c **** }
 375:../Libraries/XMCLib/src/xmc_usbd.c **** 
 376:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 377:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Free a tx fifo
 378:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 379:../Libraries/XMCLib/src/xmc_usbd.c ****  * Mark an used tx fifo as free.
 380:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_nr Fifo number to free
 381:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 382:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr) 
 383:../Libraries/XMCLib/src/xmc_usbd.c **** {
 384:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.txfifomsk = (uint16_t)((uint32_t)xmc_device.txfifomsk & (uint32_t)(~((uint32_t)((uint3
 385:../Libraries/XMCLib/src/xmc_usbd.c **** }
 386:../Libraries/XMCLib/src/xmc_usbd.c **** 
 387:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 388:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a transfer for an out endpoint
 389:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 390:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint, the out endpoint registers will be programmed
 391:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new out transfer.
 392:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 393:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note No checking of the transfer values are done in this function. Be sure,
 394:../Libraries/XMCLib/src/xmc_usbd.c ****  * that the transfer values are reasonable (e.g. buffer size is not exceeded).
 395:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 396:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 397:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 398:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep) 
 399:../Libraries/XMCLib/src/xmc_usbd.c **** {
 400:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t data;
 401:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 402:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 403:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 =  0U;
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 405:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 406:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 407:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 408:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 409:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 410:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 411:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 412:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.number == 0U)
 413:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 414:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Setup the endpoint to receive 3 setup packages and one normal package.*/
 415:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Cast the data pointer to use only one variable */
 416:../Libraries/XMCLib/src/xmc_usbd.c ****     deptsiz0_data_t *ep0_data = (deptsiz0_data_t*)&data;
 417:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.pktcnt = 0x1U;
 418:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 419:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 420:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 421:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 422:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 423:../Libraries/XMCLib/src/xmc_usbd.c ****     /* If requested length is zero, just receive one zero length packet */
 424:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->xferLength == 0U)
 425:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 426:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = 0U;
 427:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = 1U;
 428:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 429:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 430:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 431:../Libraries/XMCLib/src/xmc_usbd.c ****       /* setup endpoint to recive a amount of packages by given size */
 432:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = (uint16_t)(((ep->xferLength - ep->xferCount) + (ep->maxPacketSize -(uint32_t)
 433:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 434:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 435:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 436:../Libraries/XMCLib/src/xmc_usbd.c ****   if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 437:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 438:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Programm dma address if needed */
 439:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepdma = (uint32_t)(ep->xfe
 440:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 441:../Libraries/XMCLib/src/xmc_usbd.c ****   /* setup endpoint size and enable endpoint */
 442:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doeptsiz = data.d32;
 443:../Libraries/XMCLib/src/xmc_usbd.c ****  
 444:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 445:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 446:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.epena = 1U;
 447:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 448:../Libraries/XMCLib/src/xmc_usbd.c **** }
 449:../Libraries/XMCLib/src/xmc_usbd.c **** 
 450:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 451:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a new in transfer
 452:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 453:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint the in endpoint registers will be programmed
 454:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new in transfer
 455:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 456:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 457:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 458:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep) 
 459:../Libraries/XMCLib/src/xmc_usbd.c **** {
 460:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t size;
 461:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t ctl;
 462:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 463:../Libraries/XMCLib/src/xmc_usbd.c ****   size.d32 = 0U;  
 464:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 465:../Libraries/XMCLib/src/xmc_usbd.c **** 
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength)  < ep->maxTransferSize)
 467:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 468:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 469:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 470:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 471:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 472:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 473:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 474:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->xferLength == 0U)
 475:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 476:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.xfersize = 0U;
 477:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.pktcnt = 1U;
 478:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 479:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 480:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 481:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->address_u.address_st.number == 0U)
 482:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 483:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = 1U;
 484:../Libraries/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 485:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 486:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 487:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 488:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 489:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 490:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 491:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 492:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 493:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 494:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 495:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Program dma*/
 496:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepdma = (uint32_t)ep->xfe
 497:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 498:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 499:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 500:../Libraries/XMCLib/src/xmc_usbd.c ****       /* enable fifo empty interrupt */
 501:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.device_register->dtknqr4_fifoemptymsk |= (uint32_t)((uint32_t)1U << (uint8_t)ep->addr
 502:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 503:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 504:../Libraries/XMCLib/src/xmc_usbd.c **** 
 505:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Program size of transfer and enable endpoint */
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dieptsiz = size.d32;
 507:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 508:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.cnak = 1U;
 509:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 510:../Libraries/XMCLib/src/xmc_usbd.c **** }
 511:../Libraries/XMCLib/src/xmc_usbd.c **** 
 512:../Libraries/XMCLib/src/xmc_usbd.c **** 
 513:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 514:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles the USBD reset interrupt
 515:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 516:../Libraries/XMCLib/src/xmc_usbd.c ****  * When ever the host sets the bus into reset condition the usb otg_core generates
 517:../Libraries/XMCLib/src/xmc_usbd.c ****  * an interrupt, which is handled by this function. It resets the complete otg_core
 518:../Libraries/XMCLib/src/xmc_usbd.c ****  * into the default state.
 519:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 520:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj) 
 521:../Libraries/XMCLib/src/xmc_usbd.c **** {
 522:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 523:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 524:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
 525:../Libraries/XMCLib/src/xmc_usbd.c ****   fifosize_data_t gnptxfsiz;
 526:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 527:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
 528:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 529:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear the Remote Wakeup Signaling */
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 531:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 532:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 533:../Libraries/XMCLib/src/xmc_usbd.c **** 
 534:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable naks for all eps */
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint8_t)XMC_USBD_NUM_EPS;i++)
 536:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 537:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.d32 = xmc_device.endpoint_out_register[i]->doepctl;
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 540:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 541:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 542:../Libraries/XMCLib/src/xmc_usbd.c **** 
 543:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Configure fifos */
 544:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the rx fifo */
 545:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grxfsiz = 64U;
 546:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 547:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.d32 = 0U;
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.depth = 16U;
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 551:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 1U;i < (uint8_t)XMC_USBD_NUM_TX_FIFOS;i++)
 553:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 554:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.global_register->dtxfsiz[i- 1U] = (uint32_t)(((256U + (i*(64U)))/4U) | ((uint32_t)16
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 556:../Libraries/XMCLib/src/xmc_usbd.c **** 
 557:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 558:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x10U); /* 0x10 == all fifos, see doc */
 559:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 560:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 561:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 562:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable ep0 interrupts */  
 563:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = 0U;
 564:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.inep0 = 1U;
 565:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.outep0 = 1U;
 566:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daint.d32;
 567:../Libraries/XMCLib/src/xmc_usbd.c **** 
 568:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable endpoint interrupts */
 569:../Libraries/XMCLib/src/xmc_usbd.c ****   /* out ep interrupts */
 570:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventOUTEP(((uint32_t)XMC_USBD_EVENT_OUT_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_
 571:../Libraries/XMCLib/src/xmc_usbd.c **** 		  	  	  	  	  	  (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_EP_AHB_ERRO
 572:../Libraries/XMCLib/src/xmc_usbd.c **** 
 573:../Libraries/XMCLib/src/xmc_usbd.c ****   /*in ep interrupts */
 574:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventINEP(((uint32_t)XMC_USBD_EVENT_IN_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_IN
 575:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_EP_TIMEOUT));
 576:../Libraries/XMCLib/src/xmc_usbd.c **** 
 577:../Libraries/XMCLib/src/xmc_usbd.c **** 
 578:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear device Address */  
 579:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 580:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 581:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 582:../Libraries/XMCLib/src/xmc_usbd.c **** 
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 584:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 585:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Clear Empty interrupt */
 586:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dtknqr4_fifoemptymsk = 0U;
 587:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 588:../Libraries/XMCLib/src/xmc_usbd.c **** 
 589:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].outInUse = 0U;
 590:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 591:../Libraries/XMCLib/src/xmc_usbd.c **** 
 592:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_RESET);
 593:../Libraries/XMCLib/src/xmc_usbd.c **** 
 594:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear reset intr */
 595:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_RESET);
 596:../Libraries/XMCLib/src/xmc_usbd.c **** }
 597:../Libraries/XMCLib/src/xmc_usbd.c **** 
 598:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 599:../Libraries/XMCLib/src/xmc_usbd.c **** * @brief Handle OTG Interrupt
 600:../Libraries/XMCLib/src/xmc_usbd.c **** *
 601:../Libraries/XMCLib/src/xmc_usbd.c **** * It detects especially connect and disconnect events.
 602:../Libraries/XMCLib/src/xmc_usbd.c **** */
 603:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void) 
 604:../Libraries/XMCLib/src/xmc_usbd.c **** {
 605:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t data;
 606:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gotgint;
 607:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 608:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 609:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.IsPowered = 0U;
 610:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 611:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 612:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lClearEventOTG(data.d32);
 613:../Libraries/XMCLib/src/xmc_usbd.c **** 
 614:../Libraries/XMCLib/src/xmc_usbd.c **** }
 615:../Libraries/XMCLib/src/xmc_usbd.c **** 
 616:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 617:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Interrupt handler for device enumeration done.
 618:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 619:../Libraries/XMCLib/src/xmc_usbd.c ****  * Handles the enumeration done from dwc_otg, when the host has enumerated the device.
 620:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 621:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void) 
 622:../Libraries/XMCLib/src/xmc_usbd.c **** {
 623:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Normaly we need to check dctl
 624:../Libraries/XMCLib/src/xmc_usbd.c ****    * We are always fullspeed, so max it up. */
 625:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 626:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
 627:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32=xmc_device.endpoint_in_register[0U]->diepctl;
 629:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 630:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 631:../Libraries/XMCLib/src/xmc_usbd.c **** 
 632:../Libraries/XMCLib/src/xmc_usbd.c ****   /* update device connected flag */
 633:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsConnected = 1U;
 634:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 635:../Libraries/XMCLib/src/xmc_usbd.c **** 
 636:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_CONNECT);
 637:../Libraries/XMCLib/src/xmc_usbd.c **** 
 638:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Set Trim */  
 639:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 640:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 641:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 642:../Libraries/XMCLib/src/xmc_usbd.c **** 
 643:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 644:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_ENUMDONE);
 645:../Libraries/XMCLib/src/xmc_usbd.c **** }
 646:../Libraries/XMCLib/src/xmc_usbd.c **** 
 647:../Libraries/XMCLib/src/xmc_usbd.c **** 
 648:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 649:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all out endpoints
 650:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 651:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 652:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 653:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 654:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj) 
 655:../Libraries/XMCLib/src/xmc_usbd.c **** {
 656:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 657:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 658:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk_data_t doepmsk;
 659:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
 660:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t doeptsiz;
 661:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 662:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 663:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 664:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 665:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 666:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 667:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 668:../Libraries/XMCLib/src/xmc_usbd.c ****   
 669:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 670:../Libraries/XMCLib/src/xmc_usbd.c ****   
 671:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk.d32 = xmc_device.device_register->doepmsk;  
 672:../Libraries/XMCLib/src/xmc_usbd.c ****   
 673:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.out & daintmsk.ep.out;
 674:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 675:../Libraries/XMCLib/src/xmc_usbd.c ****   doeptsiz.d32 = 0U;
 676:../Libraries/XMCLib/src/xmc_usbd.c ****  
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 678:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 679:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = (mask >> (uint16_t)ep_num);
 680:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = temp1 & 0x1U;
 681:../Libraries/XMCLib/src/xmc_usbd.c ****     if (temp)
 682:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 683:../Libraries/XMCLib/src/xmc_usbd.c ****       /* load register data for endpoint */
 684:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 685:../Libraries/XMCLib/src/xmc_usbd.c ****       doepint.d32 = xmc_device.endpoint_out_register[ep_num]->doepint & doepmsk.d32;
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 687:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 688:../Libraries/XMCLib/src/xmc_usbd.c ****         doeptsiz.d32 = xmc_device.endpoint_out_register[ep_num]->doeptsiz;
 689:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 690:../Libraries/XMCLib/src/xmc_usbd.c **** 	  /* Setup Phase Complete */
 691:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.setup)
 692:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 693:../Libraries/XMCLib/src/xmc_usbd.c ****         /* ep0 not stalled any more */
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->isStalled = 0U;
 695:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 696:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 697:../Libraries/XMCLib/src/xmc_usbd.c ****           /* calculate size for setup packet */
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  ep->outBytesAvailable = (uint32_t)(((uint32_t)XMC_USBD_SETUP_COUNT -
 699:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 700:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 701:../Libraries/XMCLib/src/xmc_usbd.c **** 		if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 702:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 703:../Libraries/XMCLib/src/xmc_usbd.c **** 			ep->outBytesAvailable += ep->xferCount;
 704:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 705:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->outInUse = 0U;
 706:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.EndpointEvent_cb(0U,XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 707:../Libraries/XMCLib/src/xmc_usbd.c **** 				/* clear the interrupt */
 708:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_ClearEventOUTEP((uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP,ep_num);
 709:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 710:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.xfercompl)
 711:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 712:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 713:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 714:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes = (ep->xferLength - ep->xferCount) - doeptsiz.b.xfersize;
 715:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 716:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 717:../Libraries/XMCLib/src/xmc_usbd.c **** 				}
 718:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 719:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 720:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = ep->xferCount;
 721:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 722:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num,XMC_USBD_EP_EVENT_OUT);
 723:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 724:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 725:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 726:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartReadXfer(ep);
 727:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 728:../Libraries/XMCLib/src/xmc_usbd.c **** 
 729:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 730:../Libraries/XMCLib/src/xmc_usbd.c **** 
 731:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventOUTEP(doepint.d32,ep_num);
 732:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 733:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 734:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 735:../Libraries/XMCLib/src/xmc_usbd.c **** 
 736:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 737:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_OUTEP);
 738:../Libraries/XMCLib/src/xmc_usbd.c **** }
 739:../Libraries/XMCLib/src/xmc_usbd.c **** 
 740:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 741:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all in endpoints
 742:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 743:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 744:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 745:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 746:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj) 
 747:../Libraries/XMCLib/src/xmc_usbd.c **** {
 748:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 749:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 750:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk_data_t diepmsk;
 751:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
 752:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t dieptsiz;
 753:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 754:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 755:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 756:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 757:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t inepint;
 758:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 759:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 760:../Libraries/XMCLib/src/xmc_usbd.c ****   
 761:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk.d32 = xmc_device.device_register->diepmsk;
 762:../Libraries/XMCLib/src/xmc_usbd.c ****   
 763:../Libraries/XMCLib/src/xmc_usbd.c ****   dieptsiz.d32 = 0U;
 764:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.in;
 765:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 766:../Libraries/XMCLib/src/xmc_usbd.c ****   
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 768:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 769:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = ((uint16_t)mask >> (uint16_t)ep_num);
 770:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = (uint16_t)temp1 & (uint16_t)0x1U;
 771:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((uint16_t)temp)
 772:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 773:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 774:../Libraries/XMCLib/src/xmc_usbd.c **** 			inepint = (uint32_t)xmc_device.endpoint_in_register[ep_num]->diepint;
 775:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 776:../Libraries/XMCLib/src/xmc_usbd.c ****       ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep->address_u.add
 777:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 779:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 780:../Libraries/XMCLib/src/xmc_usbd.c ****         dieptsiz.d32 = xmc_device.endpoint_in_register[ep_num]->dieptsiz;
 781:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 782:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 783:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 784:../Libraries/XMCLib/src/xmc_usbd.c ****         if (diepint.b.emptyintr)
 785:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 786:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes;
 787:../Libraries/XMCLib/src/xmc_usbd.c ****           bytes = XMC_USBD_lWriteFifo(ep);
 788:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 789:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 790:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 791:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 792:../Libraries/XMCLib/src/xmc_usbd.c ****       if (diepint.b.xfercompl)
 793:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 794:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 795:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 796:../Libraries/XMCLib/src/xmc_usbd.c ****           /* update xfer values */
 797:../Libraries/XMCLib/src/xmc_usbd.c ****           if ((dieptsiz.b.pktcnt == 0U) && (dieptsiz.b.xfersize == 0U))
 798:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 799:../Libraries/XMCLib/src/xmc_usbd.c ****             uint32_t Bytes = ep->xferLength - ep->xferCount;
 800:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 801:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 802:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 803:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 804:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal==ep->xferLength)
 805:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 806:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->inInUse = 0U;
 807:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 808:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 809:../Libraries/XMCLib/src/xmc_usbd.c ****             /* mask fifo empty interrupt */
 810:../Libraries/XMCLib/src/xmc_usbd.c ****             xmc_device.device_register->dtknqr4_fifoemptymsk =
 811:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 812:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 813:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(0x80U | ep_num,XMC_USBD_EP_EVENT_IN);
 814:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 815:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 816:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 817:../Libraries/XMCLib/src/xmc_usbd.c ****           /* start next step of transfer */
 818:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartWriteXfer(ep);
 819:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 820:../Libraries/XMCLib/src/xmc_usbd.c **** 
 821:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 822:../Libraries/XMCLib/src/xmc_usbd.c **** 
 823:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventINEP((uint32_t)diepint.d32,ep_num);
 824:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 825:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 826:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 827:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_INEP);
 828:../Libraries/XMCLib/src/xmc_usbd.c **** }
 829:../Libraries/XMCLib/src/xmc_usbd.c **** 
 830:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 831:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief RX Fifo interrupt handler
 832:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 833:../Libraries/XMCLib/src/xmc_usbd.c ****  * This function handles the interrupt, when the rx fifo is not empty anymore.
 834:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 835:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void) 
 836:../Libraries/XMCLib/src/xmc_usbd.c **** {
 837:../Libraries/XMCLib/src/xmc_usbd.c ****   device_grxsts_data_t data;	
 838:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->grxstsp;
 839:../Libraries/XMCLib/src/xmc_usbd.c **** 
 840:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (data.b.pktsts)
 841:../Libraries/XMCLib/src/xmc_usbd.c **** 	{
 842:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_GOUTNAK:
 843:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 844:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTCMPL:
 845:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 846:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTDATA:
 847:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 848:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 849:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUP:
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 851:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 852:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUPCMPL:
 853:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 854:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
 855:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 856:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
 857:../Libraries/XMCLib/src/xmc_usbd.c ****   /* no need to clear */
 858:../Libraries/XMCLib/src/xmc_usbd.c **** }
 859:../Libraries/XMCLib/src/xmc_usbd.c **** 
 860:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 861:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Global interrupt handler
 862:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 863:../Libraries/XMCLib/src/xmc_usbd.c ****  * The handler first checks, which global interrupt has caused the interrupt
 864:../Libraries/XMCLib/src/xmc_usbd.c ****  * and then dispatches interrupt to the corresponding sub-handler.
 865:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 866:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_IRQHandler(const XMC_USBD_t *const obj) 
 867:../Libraries/XMCLib/src/xmc_usbd.c **** {
 868:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 869:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t data;
 870:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 871:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = xmc_device.global_register->gintmsk;
 872:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 873:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sofintr)
 875:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 876:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SOF);
 877:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 878:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 879:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 880:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 881:../Libraries/XMCLib/src/xmc_usbd.c ****     if (data.b.rxstsqlvl)
 882:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 883:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Masked that interrupt so its only done once */
 884:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 0U;
 885:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 886:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 887:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 1U;
 888:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 889:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 890:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 891:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.erlysuspend)
 892:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 893:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_EARLYSUSPEND);
 894:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 895:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbsuspend)
 896:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 897:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SUSPEND);
 898:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 899:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 900:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.wkupintr)
 901:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 902:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_REMOTE_WAKEUP);
 903:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 904:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 905:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sessreqintr)
 906:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 907:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 1U;
 908:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 909:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 910:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 911:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbreset)
 912:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 913:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleUSBReset(obj);
 914:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.enumdone)
 916:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 917:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleEnumDone();
 918:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 919:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.inepint)
 920:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 921:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleIEPInt(obj);
 922:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 923:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.outepintr)
 924:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 925:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_lHandleOEPInt(obj);
 926:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 927:../Libraries/XMCLib/src/xmc_usbd.c **** 	if (data.b.otgintr)
 928:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 929:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_lHandleOTGInt();
 930:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 931:../Libraries/XMCLib/src/xmc_usbd.c **** 
 932:../Libraries/XMCLib/src/xmc_usbd.c **** }
 933:../Libraries/XMCLib/src/xmc_usbd.c **** 
 934:../Libraries/XMCLib/src/xmc_usbd.c **** 
 935:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 936:../Libraries/XMCLib/src/xmc_usbd.c ****  * API IMPLEMENTATION
 937:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 938:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 939:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enables the USB0 module
 940:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 941:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Enable(void) 
 942:../Libraries/XMCLib/src/xmc_usbd.c **** {
 943:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 944:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 945:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 946:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Reset and power up */
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 948:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 949:../Libraries/XMCLib/src/xmc_usbd.c **** }
 950:../Libraries/XMCLib/src/xmc_usbd.c **** 
 951:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 952:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disables the USB0 module
 953:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 954:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Disable(void) 
 955:../Libraries/XMCLib/src/xmc_usbd.c **** {
 956:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 957:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 958:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 959:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 960:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 961:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_DisableUsb();
 962:../Libraries/XMCLib/src/xmc_usbd.c **** }
 963:../Libraries/XMCLib/src/xmc_usbd.c **** 
 964:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 965:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB device event
 966:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 967:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEvent(const XMC_USBD_EVENT_t event) 
 968:../Libraries/XMCLib/src/xmc_usbd.c **** {
 969:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 970:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = 0U;
 971:../Libraries/XMCLib/src/xmc_usbd.c ****   switch(event)
 972:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 973:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_POWER_ON):
 974:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sessreqintr = 1U;
 975:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 976:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 977:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbreset = 1U;
 978:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 979:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 980:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbsuspend = 1U;
 981:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 982:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 983:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 984:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 985:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_REMOTE_WAKEUP):
 986:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 987:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 988:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 989:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sofintr = 1U;
 990:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 991:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 992:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.erlysuspend = 1U;
 993:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 994:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 995:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.enumdone = 1U;
 996:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 997:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
 998:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.outepintr = 1U;
 999:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
1000:../Libraries/XMCLib/src/xmc_usbd.c **** 		default:
1001:../Libraries/XMCLib/src/xmc_usbd.c **** 		break;
1002:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
1003:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.global_register->gintsts = clear.d32;
1004:../Libraries/XMCLib/src/xmc_usbd.c **** }
1005:../Libraries/XMCLib/src/xmc_usbd.c **** 
1006:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1007:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OTG events
1008:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1009:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event)
1010:../Libraries/XMCLib/src/xmc_usbd.c **** {
1011:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t clear = { .d32 = 0U};
1012:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
1013:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gotgint = clear.d32;
1014:../Libraries/XMCLib/src/xmc_usbd.c **** }
1015:../Libraries/XMCLib/src/xmc_usbd.c **** 
1016:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1017:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB IN EP events
1018:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1019:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventINEP(uint32_t event,const uint8_t ep_num)
1020:../Libraries/XMCLib/src/xmc_usbd.c **** {
1021:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
1022:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
1023:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep_num]->diepint = clear.d32;
1024:../Libraries/XMCLib/src/xmc_usbd.c **** }
1025:../Libraries/XMCLib/src/xmc_usbd.c **** 
1026:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1027:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OUT EP events
1028:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1029:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventOUTEP(uint32_t event,const uint8_t ep_num)
1030:../Libraries/XMCLib/src/xmc_usbd.c **** {
1031:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
1032:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
1033:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep_num]->doepint = clear.d32;
1034:../Libraries/XMCLib/src/xmc_usbd.c **** }
1035:../Libraries/XMCLib/src/xmc_usbd.c **** 
1036:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1037:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB OUT EP events
1038:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1039:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventOUTEP(uint32_t event)
1040:../Libraries/XMCLib/src/xmc_usbd.c **** {
1041:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint_data_t doepint;
1042:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint.d32 = event;
1043:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->doepmsk |= doepint.d32;
1044:../Libraries/XMCLib/src/xmc_usbd.c **** }
1045:../Libraries/XMCLib/src/xmc_usbd.c **** 
1046:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1047:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB IN EP events
1048:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1049:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventINEP(uint32_t event)
1050:../Libraries/XMCLib/src/xmc_usbd.c **** {
1051:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint_data_t diepint;
1052:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint.d32 = event;
1053:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->diepmsk |= diepint.d32;
1054:../Libraries/XMCLib/src/xmc_usbd.c **** }
1055:../Libraries/XMCLib/src/xmc_usbd.c **** 
1056:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1057:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device capabilities
1058:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1059:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_CAPABILITIES_t XMC_USBD_GetCapabilities()
1060:../Libraries/XMCLib/src/xmc_usbd.c **** {
  28              	 .loc 1 1060 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
1061:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_CAPABILITIES_t cap={0U};
1062:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_connect = 1U;
1063:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_disconnect = 1U;
1064:../Libraries/XMCLib/src/xmc_usbd.c **** #if UC_SERIES == 45
1065:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 1U;
1066:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 1U;
1067:../Libraries/XMCLib/src/xmc_usbd.c **** #else
1068:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 0U;
1069:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 0U;
1070:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
1071:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_high_speed = 0U;
1072:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_remote_wakeup = 1U;
1073:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_reset = 1U;
1074:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_resume = 1U;
1075:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_suspend = 1U;
1076:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.reserved = 0U;
1077:../Libraries/XMCLib/src/xmc_usbd.c ****   return cap;
  34              	 .loc 1 1077 0
  35 0000 0020     	 movs r0,#0
  36 0002 6FF30000 	 bfc r0,#0,#1
  37 0006 6FF34100 	 bfc r0,#1,#1
  38 000a 40F01C00 	 orr r0,r0,#28
  39 000e 6FF34510 	 bfc r0,#5,#1
  40 0012 40F4E070 	 orr r0,r0,#448
1078:../Libraries/XMCLib/src/xmc_usbd.c **** }
  41              	 .loc 1 1078 0
  42 0016 C0F30800 	 ubfx r0,r0,#0,#9
  43 001a 7047     	 bx lr
  44              	 .cfi_endproc
  45              	.LFE186:
  47              	 .section .text.XMC_USBD_DeviceConnect,"ax",%progbits
  48              	 .align 2
  49              	 .global XMC_USBD_DeviceConnect
  50              	 .thumb
  51              	 .thumb_func
  53              	XMC_USBD_DeviceConnect:
  54              	.LFB189:
1079:../Libraries/XMCLib/src/xmc_usbd.c **** 
1080:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1081:../Libraries/XMCLib/src/xmc_usbd.c ****  * Initializes the USB device
1082:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1083:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Init(XMC_USBD_t *obj)
1084:../Libraries/XMCLib/src/xmc_usbd.c **** {
1085:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
1086:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
1087:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg_data_t gahbcfg;
1088:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
1089:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
1090:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1091:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
1092:../Libraries/XMCLib/src/xmc_usbd.c **** 
1093:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_ASSERT("XMC_USBD_Init: obj.usbd_max_num_eps not of type XMC_USBD_MAX_NUM_EPS_t",
1094:../Libraries/XMCLib/src/xmc_usbd.c ****  		      XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(obj->usbd_max_num_eps))
1095:../Libraries/XMCLib/src/xmc_usbd.c ****   
1096:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_Enable();
1097:../Libraries/XMCLib/src/xmc_usbd.c ****   
1098:../Libraries/XMCLib/src/xmc_usbd.c ****   usbd_init = obj;
1099:../Libraries/XMCLib/src/xmc_usbd.c **** 
1100:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Filling out buffer size */
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   for(i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
1102:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1103:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_OUT_BUFFERSIZE[i] = XMC_USBD_EP0_BUFFER_SIZE;
1104:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
1105:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1106:../Libraries/XMCLib/src/xmc_usbd.c **** 
1107:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear device status */
1108:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0x0U,sizeof(XMC_USBD_DEVICE_t));
1109:../Libraries/XMCLib/src/xmc_usbd.c **** 
1110:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign callbacks */
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb = obj->cb_xmc_device_event;
1112:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
1113:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
1114:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register = (dwc_otg_core_global_regs_t*)(obj->usbd);
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GLO
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
1118:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1119:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[i] = (dwc_otg_dev_in_ep_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DE
1120:../Libraries/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
1121:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
1123:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1124:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i] = (dwc_otg_dev_out_ep_regs_t*)(XMC_USBD_BASE_ADDRESS +
1125:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
1126:../Libraries/XMCLib/src/xmc_usbd.c ****     									  ((uint32_t)DWC_EP_REG_OFFSET*i));
1127:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_TX_FIFOS;i++)
1129:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.fifo[i] = (uint32_t*)(XMC_USBD_BASE_ADDRESS +
1131:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
1132:../Libraries/XMCLib/src/xmc_usbd.c ****     						(i * XMC_USBD_TX_FIFO_OFFSET));
1133:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1134:../Libraries/XMCLib/src/xmc_usbd.c ****   /* obj data structure for endpoint 0 */
1135:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Done by driver core */
1136:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure ahb details */  
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.d32 = xmc_device.global_register->gahbcfg;
1138:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.nptxfemplvl_txfemplvl = 1U;
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
1141:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1142:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Enable dma if needed */
1143:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 1U; /* enable dma if needed */
1144:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1145:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1146:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1147:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 0U;
1148:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gahbcfg = gahbcfg.d32;
1150:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */  
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32= xmc_device.global_register->gusbcfg;
1152:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.srpcap = 1U; /* enable session request protocoll */
1154:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
1155:../Libraries/XMCLib/src/xmc_usbd.c **** 
1156:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Device init */
1157:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device speed */  
1158:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
1162:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */  
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
1165:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
1167:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
1168:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo((uint8_t)0x10U); /* 0x10 == all fifos, see doc */
1169:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
1170:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
1171:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt status bits prior to unmasking */
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = 0U; /* disable all interrupts */
1173:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
1174:../Libraries/XMCLib/src/xmc_usbd.c ****  
1175:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = 0U;
1176:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable common interrupts */
1177:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.modemismatch = 1U;
1178:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.otgintr = 1U;
1179:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sessreqintr = 1U;
1180:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable device interrupts */
1181:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbreset = 1U;
1182:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.enumdone = 1U;
1183:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.erlysuspend = 1U;
1184:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbsuspend = 1U;
1185:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.wkupintr = 1U;
1186:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sofintr = 1U;
1187:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
1188:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1189:../Libraries/XMCLib/src/xmc_usbd.c ****     gintmsk.b.rxstsqlvl = 1U;
1190:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1191:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.outepintr = 1U;
1192:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.inepintr = 1U;
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
1194:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1195:../Libraries/XMCLib/src/xmc_usbd.c **** }
1196:../Libraries/XMCLib/src/xmc_usbd.c **** 
1197:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1198:../Libraries/XMCLib/src/xmc_usbd.c ****  * Uninitializes the USB device
1199:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1200:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Uninitialize() 
1201:../Libraries/XMCLib/src/xmc_usbd.c **** {
1202:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
1203:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1204:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
1207:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0U,sizeof(xmc_device));
1209:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1210:../Libraries/XMCLib/src/xmc_usbd.c **** }
1211:../Libraries/XMCLib/src/xmc_usbd.c **** 
1212:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1213:../Libraries/XMCLib/src/xmc_usbd.c ****  * Connects the USB device to host
1214:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1215:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceConnect() 
1216:../Libraries/XMCLib/src/xmc_usbd.c **** {
  55              	 .loc 1 1216 0
  56              	 .cfi_startproc
  57              	 
  58              	 
  59              	 
1217:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Just disable softdisconnect */
1218:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1219:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
  60              	 .loc 1 1219 0
  61 0000 044B     	 ldr r3,.L3
  62 0002 D3F8A421 	 ldr r2,[r3,#420]
  63 0006 5368     	 ldr r3,[r2,#4]
1220:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 0U;
  64              	 .loc 1 1220 0
  65 0008 6FF34103 	 bfc r3,#1,#1
  66              	.LVL1:
1221:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
  67              	 .loc 1 1221 0
  68 000c 5360     	 str r3,[r2,#4]
1222:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1223:../Libraries/XMCLib/src/xmc_usbd.c **** }
  69              	 .loc 1 1223 0
  70 000e 0020     	 movs r0,#0
  71 0010 7047     	 bx lr
  72              	.L4:
  73 0012 00BF     	 .align 2
  74              	.L3:
  75 0014 00000000 	 .word xmc_device
  76              	 .cfi_endproc
  77              	.LFE189:
  79              	 .section .text.XMC_USBD_DeviceDisconnect,"ax",%progbits
  80              	 .align 2
  81              	 .global XMC_USBD_DeviceDisconnect
  82              	 .thumb
  83              	 .thumb_func
  85              	XMC_USBD_DeviceDisconnect:
  86              	.LFB190:
1224:../Libraries/XMCLib/src/xmc_usbd.c **** 
1225:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1226:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disconnects the USB device from host
1227:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1228:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceDisconnect() 
1229:../Libraries/XMCLib/src/xmc_usbd.c **** {
  87              	 .loc 1 1229 0
  88              	 .cfi_startproc
  89              	 
  90              	 
  91              	 
1230:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1231:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
  92              	 .loc 1 1231 0
  93 0000 044B     	 ldr r3,.L6
  94 0002 D3F8A421 	 ldr r2,[r3,#420]
  95 0006 5368     	 ldr r3,[r2,#4]
1232:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
  96              	 .loc 1 1232 0
  97 0008 43F00203 	 orr r3,r3,#2
  98              	.LVL2:
1233:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
  99              	 .loc 1 1233 0
 100 000c 5360     	 str r3,[r2,#4]
1234:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1235:../Libraries/XMCLib/src/xmc_usbd.c **** }
 101              	 .loc 1 1235 0
 102 000e 0020     	 movs r0,#0
 103 0010 7047     	 bx lr
 104              	.L7:
 105 0012 00BF     	 .align 2
 106              	.L6:
 107 0014 00000000 	 .word xmc_device
 108              	 .cfi_endproc
 109              	.LFE190:
 111              	 .section .text.XMC_USBD_DeviceGetState,"ax",%progbits
 112              	 .align 2
 113              	 .global XMC_USBD_DeviceGetState
 114              	 .thumb
 115              	 .thumb_func
 117              	XMC_USBD_DeviceGetState:
 118              	.LFB191:
1236:../Libraries/XMCLib/src/xmc_usbd.c **** 
1237:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1238:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device state.
1239:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1240:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATE_t XMC_USBD_DeviceGetState(const XMC_USBD_t *const obj) 
1241:../Libraries/XMCLib/src/xmc_usbd.c **** {
 119              	 .loc 1 1241 0
 120              	 .cfi_startproc
 121              	 
 122              	 
 123              	 
 124              	.LVL3:
1242:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state={0U};
1243:../Libraries/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
1244:../Libraries/XMCLib/src/xmc_usbd.c ****   state.connected = xmc_device.IsConnected;
 125              	 .loc 1 1244 0
 126 0000 444A     	 ldr r2,.L55
 127              	.LBB50:
 128              	.LBB51:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 129              	 .loc 1 184 0
 130 0002 017B     	 ldrb r1,[r0,#12]
 131              	.LBE51:
 132              	.LBE50:
1241:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state={0U};
 133              	 .loc 1 1241 0
 134 0004 70B4     	 push {r4,r5,r6}
 135              	.LCFI0:
 136              	 .cfi_def_cfa_offset 12
 137              	 .cfi_offset 4,-12
 138              	 .cfi_offset 5,-8
 139              	 .cfi_offset 6,-4
 140              	 .loc 1 1244 0
 141 0006 92F8FE41 	 ldrb r4,[r2,#510]
1242:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state={0U};
 142              	 .loc 1 1242 0
 143 000a 0020     	 movs r0,#0
 144              	.LVL4:
 145              	 .loc 1 1244 0
 146 000c 04F00104 	 and r4,r4,#1
 147              	.LVL5:
 148              	.LBB54:
 149              	.LBB52:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 150              	 .loc 1 184 0
 151 0010 0029     	 cmp r1,#0
 152 0012 7CD0     	 beq .L19
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 153              	 .loc 1 186 0
 154 0014 5368     	 ldr r3,[r2,#4]
 155 0016 1E07     	 lsls r6,r3,#28
 156 0018 56BF     	 itet pl
 157 001a 5368     	 ldrpl r3,[r2,#4]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 158              	 .loc 1 188 0
 159 001c 0123     	 movmi r3,#1
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 160              	 .loc 1 186 0
 161 001e C3F30013 	 ubfxpl r3,r3,#4,#1
 162              	.LVL6:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 163              	 .loc 1 184 0
 164 0022 0129     	 cmp r1,#1
 165 0024 54D9     	 bls .L11
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 166              	 .loc 1 186 0
 167 0026 956B     	 ldr r5,[r2,#56]
 168 0028 3A4E     	 ldr r6,.L55
 169 002a 2D07     	 lsls r5,r5,#28
 170 002c 61D4     	 bmi .L21
 171 002e B56B     	 ldr r5,[r6,#56]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 172              	 .loc 1 188 0
 173 0030 15F0100F 	 tst r5,#16
 174 0034 18BF     	 it ne
 175 0036 0123     	 movne r3,#1
 176              	.LVL7:
 177              	.L12:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 178              	 .loc 1 184 0
 179 0038 0229     	 cmp r1,#2
 180 003a 49D0     	 beq .L11
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 181              	 .loc 1 186 0
 182 003c D56E     	 ldr r5,[r2,#108]
 183 003e 354E     	 ldr r6,.L55
 184 0040 2D07     	 lsls r5,r5,#28
 185 0042 62D4     	 bmi .L23
 186 0044 F56E     	 ldr r5,[r6,#108]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 187              	 .loc 1 188 0
 188 0046 15F0100F 	 tst r5,#16
 189 004a 18BF     	 it ne
 190 004c 0123     	 movne r3,#1
 191              	.LVL8:
 192              	.L13:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 193              	 .loc 1 184 0
 194 004e 0329     	 cmp r1,#3
 195 0050 3ED0     	 beq .L11
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 196              	 .loc 1 186 0
 197 0052 D2F8A050 	 ldr r5,[r2,#160]
 198 0056 2F4E     	 ldr r6,.L55
 199 0058 2D07     	 lsls r5,r5,#28
 200 005a 54D4     	 bmi .L25
 201 005c D6F8A050 	 ldr r5,[r6,#160]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 202              	 .loc 1 188 0
 203 0060 15F0100F 	 tst r5,#16
 204 0064 18BF     	 it ne
 205 0066 0123     	 movne r3,#1
 206              	.LVL9:
 207              	.L14:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 208              	 .loc 1 184 0
 209 0068 0429     	 cmp r1,#4
 210 006a 31D0     	 beq .L11
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 211              	 .loc 1 186 0
 212 006c D2F8D450 	 ldr r5,[r2,#212]
 213 0070 284E     	 ldr r6,.L55
 214 0072 2D07     	 lsls r5,r5,#28
 215 0074 45D4     	 bmi .L27
 216 0076 D6F8D450 	 ldr r5,[r6,#212]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 217              	 .loc 1 188 0
 218 007a 15F0100F 	 tst r5,#16
 219 007e 18BF     	 it ne
 220 0080 0123     	 movne r3,#1
 221              	.LVL10:
 222              	.L15:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 223              	 .loc 1 184 0
 224 0082 0529     	 cmp r1,#5
 225 0084 24D0     	 beq .L11
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 226              	 .loc 1 186 0
 227 0086 D2F80851 	 ldr r5,[r2,#264]
 228 008a 224E     	 ldr r6,.L55
 229 008c 2D07     	 lsls r5,r5,#28
 230 008e 36D4     	 bmi .L29
 231 0090 D6F80851 	 ldr r5,[r6,#264]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 232              	 .loc 1 188 0
 233 0094 15F0100F 	 tst r5,#16
 234 0098 18BF     	 it ne
 235 009a 0123     	 movne r3,#1
 236              	.LVL11:
 237              	.L16:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 238              	 .loc 1 184 0
 239 009c 0629     	 cmp r1,#6
 240 009e 17D0     	 beq .L11
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 241              	 .loc 1 186 0
 242 00a0 D2F83C51 	 ldr r5,[r2,#316]
 243 00a4 1B4E     	 ldr r6,.L55
 244 00a6 2D07     	 lsls r5,r5,#28
 245 00a8 27D4     	 bmi .L31
 246 00aa D6F83C51 	 ldr r5,[r6,#316]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 247              	 .loc 1 188 0
 248 00ae 15F0100F 	 tst r5,#16
 249 00b2 18BF     	 it ne
 250 00b4 0123     	 movne r3,#1
 251              	.LVL12:
 252              	.L17:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 253              	 .loc 1 184 0
 254 00b6 0729     	 cmp r1,#7
 255 00b8 0AD0     	 beq .L11
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 256              	 .loc 1 186 0
 257 00ba D2F87011 	 ldr r1,[r2,#368]
 258 00be 154D     	 ldr r5,.L55
 259 00c0 0907     	 lsls r1,r1,#28
 260 00c2 18D4     	 bmi .L33
 261 00c4 D5F87011 	 ldr r1,[r5,#368]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 262              	 .loc 1 188 0
 263 00c8 11F0100F 	 tst r1,#16
 264 00cc 18BF     	 it ne
 265 00ce 0123     	 movne r3,#1
 266              	.LVL13:
 267              	.L11:
 268 00d0 03F00103 	 and r3,r3,#1
 269              	.LVL14:
 270              	.L9:
 271              	.LBE52:
 272              	.LBE54:
1245:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
1246:../Libraries/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
 273              	 .loc 1 1246 0
 274 00d4 92F8FE21 	 ldrb r2,[r2,#510]
1247:../Libraries/XMCLib/src/xmc_usbd.c ****   return state;
 275              	 .loc 1 1247 0
 276 00d8 C2F38002 	 ubfx r2,r2,#2,#1
 277 00dc 62F30000 	 bfi r0,r2,#0,#1
 278 00e0 64F34100 	 bfi r0,r4,#1,#1
 279 00e4 63F38200 	 bfi r0,r3,#2,#1
 280 00e8 0123     	 movs r3,#1
 281              	.LVL15:
 282 00ea 63F3C400 	 bfi r0,r3,#3,#2
1248:../Libraries/XMCLib/src/xmc_usbd.c **** }
 283              	 .loc 1 1248 0
 284 00ee 70BC     	 pop {r4,r5,r6}
 285              	.LCFI1:
 286              	 .cfi_remember_state
 287              	 .cfi_restore 6
 288              	 .cfi_restore 5
 289              	 .cfi_restore 4
 290              	 .cfi_def_cfa_offset 0
 291              	.LVL16:
 292 00f0 7047     	 bx lr
 293              	.LVL17:
 294              	.L21:
 295              	.LCFI2:
 296              	 .cfi_restore_state
 297              	.LBB55:
 298              	.LBB53:
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 299              	 .loc 1 188 0
 300 00f2 0123     	 movs r3,#1
 301              	.LVL18:
 302 00f4 A0E7     	 b .L12
 303              	.LVL19:
 304              	.L33:
 305 00f6 0123     	 movs r3,#1
 306              	.LVL20:
 307 00f8 EAE7     	 b .L11
 308              	.LVL21:
 309              	.L31:
 310 00fa 0123     	 movs r3,#1
 311              	.LVL22:
 312 00fc DBE7     	 b .L17
 313              	.LVL23:
 314              	.L29:
 315 00fe 0123     	 movs r3,#1
 316              	.LVL24:
 317 0100 CCE7     	 b .L16
 318              	.LVL25:
 319              	.L27:
 320 0102 0123     	 movs r3,#1
 321              	.LVL26:
 322 0104 BDE7     	 b .L15
 323              	.LVL27:
 324              	.L25:
 325 0106 0123     	 movs r3,#1
 326              	.LVL28:
 327 0108 AEE7     	 b .L14
 328              	.LVL29:
 329              	.L23:
 330 010a 0123     	 movs r3,#1
 331              	.LVL30:
 332 010c 9FE7     	 b .L13
 333              	.LVL31:
 334              	.L19:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 335              	 .loc 1 184 0
 336 010e 0346     	 mov r3,r0
 337 0110 E0E7     	 b .L9
 338              	.L56:
 339 0112 00BF     	 .align 2
 340              	.L55:
 341 0114 00000000 	 .word xmc_device
 342              	.LBE53:
 343              	.LBE55:
 344              	 .cfi_endproc
 345              	.LFE191:
 347              	 .section .text.XMC_USBD_DeviceSetAddress,"ax",%progbits
 348              	 .align 2
 349              	 .global XMC_USBD_DeviceSetAddress
 350              	 .thumb
 351              	 .thumb_func
 353              	XMC_USBD_DeviceSetAddress:
 354              	.LFB195:
1249:../Libraries/XMCLib/src/xmc_usbd.c **** 
1250:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1251:../Libraries/XMCLib/src/xmc_usbd.c ****  * Prepares the endpoint to read next OUT packet
1252:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1253:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointReadStart(const uint8_t ep_addr, uint32_t size) 
1254:../Libraries/XMCLib/src/xmc_usbd.c **** {
1255:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
1256:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1257:../Libraries/XMCLib/src/xmc_usbd.c **** 	
1258:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outInUse || !ep->isConfigured)
1259:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1260:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
1261:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1262:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1263:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1264:../Libraries/XMCLib/src/xmc_usbd.c ****     /* short the length to buffer size if needed */
1265:../Libraries/XMCLib/src/xmc_usbd.c ****     if (size > ep->outBufferSize)
1266:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1267:../Libraries/XMCLib/src/xmc_usbd.c ****       size = ep->outBufferSize;
1268:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1269:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep values */
1270:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = size;
1271:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
1272:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
1273:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->outBuffer;
1274:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
1275:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartReadXfer(ep);
1276:../Libraries/XMCLib/src/xmc_usbd.c ****     result= XMC_USBD_STATUS_OK;
1277:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1278:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1279:../Libraries/XMCLib/src/xmc_usbd.c **** }
1280:../Libraries/XMCLib/src/xmc_usbd.c **** 
1281:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1282:../Libraries/XMCLib/src/xmc_usbd.c ****  * Reads the number of bytes from the USB OUT endpoint
1283:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1284:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointRead(const uint8_t ep_num,uint8_t * buffer,uint32_t length) 
1285:../Libraries/XMCLib/src/xmc_usbd.c **** {
1286:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
1287:../Libraries/XMCLib/src/xmc_usbd.c ****   if (length > ep->outBytesAvailable)
1288:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1289:../Libraries/XMCLib/src/xmc_usbd.c ****     length = ep->outBytesAvailable;
1290:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   memcpy(buffer,&ep->outBuffer[ep->outOffset],length);
1292:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
1293:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
1294:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1295:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset += length;
1296:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1297:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1298:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1299:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset = 0U;
1300:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1301:../Libraries/XMCLib/src/xmc_usbd.c ****   return (int32_t)length;
1302:../Libraries/XMCLib/src/xmc_usbd.c **** }
1303:../Libraries/XMCLib/src/xmc_usbd.c **** 
1304:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1305:../Libraries/XMCLib/src/xmc_usbd.c ****  * Writes number of bytes in to the USB IN endpoint.
1306:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1307:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointWrite(const uint8_t ep_num,const uint8_t * buffer,uint32_t length) 
1308:../Libraries/XMCLib/src/xmc_usbd.c **** {
1309:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
1310:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
1311:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
1312:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1313:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)XMC_USBD_STATUS_ERROR;
1314:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1315:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->inInUse == 1U)
1316:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1317:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)0;
1318:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1319:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1320:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1321:../Libraries/XMCLib/src/xmc_usbd.c ****     if (length > ep->inBufferSize)
1322:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1323:../Libraries/XMCLib/src/xmc_usbd.c ****       length = ep->inBufferSize;
1324:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1325:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data into input buffer for DMA and FIFO mode */
1326:../Libraries/XMCLib/src/xmc_usbd.c **** 		memcpy(ep->inBuffer,(const void *)buffer,length);
1327:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->xferBuffer = ep->inBuffer;
1328:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
1329:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
1330:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
1333:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
1334:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartWriteXfer(ep);
1335:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)ep->xferTotal;
1336:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1337:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1338:../Libraries/XMCLib/src/xmc_usbd.c **** }
1339:../Libraries/XMCLib/src/xmc_usbd.c **** 
1340:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1341:../Libraries/XMCLib/src/xmc_usbd.c ****  * Sets the USB device address.
1342:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1343:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceSetAddress(const uint8_t address,const XMC_USBD_SET_ADDRESS_STAGE_
1344:../Libraries/XMCLib/src/xmc_usbd.c **** {
 355              	 .loc 1 1344 0
 356              	 .cfi_startproc
 357              	 
 358              	 
 359              	 
 360              	.LVL32:
1345:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t data;
1346:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.device_register->dcfg;
 361              	 .loc 1 1346 0
 362 0000 044B     	 ldr r3,.L59
 363 0002 D3F8A431 	 ldr r3,[r3,#420]
 364 0006 1A68     	 ldr r2,[r3]
 365              	.LVL33:
1347:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stage == XMC_USBD_SET_ADDRESS_STAGE_SETUP)
 366              	 .loc 1 1347 0
 367 0008 11B9     	 cbnz r1,.L58
1348:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1349:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.devaddr = address;
 368              	 .loc 1 1349 0
 369 000a 60F30A12 	 bfi r2,r0,#4,#7
1350:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dcfg = data.d32;
 370              	 .loc 1 1350 0
 371 000e 1A60     	 str r2,[r3]
 372              	.L58:
1351:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1352:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
1353:../Libraries/XMCLib/src/xmc_usbd.c **** }
 373              	 .loc 1 1353 0
 374 0010 0020     	 movs r0,#0
 375              	.LVL34:
 376 0012 7047     	 bx lr
 377              	.L60:
 378              	 .align 2
 379              	.L59:
 380 0014 00000000 	 .word xmc_device
 381              	 .cfi_endproc
 382              	.LFE195:
 384              	 .section .text.XMC_USBD_EndpointStall,"ax",%progbits
 385              	 .align 2
 386              	 .global XMC_USBD_EndpointStall
 387              	 .thumb
 388              	 .thumb_func
 390              	XMC_USBD_EndpointStall:
 391              	.LFB196:
1354:../Libraries/XMCLib/src/xmc_usbd.c **** 
1355:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1356:../Libraries/XMCLib/src/xmc_usbd.c ****  * Set/clear stall on the selected endpoint.
1357:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1358:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointStall(const uint8_t ep_addr, const bool stall) 
1359:../Libraries/XMCLib/src/xmc_usbd.c **** {
 392              	 .loc 1 1359 0
 393              	 .cfi_startproc
 394              	 
 395              	 
 396              	 
 397              	.LVL35:
1360:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1361:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[(ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK)];
 398              	 .loc 1 1361 0
 399 0000 00F00F02 	 and r2,r0,#15
 400              	.LVL36:
1362:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stall)
 401              	 .loc 1 1362 0
 402 0004 E9B1     	 cbz r1,.L62
1363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1364:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
1365:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1366:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1367:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 403              	 .loc 1 1367 0
 404 0006 3423     	 movs r3,#52
1364:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 405              	 .loc 1 1364 0
 406 0008 10F0800F 	 tst r0,#128
 407              	 .loc 1 1367 0
 408 000c 03FB02F3 	 mul r3,r3,r2
 409 0010 1D48     	 ldr r0,.L69
 410              	.LVL37:
 411 0012 C35C     	 ldrb r3,[r0,r3]
 412 0014 03F00F03 	 and r3,r3,#15
1368:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
1369:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
1370:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1371:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1372:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1373:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1374:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 413              	 .loc 1 1374 0
 414 0018 0BBF     	 itete eq
 415 001a 00EB8303 	 addeq r3,r0,r3,lsl#2
1367:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 416              	 .loc 1 1367 0
 417 001e 6A33     	 addne r3,r3,#106
 418              	 .loc 1 1374 0
 419 0020 D3F8C411 	 ldreq r1,[r3,#452]
 420              	.LVL38:
1367:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 421              	 .loc 1 1367 0
 422 0024 50F82310 	 ldrne r1,[r0,r3,lsl#2]
 423              	 .loc 1 1374 0
 424 0028 0B68     	 ldr r3,[r1]
1375:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 425              	 .loc 1 1375 0
 426 002a 43F40013 	 orr r3,r3,#2097152
 427              	.LVL39:
1376:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 428              	 .loc 1 1376 0
 429 002e 0B60     	 str r3,[r1]
1377:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1378:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 1U;
 430              	 .loc 1 1378 0
 431 0030 3423     	 movs r3,#52
 432              	.LVL40:
 433 0032 03FB0202 	 mla r2,r3,r2,r0
 434              	.LVL41:
1379:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1380:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1381:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1382:../Libraries/XMCLib/src/xmc_usbd.c ****     /* just clear stall bit */
1383:../Libraries/XMCLib/src/xmc_usbd.c **** 		if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
1384:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
1386:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
1387:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
1388:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
1389:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1390:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1391:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1392:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
1393:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
1394:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
1395:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
1396:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1397:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->isStalled = 0U;
1398:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
1399:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
1400:../Libraries/XMCLib/src/xmc_usbd.c **** }
 435              	 .loc 1 1400 0
 436 0036 0020     	 movs r0,#0
1378:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 437              	 .loc 1 1378 0
 438 0038 1379     	 ldrb r3,[r2,#4]
 439 003a 43F02003 	 orr r3,r3,#32
 440 003e 1371     	 strb r3,[r2,#4]
 441              	 .loc 1 1400 0
 442 0040 7047     	 bx lr
 443              	.LVL42:
 444              	.L62:
1359:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
 445              	 .loc 1 1359 0
 446 0042 10B4     	 push {r4}
 447              	.LCFI3:
 448              	 .cfi_def_cfa_offset 4
 449              	 .cfi_offset 4,-4
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 450              	 .loc 1 1385 0
 451 0044 3423     	 movs r3,#52
1383:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 452              	 .loc 1 1383 0
 453 0046 10F0800F 	 tst r0,#128
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 454              	 .loc 1 1385 0
 455 004a 03FB02F3 	 mul r3,r3,r2
 456 004e 0E48     	 ldr r0,.L69
 457              	.LVL43:
 458 0050 C35C     	 ldrb r3,[r0,r3]
 459 0052 03F00F03 	 and r3,r3,#15
1392:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 460              	 .loc 1 1392 0
 461 0056 0BBF     	 itete eq
 462 0058 00EB8303 	 addeq r3,r0,r3,lsl#2
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 463              	 .loc 1 1385 0
 464 005c 6A33     	 addne r3,r3,#106
1392:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 465              	 .loc 1 1392 0
 466 005e D3F8C441 	 ldreq r4,[r3,#452]
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 467              	 .loc 1 1385 0
 468 0062 50F82340 	 ldrne r4,[r0,r3,lsl#2]
1392:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 469              	 .loc 1 1392 0
 470 0066 2368     	 ldr r3,[r4]
1393:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 471              	 .loc 1 1393 0
 472 0068 61F35553 	 bfi r3,r1,#21,#1
 473              	.LVL44:
1394:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 474              	 .loc 1 1394 0
 475 006c 43F08053 	 orr r3,r3,#268435456
 476              	.LVL45:
1395:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 477              	 .loc 1 1395 0
 478 0070 2360     	 str r3,[r4]
1397:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
 479              	 .loc 1 1397 0
 480 0072 3423     	 movs r3,#52
 481              	.LVL46:
 482 0074 03FB0202 	 mla r2,r3,r2,r0
 483              	.LVL47:
 484              	 .loc 1 1400 0
 485 0078 5DF8044B 	 ldr r4,[sp],#4
 486              	.LCFI4:
 487              	 .cfi_restore 4
 488              	 .cfi_def_cfa_offset 0
1397:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
 489              	 .loc 1 1397 0
 490 007c 1379     	 ldrb r3,[r2,#4]
 491 007e 6FF34513 	 bfc r3,#5,#1
 492              	 .loc 1 1400 0
 493 0082 0020     	 movs r0,#0
1397:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
 494              	 .loc 1 1397 0
 495 0084 1371     	 strb r3,[r2,#4]
 496              	 .loc 1 1400 0
 497 0086 7047     	 bx lr
 498              	.L70:
 499              	 .align 2
 500              	.L69:
 501 0088 00000000 	 .word xmc_device
 502              	 .cfi_endproc
 503              	.LFE196:
 505              	 .section .text.XMC_USBD_EndpointAbort,"ax",%progbits
 506              	 .align 2
 507              	 .global XMC_USBD_EndpointAbort
 508              	 .thumb
 509              	 .thumb_func
 511              	XMC_USBD_EndpointAbort:
 512              	.LFB197:
1401:../Libraries/XMCLib/src/xmc_usbd.c **** 
1402:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1403:../Libraries/XMCLib/src/xmc_usbd.c ****  * Aborts the data transfer on the selected endpoint
1404:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1405:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointAbort(const uint8_t ep_addr) {
 513              	 .loc 1 1405 0
 514              	 .cfi_startproc
 515              	 
 516              	 
 517              	 
 518              	.LVL48:
1406:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 519              	 .loc 1 1406 0
 520 0000 00F00F00 	 and r0,r0,#15
 521              	.LVL49:
1407:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.direction)
 522              	 .loc 1 1407 0
 523 0004 3422     	 movs r2,#52
 524 0006 02FB00F2 	 mul r2,r2,r0
 525 000a 0D4B     	 ldr r3,.L75
 526 000c 995C     	 ldrb r1,[r3,r2]
 527 000e 1A44     	 add r2,r2,r3
 528              	.LVL50:
 529 0010 11F0800F 	 tst r1,#128
1408:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1409:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 0U;
 530              	 .loc 1 1409 0
 531 0014 5168     	 ldr r1,[r2,#4]
1410:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1411:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->address_u.address_st.direction)
1412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1413:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse = 0U;
 532              	 .loc 1 1413 0
 533 0016 0CBF     	 ite eq
 534 0018 21F01001 	 biceq r1,r1,#16
1409:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 535              	 .loc 1 1409 0
 536 001c 21F00801 	 bicne r1,r1,#8
 537 0020 5160     	 str r1,[r2,#4]
1414:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isStalled = 0U;
 538              	 .loc 1 1415 0
 539 0022 3422     	 movs r2,#52
 540              	.LVL51:
 541 0024 02FB0033 	 mla r3,r2,r0,r3
 542              	.LVL52:
1416:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 543              	 .loc 1 1416 0
 544 0028 0020     	 movs r0,#0
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 545              	 .loc 1 1415 0
 546 002a 1A79     	 ldrb r2,[r3,#4]
1417:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
1418:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferLength = 0U;
1419:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferCount = 0U;
 547              	 .loc 1 1419 0
 548 002c D862     	 str r0,[r3,#44]
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 549              	 .loc 1 1415 0
 550 002e 6FF34512 	 bfc r2,#5,#1
 551 0032 1A71     	 strb r2,[r3,#4]
1416:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
 552              	 .loc 1 1416 0
 553 0034 1861     	 str r0,[r3,#16]
1417:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
 554              	 .loc 1 1417 0
 555 0036 9861     	 str r0,[r3,#24]
1418:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferCount = 0U;
 556              	 .loc 1 1418 0
 557 0038 9862     	 str r0,[r3,#40]
1420:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferTotal = 0U;
 558              	 .loc 1 1420 0
 559 003a 1863     	 str r0,[r3,#48]
1421:../Libraries/XMCLib/src/xmc_usbd.c **** 
1422:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1423:../Libraries/XMCLib/src/xmc_usbd.c **** }
 560              	 .loc 1 1423 0
 561 003c 7047     	 bx lr
 562              	.L76:
 563 003e 00BF     	 .align 2
 564              	.L75:
 565 0040 00000000 	 .word xmc_device
 566              	 .cfi_endproc
 567              	.LFE197:
 569              	 .section .text.XMC_USBD_EndpointUnconfigure,"ax",%progbits
 570              	 .align 2
 571              	 .global XMC_USBD_EndpointUnconfigure
 572              	 .thumb
 573              	 .thumb_func
 575              	XMC_USBD_EndpointUnconfigure:
 576              	.LFB199:
1424:../Libraries/XMCLib/src/xmc_usbd.c **** 
1425:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1426:../Libraries/XMCLib/src/xmc_usbd.c ****  * Configures the given endpoint
1427:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1428:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointConfigure(const uint8_t ep_addr,
1429:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const XMC_USBD_ENDPOINT_TYPE_t ep_type,
1430:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const uint16_t ep_max_packet_size) 
1431:../Libraries/XMCLib/src/xmc_usbd.c **** {
1432:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1433:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
1435:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)ep,0x0U,sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
1437:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->address_u.address = ep_addr;
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
1441:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
1442:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1443:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE;
1444:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1445:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1446:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1447:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE_EP0;
1448:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1449:../Libraries/XMCLib/src/xmc_usbd.c ****   /* transfer buffer */
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBuffer = XMC_USBD_EP_IN_BUFFER[ep->address_u.address_st.number];
1451:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
1452:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBufferSize = XMC_USBD_EP_IN_BUFFERSIZE[ep->address_u.address_st.number];
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
1455:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 1U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
1457:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1458:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1459:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
1460:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
1462:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1463:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
1464:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set mps */
1465:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
1466:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
1468:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1469:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1470:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x0U;
1471:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1472:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1473:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x1U;
1474:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1475:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1476:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x2U;
1477:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1478:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x3U;
1480:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1481:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1482:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1483:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1484:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1485:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1486:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1487:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
1488:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1489:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1490:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
1491:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1492:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall = 0U;
1493:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set tx fifo */
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->txFifoNum = XMC_USBD_lAssignTXFifo(); /* get tx fifo */
1495:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
1496:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* configur
1497:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enable
1498:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 0U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
1500:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1501:../Libraries/XMCLib/src/xmc_usbd.c ****     /* is out */
1502:../Libraries/XMCLib/src/xmc_usbd.c **** 		depctl_data_t data;
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
1504:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
1506:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1507:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
1508:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1509:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
1510:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
1512:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1513:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1514:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x0U;
1515:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1516:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1517:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x1U;
1518:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1519:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1520:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x2U;
1521:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1522:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x3U;
1524:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1525:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1526:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1527:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1528:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1529:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1530:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1531:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
1532:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1533:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1534:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
1535:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1536:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall =(uint8_t) 0U;
1537:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* configu
1538:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.out |=(uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enabl
1539:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1540:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daintmsk.d32;
1541:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1542:../Libraries/XMCLib/src/xmc_usbd.c **** }
1543:../Libraries/XMCLib/src/xmc_usbd.c **** 
1544:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1545:../Libraries/XMCLib/src/xmc_usbd.c ****  * Unconfigure the selected endpoint.
1546:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1547:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointUnconfigure(const uint8_t ep_addr) 
1548:../Libraries/XMCLib/src/xmc_usbd.c **** {
 577              	 .loc 1 1548 0
 578              	 .cfi_startproc
 579              	 
 580              	 
 581              	.LVL53:
 582 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 583              	.LCFI5:
 584              	 .cfi_def_cfa_offset 20
 585              	 .cfi_offset 4,-20
 586              	 .cfi_offset 5,-16
 587              	 .cfi_offset 6,-12
 588              	 .cfi_offset 7,-8
 589              	 .cfi_offset 14,-4
1549:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
1550:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1551:../Libraries/XMCLib/src/xmc_usbd.c **** 	daint_data_t daintmsk;
1552:../Libraries/XMCLib/src/xmc_usbd.c **** 	XMC_USBD_STATUS_t result;
1553:../Libraries/XMCLib/src/xmc_usbd.c **** 	uint32_t number_temp;
1554:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;  
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 590              	 .loc 1 1555 0
 591 0002 3D4B     	 ldr r3,.L94
1549:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 592              	 .loc 1 1549 0
 593 0004 00F00F00 	 and r0,r0,#15
 594              	.LVL54:
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 595              	 .loc 1 1556 0
 596 0008 3421     	 movs r1,#52
 597 000a 01FB00F1 	 mul r1,r1,r0
 598 000e 5A18     	 adds r2,r3,r1
 599              	.LVL55:
 600 0010 13F801E0 	 ldrb lr,[r3,r1]
1557:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
1558:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 601              	 .loc 1 1558 0
 602 0014 1479     	 ldrb r4,[r2,#4]
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 603              	 .loc 1 1555 0
 604 0016 D3F8A471 	 ldr r7,[r3,#420]
 605              	 .loc 1 1558 0
 606 001a 14F0040F 	 tst r4,#4
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 607              	 .loc 1 1556 0
 608 001e 0EF00F06 	 and r6,lr,#15
 609              	.LVL56:
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 610              	 .loc 1 1555 0
 611 0022 FD69     	 ldr r5,[r7,#28]
 612              	.LVL57:
1554:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 613              	 .loc 1 1554 0
 614 0024 4FF00001 	 mov r1,#0
 615              	.LVL58:
 616              	 .loc 1 1558 0
 617 0028 5AD0     	 beq .L85
1559:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1560:../Libraries/XMCLib/src/xmc_usbd.c ****      result = XMC_USBD_STATUS_ERROR;
1561:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1562:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1563:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1564:../Libraries/XMCLib/src/xmc_usbd.c ****     /* disable the endpoint, deactivate it and only send naks */
1565:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 0U;
1566:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
1567:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.snak =  1U;
1568:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
1569:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
1570:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled =  0U;
 618              	 .loc 1 1570 0
 619 002a 04F0FB04 	 and r4,r4,#251
 620 002e 6FF34514 	 bfc r4,#5,#1
 621 0032 1471     	 strb r4,[r2,#4]
1571:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse =  0U;
 622              	 .loc 1 1571 0
 623 0034 5468     	 ldr r4,[r2,#4]
 624 0036 24F01004 	 bic r4,r4,#16
 625 003a 5460     	 str r4,[r2,#4]
1572:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse =  0U;
 626              	 .loc 1 1572 0
 627 003c 5468     	 ldr r4,[r2,#4]
 628              	.LVL59:
1565:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
 629              	 .loc 1 1565 0
 630 003e 61F3CF31 	 bfi r1,r1,#15,#1
1567:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
 631              	 .loc 1 1567 0
 632 0042 41F09041 	 orr r1,r1,#1207959552
 633              	.LVL60:
 634              	 .loc 1 1572 0
 635 0046 24F00804 	 bic r4,r4,#8
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
 636              	 .loc 1 1556 0
 637 004a 4FF0010C 	 mov ip,#1
1573:../Libraries/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
1574:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 1U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 638              	 .loc 1 1574 0
 639 004e 1EF0800F 	 tst lr,#128
1568:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
 640              	 .loc 1 1568 0
 641 0052 6FF35551 	 bfc r1,#21,#1
 642              	.LVL61:
1572:../Libraries/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
 643              	 .loc 1 1572 0
 644 0056 5460     	 str r4,[r2,#4]
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
 645              	 .loc 1 1556 0
 646 0058 0CFA06FC 	 lsl ip,ip,r6
 647              	 .loc 1 1574 0
 648 005c 2FD0     	 beq .L91
1575:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1576:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable endpoint configuration */
1577:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 649              	 .loc 1 1577 0
 650 005e 06F16A0E 	 add lr,r6,#106
 651              	.LVL62:
1578:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
1579:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.in = (uint16_t)((uint32_t)daintmsk.ep.in & (~(uint32_t)number_temp));
 652              	 .loc 1 1579 0
 653 0062 6FEA0C04 	 mvn r4,ip
1577:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
 654              	 .loc 1 1577 0
 655 0066 53F82EE0 	 ldr lr,[r3,lr,lsl#2]
 656 006a CEF80010 	 str r1,[lr]
 657              	.LVL63:
1580:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1581:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 0U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 658              	 .loc 1 1581 0
 659 006e 1279     	 ldrb r2,[r2,#4]
 660              	.LVL64:
1579:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 661              	 .loc 1 1579 0
 662 0070 1FFA84FE 	 uxth lr,r4
 663 0074 0EEA050C 	 and ip,lr,r5
 664              	 .loc 1 1581 0
 665 0078 9207     	 lsls r2,r2,#30
1579:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 666              	 .loc 1 1579 0
 667 007a 6CF30F05 	 bfi r5,ip,#0,#16
 668              	 .loc 1 1581 0
 669 007e 0DD1     	 bne .L82
 670              	.L83:
1582:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1583:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
1584:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
1585:../Libraries/XMCLib/src/xmc_usbd.c ****       if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 671              	 .loc 1 1585 0
 672 0080 1E4A     	 ldr r2,.L94+4
 673 0082 1268     	 ldr r2,[r2]
1583:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 674              	 .loc 1 1583 0
 675 0084 03EB8606 	 add r6,r3,r6,lsl#2
 676              	 .loc 1 1585 0
 677 0088 527B     	 ldrb r2,[r2,#13]
1583:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 678              	 .loc 1 1583 0
 679 008a D6F8C461 	 ldr r6,[r6,#452]
1584:../Libraries/XMCLib/src/xmc_usbd.c ****       if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 680              	 .loc 1 1584 0
 681 008e 0EEA154E 	 and lr,lr,r5,lsr#16
 682              	 .loc 1 1585 0
 683 0092 012A     	 cmp r2,#1
1583:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 684              	 .loc 1 1583 0
 685 0094 3160     	 str r1,[r6]
1584:../Libraries/XMCLib/src/xmc_usbd.c ****       if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 686              	 .loc 1 1584 0
 687 0096 6EF31F45 	 bfi r5,lr,#16,#16
 688              	 .loc 1 1585 0
 689 009a 28D0     	 beq .L92
 690              	.L82:
1586:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1587:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.device_register->dtknqr4_fifoemptymsk &= ~number_temp;
1588:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1589:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1590:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->daintmsk = daintmsk.d32;
1591:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 691              	 .loc 1 1591 0
 692 009c 3422     	 movs r2,#52
 693 009e 02FB0030 	 mla r0,r2,r0,r3
 694              	.LVL65:
1590:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 695              	 .loc 1 1590 0
 696 00a2 FD61     	 str r5,[r7,#28]
 697              	.LVL66:
 698              	 .loc 1 1591 0
 699 00a4 8088     	 ldrh r0,[r0,#4]
 700              	.LBB56:
 701              	.LBB57:
 384:../Libraries/XMCLib/src/xmc_usbd.c **** }
 702              	 .loc 1 384 0
 703 00a6 B3F8FC11 	 ldrh r1,[r3,#508]
 704              	.LVL67:
 705 00aa C0F38310 	 ubfx r0,r0,#6,#4
 706 00ae 0122     	 movs r2,#1
 707 00b0 8240     	 lsls r2,r2,r0
 708 00b2 21EA0202 	 bic r2,r1,r2
 709 00b6 A3F8FC21 	 strh r2,[r3,#508]
 710              	.LVL68:
 711              	.LBE57:
 712              	.LBE56:
1592:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 713              	 .loc 1 1592 0
 714 00ba 0020     	 movs r0,#0
 715 00bc F0BD     	 pop {r4,r5,r6,r7,pc}
 716              	.LVL69:
 717              	.L91:
1574:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 718              	 .loc 1 1574 0 discriminator 1
 719 00be 1279     	 ldrb r2,[r2,#4]
 720              	.LVL70:
 721 00c0 9407     	 lsls r4,r2,#30
 722 00c2 0FD1     	 bne .L93
1577:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
 723              	 .loc 1 1577 0
 724 00c4 06F16A02 	 add r2,r6,#106
1579:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 725              	 .loc 1 1579 0
 726 00c8 6FEA0C04 	 mvn r4,ip
 727 00cc 1FFA84FE 	 uxth lr,r4
 728              	.LVL71:
1577:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
 729              	 .loc 1 1577 0
 730 00d0 53F82220 	 ldr r2,[r3,r2,lsl#2]
1579:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 731              	 .loc 1 1579 0
 732 00d4 0EEA050C 	 and ip,lr,r5
 733 00d8 6CF30F05 	 bfi r5,ip,#0,#16
1577:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
 734              	 .loc 1 1577 0
 735 00dc 1160     	 str r1,[r2]
 736              	.LVL72:
 737 00de CFE7     	 b .L83
 738              	.LVL73:
 739              	.L85:
1560:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 740              	 .loc 1 1560 0
 741 00e0 0120     	 movs r0,#1
 742              	.LVL74:
 743 00e2 F0BD     	 pop {r4,r5,r6,r7,pc}
 744              	.LVL75:
 745              	.L93:
 746 00e4 6FEA0C04 	 mvn r4,ip
 747 00e8 1FFA84FE 	 uxth lr,r4
 748              	.LVL76:
 749 00ec C8E7     	 b .L83
 750              	.LVL77:
 751              	.L92:
1587:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 752              	 .loc 1 1587 0
 753 00ee 7A6B     	 ldr r2,[r7,#52]
 754 00f0 1440     	 ands r4,r4,r2
 755 00f2 7C63     	 str r4,[r7,#52]
 756 00f4 D2E7     	 b .L82
 757              	.L95:
 758 00f6 00BF     	 .align 2
 759              	.L94:
 760 00f8 00000000 	 .word xmc_device
 761 00fc 00000000 	 .word usbd_init
 762              	 .cfi_endproc
 763              	.LFE199:
 765              	 .section .text.XMC_USBD_GetFrameNumber,"ax",%progbits
 766              	 .align 2
 767              	 .global XMC_USBD_GetFrameNumber
 768              	 .thumb
 769              	 .thumb_func
 771              	XMC_USBD_GetFrameNumber:
 772              	.LFB200:
1593:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1594:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1595:../Libraries/XMCLib/src/xmc_usbd.c **** }
1596:../Libraries/XMCLib/src/xmc_usbd.c **** 
1597:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1598:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the current USB frame number
1599:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1600:../Libraries/XMCLib/src/xmc_usbd.c **** uint16_t XMC_USBD_GetFrameNumber(void) 
1601:../Libraries/XMCLib/src/xmc_usbd.c **** {
 773              	 .loc 1 1601 0
 774              	 .cfi_startproc
 775              	 
 776              	 
 777              	 
1602:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t result;
1603:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts_data_t dsts;
1604:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts.d32 = xmc_device.device_register->dsts;
 778              	 .loc 1 1604 0
 779 0000 034B     	 ldr r3,.L97
 780 0002 D3F8A431 	 ldr r3,[r3,#420]
 781 0006 9868     	 ldr r0,[r3,#8]
 782              	.LVL78:
1605:../Libraries/XMCLib/src/xmc_usbd.c ****   result = (uint16_t)dsts.b.soffn;
1606:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1607:../Libraries/XMCLib/src/xmc_usbd.c **** }
 783              	 .loc 1 1607 0
 784 0008 C0F30D20 	 ubfx r0,r0,#8,#14
 785              	.LVL79:
 786 000c 7047     	 bx lr
 787              	.L98:
 788 000e 00BF     	 .align 2
 789              	.L97:
 790 0010 00000000 	 .word xmc_device
 791              	 .cfi_endproc
 792              	.LFE200:
 794              	 .section .text.XMC_USBD_IsEnumDone,"ax",%progbits
 795              	 .align 2
 796              	 .global XMC_USBD_IsEnumDone
 797              	 .thumb
 798              	 .thumb_func
 800              	XMC_USBD_IsEnumDone:
 801              	.LFB201:
1608:../Libraries/XMCLib/src/xmc_usbd.c **** 
1609:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1610:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB speed enumeration completion status.
1611:../Libraries/XMCLib/src/xmc_usbd.c ****  * This should not be used for the actual USB enumeration completion status. For the actual USB enu
1612:../Libraries/XMCLib/src/xmc_usbd.c ****  * the application layer should check for the completion of USB standard request Set configuration.
1613:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1614:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_IsEnumDone(void)
1615:../Libraries/XMCLib/src/xmc_usbd.c **** {
 802              	 .loc 1 1615 0
 803              	 .cfi_startproc
 804              	 
 805              	 
 806              	 
1616:../Libraries/XMCLib/src/xmc_usbd.c ****   return (uint32_t)((uint8_t)xmc_device.IsConnected && (uint8_t)xmc_device.IsPowered);
 807              	 .loc 1 1616 0
 808 0000 054B     	 ldr r3,.L100
 809 0002 93F8FE01 	 ldrb r0,[r3,#510]
 810 0006 00F00500 	 and r0,r0,#5
1617:../Libraries/XMCLib/src/xmc_usbd.c **** }
 811              	 .loc 1 1617 0
 812 000a A0F10500 	 sub r0,#5
 813 000e B0FA80F0 	 clz r0,r0
 814 0012 4009     	 lsrs r0,r0,#5
 815 0014 7047     	 bx lr
 816              	.L101:
 817 0016 00BF     	 .align 2
 818              	.L100:
 819 0018 00000000 	 .word xmc_device
 820              	 .cfi_endproc
 821              	.LFE201:
 823              	 .section .text.XMC_USBD_Uninitialize,"ax",%progbits
 824              	 .align 2
 825              	 .global XMC_USBD_Uninitialize
 826              	 .thumb
 827              	 .thumb_func
 829              	XMC_USBD_Uninitialize:
 830              	.LFB188:
1201:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
 831              	 .loc 1 1201 0
 832              	 .cfi_startproc
 833              	 
 834              	 
1204:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 835              	 .loc 1 1204 0
 836 0000 0748     	 ldr r0,.L104
 837 0002 D0F8A421 	 ldr r2,[r0,#420]
1201:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
 838              	 .loc 1 1201 0
 839 0006 08B5     	 push {r3,lr}
 840              	.LCFI6:
 841              	 .cfi_def_cfa_offset 8
 842              	 .cfi_offset 3,-8
 843              	 .cfi_offset 14,-4
1204:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 844              	 .loc 1 1204 0
 845 0008 5368     	 ldr r3,[r2,#4]
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 846              	 .loc 1 1205 0
 847 000a 43F00203 	 orr r3,r3,#2
 848              	.LVL80:
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
 849              	 .loc 1 1206 0
 850 000e 5360     	 str r3,[r2,#4]
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 851              	 .loc 1 1208 0
 852 0010 0021     	 movs r1,#0
 853 0012 4FF40272 	 mov r2,#520
 854 0016 FFF7FEFF 	 bl memset
 855              	.LVL81:
1210:../Libraries/XMCLib/src/xmc_usbd.c **** 
 856              	 .loc 1 1210 0
 857 001a 0020     	 movs r0,#0
 858 001c 08BD     	 pop {r3,pc}
 859              	.L105:
 860 001e 00BF     	 .align 2
 861              	.L104:
 862 0020 00000000 	 .word xmc_device
 863              	 .cfi_endproc
 864              	.LFE188:
 866              	 .section .text.XMC_USBD_EndpointConfigure,"ax",%progbits
 867              	 .align 2
 868              	 .global XMC_USBD_EndpointConfigure
 869              	 .thumb
 870              	 .thumb_func
 872              	XMC_USBD_EndpointConfigure:
 873              	.LFB198:
1431:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 874              	 .loc 1 1431 0
 875              	 .cfi_startproc
 876              	 
 877              	 
 878              	.LVL82:
 879 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 880              	.LCFI7:
 881              	 .cfi_def_cfa_offset 36
 882              	 .cfi_offset 4,-36
 883              	 .cfi_offset 5,-32
 884              	 .cfi_offset 6,-28
 885              	 .cfi_offset 7,-24
 886              	 .cfi_offset 8,-20
 887              	 .cfi_offset 9,-16
 888              	 .cfi_offset 10,-12
 889              	 .cfi_offset 11,-8
 890              	 .cfi_offset 14,-4
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 891              	 .loc 1 1434 0
 892 0004 9A4D     	 ldr r5,.L148
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 893              	 .loc 1 1450 0
 894 0006 DFF86C82 	 ldr r8,.L148+4
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 895              	 .loc 1 1434 0
 896 000a D5F8A431 	 ldr r3,[r5,#420]
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 897              	 .loc 1 1453 0
 898 000e DFF868A2 	 ldr r10,.L148+8
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 899              	 .loc 1 1434 0
 900 0012 D3F81CE0 	 ldr lr,[r3,#28]
 901              	.LVL83:
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
 902              	 .loc 1 1454 0
 903 0016 DFF86492 	 ldr r9,.L148+12
1435:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)ep,0x0U,sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
 904              	 .loc 1 1435 0
 905 001a 00F00F0C 	 and ip,r0,#15
 906              	.LVL84:
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
 907              	 .loc 1 1436 0
 908 001e 3427     	 movs r7,#52
 909 0020 07FB0CF7 	 mul r7,r7,ip
 910 0024 EE19     	 adds r6,r5,r7
 911              	.LVL85:
 912 0026 06F10803 	 add r3,r6,#8
 913 002a 0024     	 movs r4,#0
 914 002c EC51     	 str r4,[r5,r7]
 915 002e 7460     	 str r4,[r6,#4]
 916 0030 43F8044B 	 str r4,[r3],#4
 917 0034 43F8044B 	 str r4,[r3],#4
 918 0038 43F8044B 	 str r4,[r3],#4
 919 003c 43F8044B 	 str r4,[r3],#4
 920 0040 43F8044B 	 str r4,[r3],#4
 921 0044 43F8044B 	 str r4,[r3],#4
 922 0048 43F8044B 	 str r4,[r3],#4
 923 004c 43F8044B 	 str r4,[r3],#4
 924 0050 43F8044B 	 str r4,[r3],#4
 925 0054 43F8044B 	 str r4,[r3],#4
 926 0058 1C60     	 str r4,[r3]
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 927              	 .loc 1 1439 0
 928 005a 3379     	 ldrb r3,[r6,#4]
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
 929              	 .loc 1 1438 0
 930 005c E855     	 strb r0,[r5,r7]
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 931              	 .loc 1 1439 0
 932 005e 43F00403 	 orr r3,r3,#4
 933 0062 3371     	 strb r3,[r6,#4]
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
 934              	 .loc 1 1440 0
 935 0064 7468     	 ldr r4,[r6,#4]
 936 0066 3346     	 mov r3,r6
 937 0068 62F3D124 	 bfi r4,r2,#11,#7
 938 006c 43F8044F 	 str r4,[r3,#4]!
1447:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 939              	 .loc 1 1447 0
 940 0070 0028     	 cmp r0,#0
 941 0072 5C68     	 ldr r4,[r3,#4]
 942 0074 4FF6C070 	 movw r0,#65472
 943              	.LVL86:
 944 0078 08BF     	 it eq
 945 007a 4020     	 moveq r0,#64
 946 007c 60F31204 	 bfi r4,r0,#0,#19
 947 0080 5C60     	 str r4,[r3,#4]
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 948              	 .loc 1 1450 0
 949 0082 EB5D     	 ldrb r3,[r5,r7]
 950 0084 03F00F03 	 and r3,r3,#15
 951 0088 1802     	 lsls r0,r3,#8
1451:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
 952              	 .loc 1 1451 0
 953 008a 08F5E06B 	 add fp,r8,#1792
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 954              	 .loc 1 1450 0
 955 008e 08EB0004 	 add r4,r8,r0
1451:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
 956              	 .loc 1 1451 0
 957 0092 00EB0B08 	 add r8,r0,fp
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 958              	 .loc 1 1453 0
 959 0096 5AF82300 	 ldr r0,[r10,r3,lsl#2]
 960 009a 3062     	 str r0,[r6,#32]
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
 961              	 .loc 1 1454 0
 962 009c 59F82300 	 ldr r0,[r9,r3,lsl#2]
 963 00a0 7061     	 str r0,[r6,#20]
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 964              	 .loc 1 1450 0
 965 00a2 F461     	 str r4,[r6,#28]
1451:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
 966              	 .loc 1 1451 0
 967 00a4 C6F80C80 	 str r8,[r6,#12]
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 968              	 .loc 1 1456 0
 969 00a8 E85D     	 ldrb r0,[r5,r7]
 970 00aa 0006     	 lsls r0,r0,#24
 971 00ac 1FD4     	 bmi .L108
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 972              	 .loc 1 1456 0 is_stmt 0 discriminator 1
 973 00ae 0029     	 cmp r1,#0
 974 00b0 7FD0     	 beq .L109
 975              	.LBB62:
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 976              	 .loc 1 1503 0 is_stmt 1
 977 00b2 05EB8304 	 add r4,r5,r3,lsl#2
 978 00b6 0120     	 movs r0,#1
 979 00b8 D4F8C461 	 ldr r6,[r4,#452]
 980              	.LVL87:
 981 00bc 3468     	 ldr r4,[r6]
 982              	.LVL88:
 983 00be 9840     	 lsls r0,r0,r3
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 984              	 .loc 1 1505 0
 985 00c0 44F40044 	 orr r4,r4,#32768
 986              	.LVL89:
1507:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
 987              	 .loc 1 1507 0
 988 00c4 61F39344 	 bfi r4,r1,#18,#2
 989              	.LVL90:
 990 00c8 80B2     	 uxth r0,r0
 991              	.LVL91:
 992              	.L123:
1531:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 993              	 .loc 1 1531 0
 994 00ca 62F30A04 	 bfi r4,r2,#0,#11
 995              	.L124:
1534:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
 996              	 .loc 1 1534 0 discriminator 4
 997 00ce 44F08054 	 orr r4,r4,#268435456
 998              	.LVL92:
1536:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* configu
 999              	 .loc 1 1536 0 discriminator 4
 1000 00d2 6FF35554 	 bfc r4,#21,#1
 1001              	.LVL93:
1538:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1002              	 .loc 1 1538 0 discriminator 4
 1003 00d6 40EA1E40 	 orr r0,r0,lr,lsr#16
1537:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.out |=(uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enabl
 1004              	 .loc 1 1537 0 discriminator 4
 1005 00da 3460     	 str r4,[r6]
1538:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1006              	 .loc 1 1538 0 discriminator 4
 1007 00dc 60F31F4E 	 bfi lr,r0,#16,#16
 1008              	.L122:
 1009              	.LBE62:
1540:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 1010              	 .loc 1 1540 0
 1011 00e0 D5F8A431 	 ldr r3,[r5,#420]
1542:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1012              	 .loc 1 1542 0
 1013 00e4 0020     	 movs r0,#0
1540:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 1014              	 .loc 1 1540 0
 1015 00e6 C3F81CE0 	 str lr,[r3,#28]
1542:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1016              	 .loc 1 1542 0
 1017 00ea BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 1018              	.LVL94:
 1019              	.L108:
 1020              	.LBB63:
1459:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 1021              	 .loc 1 1459 0
 1022 00ee 03F16A00 	 add r0,r3,#106
 1023 00f2 55F82060 	 ldr r6,[r5,r0,lsl#2]
 1024              	.LVL95:
 1025 00f6 3468     	 ldr r4,[r6]
 1026              	.LVL96:
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 1027              	 .loc 1 1461 0
 1028 00f8 44F40044 	 orr r4,r4,#32768
 1029              	.LVL97:
1463:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set mps */
 1030              	 .loc 1 1463 0
 1031 00fc 61F39344 	 bfi r4,r1,#18,#2
 1032              	.LVL98:
1465:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1033              	 .loc 1 1465 0
 1034 0100 0029     	 cmp r1,#0
 1035 0102 5FD0     	 beq .L130
1487:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 1036              	 .loc 1 1487 0
 1037 0104 62F30A04 	 bfi r4,r2,#0,#11
 1038              	.L112:
 1039 0108 B5F8FC01 	 ldrh r0,[r5,#508]
1490:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
 1040              	 .loc 1 1490 0 discriminator 2
 1041 010c 44F08054 	 orr r4,r4,#268435456
 1042              	.LVL99:
 1043              	.LBB64:
 1044              	.LBB65:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1045              	 .loc 1 363 0 discriminator 2
 1046 0110 10F00107 	 ands r7,r0,#1
 1047              	.LBE65:
 1048              	.LBE64:
1492:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set tx fifo */
 1049              	 .loc 1 1492 0 discriminator 2
 1050 0114 6FF35554 	 bfc r4,#21,#1
 1051              	.LVL100:
 1052              	.LBB69:
 1053              	.LBB66:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1054              	 .loc 1 363 0 discriminator 2
 1055 0118 00F08E80 	 beq .L134
 1056              	.LVL101:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1057              	 .loc 1 363 0 is_stmt 0
 1058 011c 8707     	 lsls r7,r0,#30
 1059 011e 40F18E80 	 bpl .L135
 1060              	.LVL102:
 1061 0122 4707     	 lsls r7,r0,#29
 1062 0124 40F18F80 	 bpl .L136
 1063              	.LVL103:
 1064 0128 0707     	 lsls r7,r0,#28
 1065 012a 40F19080 	 bpl .L137
 1066              	.LVL104:
 1067 012e C706     	 lsls r7,r0,#27
 1068 0130 40F19180 	 bpl .L138
 1069              	.LVL105:
 1070 0134 8706     	 lsls r7,r0,#26
 1071 0136 40F19280 	 bpl .L139
 1072              	.LVL106:
 1073 013a 4706     	 lsls r7,r0,#25
 1074 013c 40F19380 	 bpl .L140
 1075              	.LVL107:
 368:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1076              	 .loc 1 368 0 is_stmt 1
 1077 0140 0706     	 lsls r7,r0,#24
 1078 0142 49D4     	 bmi .L141
 1079 0144 0727     	 movs r7,#7
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 1080              	 .loc 1 365 0
 1081 0146 4FF08008 	 mov r8,#128
 1082              	.LVL108:
 1083              	.L132:
 370:../Libraries/XMCLib/src/xmc_usbd.c ****     result=i;
 1084              	 .loc 1 370 0
 1085 014a 48EA0000 	 orr r0,r8,r0
 1086 014e A5F8FC01 	 strh r0,[r5,#508]
 1087              	.LVL109:
 1088              	.L119:
 1089              	.LBE66:
 1090              	.LBE69:
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
 1091              	 .loc 1 1494 0
 1092 0152 3420     	 movs r0,#52
 1093 0154 00FB0CFC 	 mul ip,r0,ip
 1094              	.LVL110:
 1095 0158 05EB0C09 	 add r9,r5,ip
1495:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* configur
 1096              	 .loc 1 1495 0
 1097 015c 67F39954 	 bfi r4,r7,#22,#4
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
 1098              	 .loc 1 1494 0
 1099 0160 B9F804A0 	 ldrh r10,[r9,#4]
 1100 0164 DFF80881 	 ldr r8,.L148
 1101 0168 67F3891A 	 bfi r10,r7,#6,#4
 1102 016c A9F804A0 	 strh r10,[r9,#4]
1497:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1103              	 .loc 1 1497 0
 1104 0170 0120     	 movs r0,#1
1496:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enable
 1105              	 .loc 1 1496 0
 1106 0172 3460     	 str r4,[r6]
1497:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1107              	 .loc 1 1497 0
 1108 0174 9840     	 lsls r0,r0,r3
 1109              	.LBE63:
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1110              	 .loc 1 1499 0
 1111 0176 15F80C40 	 ldrb r4,[r5,ip]
 1112              	.LVL111:
 1113              	.LBB72:
1497:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1114              	 .loc 1 1497 0
 1115 017a 80B2     	 uxth r0,r0
 1116 017c 40EA0E06 	 orr r6,r0,lr
 1117              	.LBE72:
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1118              	 .loc 1 1499 0
 1119 0180 2406     	 lsls r4,r4,#24
 1120              	.LBB73:
1497:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1121              	 .loc 1 1497 0
 1122 0182 66F30F0E 	 bfi lr,r6,#0,#16
 1123              	.LBE73:
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1124              	 .loc 1 1499 0
 1125 0186 29D5     	 bpl .L120
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1126              	 .loc 1 1499 0 is_stmt 0 discriminator 1
 1127 0188 0029     	 cmp r1,#0
 1128 018a A9D1     	 bne .L122
 1129              	.LBB74:
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 1130              	 .loc 1 1503 0 is_stmt 1
 1131 018c 08EB8303 	 add r3,r8,r3,lsl#2
 1132 0190 D3F8C461 	 ldr r6,[r3,#452]
 1133 0194 3468     	 ldr r4,[r6]
 1134              	.LVL112:
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 1135              	 .loc 1 1505 0
 1136 0196 44F40044 	 orr r4,r4,#32768
 1137              	.LVL113:
1507:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
 1138              	 .loc 1 1507 0
 1139 019a 61F39344 	 bfi r4,r1,#18,#2
 1140              	.LVL114:
 1141              	.L131:
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 1142              	 .loc 1 1511 0
 1143 019e 102A     	 cmp r2,#16
 1144 01a0 3CD0     	 beq .L125
 1145 01a2 34D9     	 bls .L146
 1146 01a4 202A     	 cmp r2,#32
 1147 01a6 2ED0     	 beq .L128
 1148 01a8 402A     	 cmp r2,#64
 1149 01aa 90D1     	 bne .L124
1514:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1150              	 .loc 1 1514 0
 1151 01ac 6FF30A04 	 bfc r4,#0,#11
1515:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 1152              	 .loc 1 1515 0
 1153 01b0 8DE7     	 b .L124
 1154              	.LVL115:
 1155              	.L109:
 1156              	.LBE74:
 1157              	.LBB75:
1459:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 1158              	 .loc 1 1459 0
 1159 01b2 03F16A00 	 add r0,r3,#106
 1160 01b6 55F82060 	 ldr r6,[r5,r0,lsl#2]
 1161              	.LVL116:
 1162 01ba 3468     	 ldr r4,[r6]
 1163              	.LVL117:
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 1164              	 .loc 1 1461 0
 1165 01bc 44F40044 	 orr r4,r4,#32768
 1166              	.LVL118:
1463:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set mps */
 1167              	 .loc 1 1463 0
 1168 01c0 61F39344 	 bfi r4,r1,#18,#2
 1169              	.LVL119:
 1170              	.L130:
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 1171              	 .loc 1 1467 0
 1172 01c4 102A     	 cmp r2,#16
 1173 01c6 31D0     	 beq .L113
 1174 01c8 15D9     	 bls .L147
 1175 01ca 202A     	 cmp r2,#32
 1176 01cc 2AD0     	 beq .L116
 1177 01ce 402A     	 cmp r2,#64
 1178 01d0 9AD1     	 bne .L112
1470:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1179              	 .loc 1 1470 0
 1180 01d2 6FF30A04 	 bfc r4,#0,#11
1471:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 1181              	 .loc 1 1471 0
 1182 01d6 97E7     	 b .L112
 1183              	.LVL120:
 1184              	.L141:
 1185              	.LBB70:
 1186              	.LBB67:
 368:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1187              	 .loc 1 368 0
 1188 01d8 0027     	 movs r7,#0
 1189 01da BAE7     	 b .L119
 1190              	.LVL121:
 1191              	.L120:
 1192              	.LBE67:
 1193              	.LBE70:
 1194              	.LBE75:
 1195              	.LBB76:
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 1196              	 .loc 1 1503 0
 1197 01dc 08EB8303 	 add r3,r8,r3,lsl#2
 1198 01e0 D3F8C461 	 ldr r6,[r3,#452]
 1199 01e4 3468     	 ldr r4,[r6]
 1200              	.LVL122:
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 1201              	 .loc 1 1505 0
 1202 01e6 44F40044 	 orr r4,r4,#32768
 1203              	.LVL123:
1507:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
 1204              	 .loc 1 1507 0
 1205 01ea 61F39344 	 bfi r4,r1,#18,#2
 1206              	.LVL124:
1509:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 1207              	 .loc 1 1509 0
 1208 01ee 0029     	 cmp r1,#0
 1209 01f0 7FF46BAF 	 bne .L123
 1210 01f4 D3E7     	 b .L131
 1211              	.LVL125:
 1212              	.L147:
 1213              	.LBE76:
 1214              	.LBB77:
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 1215              	 .loc 1 1467 0
 1216 01f6 082A     	 cmp r2,#8
 1217 01f8 86D1     	 bne .L112
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1218              	 .loc 1 1479 0
 1219 01fa 0327     	 movs r7,#3
 1220 01fc 55F82060 	 ldr r6,[r5,r0,lsl#2]
 1221 0200 67F30A04 	 bfi r4,r7,#0,#11
1480:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 1222              	 .loc 1 1480 0
 1223 0204 80E7     	 b .L112
 1224              	.LVL126:
 1225              	.L128:
 1226              	.LBE77:
 1227              	.LBB78:
1517:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1228              	 .loc 1 1517 0
 1229 0206 0123     	 movs r3,#1
 1230 0208 63F30A04 	 bfi r4,r3,#0,#11
1518:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
 1231              	 .loc 1 1518 0
 1232 020c 5FE7     	 b .L124
 1233              	.L146:
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 1234              	 .loc 1 1511 0
 1235 020e 082A     	 cmp r2,#8
 1236 0210 7FF45DAF 	 bne .L124
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1237              	 .loc 1 1523 0
 1238 0214 0323     	 movs r3,#3
 1239 0216 63F30A04 	 bfi r4,r3,#0,#11
1524:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 1240              	 .loc 1 1524 0
 1241 021a 58E7     	 b .L124
 1242              	.L125:
1520:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1243              	 .loc 1 1520 0
 1244 021c 0223     	 movs r3,#2
 1245 021e 63F30A04 	 bfi r4,r3,#0,#11
1521:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
 1246              	 .loc 1 1521 0
 1247 0222 54E7     	 b .L124
 1248              	.LVL127:
 1249              	.L116:
 1250              	.LBE78:
 1251              	.LBB79:
1473:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1252              	 .loc 1 1473 0
 1253 0224 0120     	 movs r0,#1
 1254 0226 60F30A04 	 bfi r4,r0,#0,#11
1474:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
 1255              	 .loc 1 1474 0
 1256 022a 6DE7     	 b .L112
 1257              	.L113:
1476:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1258              	 .loc 1 1476 0
 1259 022c 0227     	 movs r7,#2
 1260 022e 55F82060 	 ldr r6,[r5,r0,lsl#2]
 1261 0232 67F30A04 	 bfi r4,r7,#0,#11
1477:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
 1262              	 .loc 1 1477 0
 1263 0236 67E7     	 b .L112
 1264              	.LVL128:
 1265              	.L134:
 1266              	.LBB71:
 1267              	.LBB68:
 360:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 1268              	 .loc 1 360 0
 1269 0238 4FF00108 	 mov r8,#1
 1270 023c 85E7     	 b .L132
 1271              	.LVL129:
 1272              	.L135:
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1273              	 .loc 1 366 0
 1274 023e 0127     	 movs r7,#1
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 1275              	 .loc 1 365 0
 1276 0240 4FF00208 	 mov r8,#2
 1277 0244 81E7     	 b .L132
 1278              	.LVL130:
 1279              	.L136:
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1280              	 .loc 1 366 0
 1281 0246 0227     	 movs r7,#2
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 1282              	 .loc 1 365 0
 1283 0248 4FF00408 	 mov r8,#4
 1284 024c 7DE7     	 b .L132
 1285              	.LVL131:
 1286              	.L137:
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1287              	 .loc 1 366 0
 1288 024e 0327     	 movs r7,#3
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 1289              	 .loc 1 365 0
 1290 0250 4FF00808 	 mov r8,#8
 1291 0254 79E7     	 b .L132
 1292              	.LVL132:
 1293              	.L138:
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1294              	 .loc 1 366 0
 1295 0256 0427     	 movs r7,#4
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 1296              	 .loc 1 365 0
 1297 0258 4FF01008 	 mov r8,#16
 1298 025c 75E7     	 b .L132
 1299              	.LVL133:
 1300              	.L139:
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1301              	 .loc 1 366 0
 1302 025e 0527     	 movs r7,#5
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 1303              	 .loc 1 365 0
 1304 0260 4FF02008 	 mov r8,#32
 1305 0264 71E7     	 b .L132
 1306              	.LVL134:
 1307              	.L140:
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1308              	 .loc 1 366 0
 1309 0266 0627     	 movs r7,#6
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 1310              	 .loc 1 365 0
 1311 0268 4FF04008 	 mov r8,#64
 1312 026c 6DE7     	 b .L132
 1313              	.L149:
 1314 026e 00BF     	 .align 2
 1315              	.L148:
 1316 0270 00000000 	 .word xmc_device
 1317 0274 00000000 	 .word .LANCHOR0
 1318 0278 00000000 	 .word .LANCHOR1
 1319 027c 00000000 	 .word .LANCHOR2
 1320              	.LBE68:
 1321              	.LBE71:
 1322              	.LBE79:
 1323              	 .cfi_endproc
 1324              	.LFE198:
 1326              	 .section .text.XMC_USBD_EndpointRead,"ax",%progbits
 1327              	 .align 2
 1328              	 .global XMC_USBD_EndpointRead
 1329              	 .thumb
 1330              	 .thumb_func
 1332              	XMC_USBD_EndpointRead:
 1333              	.LFB193:
1285:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 1334              	 .loc 1 1285 0
 1335              	 .cfi_startproc
 1336              	 
 1337              	 
 1338              	.LVL135:
 1339 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1340              	.LCFI8:
 1341              	 .cfi_def_cfa_offset 24
 1342              	 .cfi_offset 3,-24
 1343              	 .cfi_offset 4,-20
 1344              	 .cfi_offset 5,-16
 1345              	 .cfi_offset 6,-12
 1346              	 .cfi_offset 7,-8
 1347              	 .cfi_offset 14,-4
1287:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1348              	 .loc 1 1287 0
 1349 0002 0E4F     	 ldr r7,.L156
 1350 0004 3424     	 movs r4,#52
 1351 0006 04FB0074 	 mla r4,r4,r0,r7
1285:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 1352              	 .loc 1 1285 0
 1353 000a 0646     	 mov r6,r0
 1354              	.LVL136:
1287:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1355              	 .loc 1 1287 0
 1356 000c 2569     	 ldr r5,[r4,#16]
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
 1357              	 .loc 1 1291 0
 1358 000e A369     	 ldr r3,[r4,#24]
 1359 0010 9542     	 cmp r5,r2
 1360 0012 0846     	 mov r0,r1
 1361              	.LVL137:
 1362 0014 E168     	 ldr r1,[r4,#12]
 1363              	.LVL138:
 1364 0016 28BF     	 it cs
 1365 0018 1546     	 movcs r5,r2
 1366              	.LVL139:
 1367 001a 1944     	 add r1,r1,r3
 1368 001c 2A46     	 mov r2,r5
 1369 001e FFF7FEFF 	 bl memcpy
 1370              	.LVL140:
1292:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
 1371              	 .loc 1 1292 0
 1372 0022 2369     	 ldr r3,[r4,#16]
 1373 0024 5B1B     	 subs r3,r3,r5
 1374 0026 2361     	 str r3,[r4,#16]
1293:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1375              	 .loc 1 1293 0
 1376 0028 0BB1     	 cbz r3,.L151
1295:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1377              	 .loc 1 1295 0
 1378 002a A369     	 ldr r3,[r4,#24]
 1379 002c 2B44     	 add r3,r3,r5
 1380              	.L151:
 1381 002e 3422     	 movs r2,#52
 1382 0030 02FB0676 	 mla r6,r2,r6,r7
1302:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1383              	 .loc 1 1302 0
 1384 0034 2846     	 mov r0,r5
 1385 0036 B361     	 str r3,[r6,#24]
 1386 0038 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1387              	.LVL141:
 1388              	.L157:
 1389 003a 00BF     	 .align 2
 1390              	.L156:
 1391 003c 00000000 	 .word xmc_device
 1392              	 .cfi_endproc
 1393              	.LFE193:
 1395              	 .section .text.XMC_USBD_Init,"ax",%progbits
 1396              	 .align 2
 1397              	 .global XMC_USBD_Init
 1398              	 .thumb
 1399              	 .thumb_func
 1401              	XMC_USBD_Init:
 1402              	.LFB187:
1084:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
 1403              	 .loc 1 1084 0
 1404              	 .cfi_startproc
 1405              	 
 1406              	 
 1407              	.LVL142:
 1408 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 1409              	.LCFI9:
 1410              	 .cfi_def_cfa_offset 36
 1411              	 .cfi_offset 4,-36
 1412              	 .cfi_offset 5,-32
 1413              	 .cfi_offset 6,-28
 1414              	 .cfi_offset 7,-24
 1415              	 .cfi_offset 8,-20
 1416              	 .cfi_offset 9,-16
 1417              	 .cfi_offset 10,-12
 1418              	 .cfi_offset 11,-8
 1419              	 .cfi_offset 14,-4
 1420 0004 0746     	 mov r7,r0
 1421 0006 83B0     	 sub sp,sp,#12
 1422              	.LCFI10:
 1423              	 .cfi_def_cfa_offset 48
 1424              	.LBB86:
 1425              	.LBB87:
 944:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 1426              	 .loc 1 944 0
 1427 0008 6948     	 ldr r0,.L165
 1428              	.LVL143:
 1429              	.LBE87:
 1430              	.LBE86:
1108:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1431              	 .loc 1 1108 0
 1432 000a 6A4C     	 ldr r4,.L165+4
1103:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 1433              	 .loc 1 1103 0
 1434 000c 6A4E     	 ldr r6,.L165+8
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1435              	 .loc 1 1104 0
 1436 000e 6B4D     	 ldr r5,.L165+12
 1437              	.LBB89:
 1438              	.LBB88:
 944:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 1439              	 .loc 1 944 0
 1440 0010 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 1441              	.LVL144:
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 1442              	 .loc 1 947 0
 1443 0014 6648     	 ldr r0,.L165
 1444 0016 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 1445              	.LVL145:
 948:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1446              	 .loc 1 948 0
 1447 001a FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 1448              	.LVL146:
 1449              	.LBE88:
 1450              	.LBE89:
1098:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1451              	 .loc 1 1098 0
 1452 001e 684B     	 ldr r3,.L165+16
1108:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1453              	 .loc 1 1108 0
 1454 0020 0021     	 movs r1,#0
1098:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1455              	 .loc 1 1098 0
 1456 0022 1F60     	 str r7,[r3]
 1457              	.LVL147:
1108:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1458              	 .loc 1 1108 0
 1459 0024 4FF40272 	 mov r2,#520
1103:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 1460              	 .loc 1 1103 0
 1461 0028 4023     	 movs r3,#64
1108:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1462              	 .loc 1 1108 0
 1463 002a 2046     	 mov r0,r4
1103:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 1464              	 .loc 1 1103 0
 1465 002c 3360     	 str r3,[r6]
 1466 002e 7360     	 str r3,[r6,#4]
 1467 0030 B360     	 str r3,[r6,#8]
 1468 0032 F360     	 str r3,[r6,#12]
 1469 0034 3361     	 str r3,[r6,#16]
 1470 0036 7361     	 str r3,[r6,#20]
 1471 0038 B361     	 str r3,[r6,#24]
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1472              	 .loc 1 1104 0
 1473 003a 2B60     	 str r3,[r5]
 1474              	.LVL148:
 1475 003c 6B60     	 str r3,[r5,#4]
 1476              	.LVL149:
 1477 003e AB60     	 str r3,[r5,#8]
 1478              	.LVL150:
 1479 0040 EB60     	 str r3,[r5,#12]
 1480              	.LVL151:
 1481 0042 2B61     	 str r3,[r5,#16]
 1482              	.LVL152:
 1483 0044 6B61     	 str r3,[r5,#20]
 1484              	.LVL153:
 1485 0046 AB61     	 str r3,[r5,#24]
 1486              	.LVL154:
1108:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1487              	 .loc 1 1108 0
 1488 0048 FFF7FEFF 	 bl memset
 1489              	.LVL155:
1113:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
 1490              	 .loc 1 1113 0
 1491 004c 3B68     	 ldr r3,[r7]
 1492              	.LVL156:
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1493              	 .loc 1 1140 0
 1494 004e 7D7B     	 ldrb r5,[r7,#13]
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
 1495              	 .loc 1 1137 0
 1496 0050 9A68     	 ldr r2,[r3,#8]
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
 1497              	 .loc 1 1111 0
 1498 0052 7868     	 ldr r0,[r7,#4]
1112:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
 1499              	 .loc 1 1112 0
 1500 0054 BE68     	 ldr r6,[r7,#8]
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1501              	 .loc 1 1140 0
 1502 0056 B5FA85F1 	 clz r1,r5
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 1503              	 .loc 1 1116 0
 1504 005a 03F5006A 	 add r10,r3,#2048
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1505              	 .loc 1 1140 0
 1506 005e 4909     	 lsrs r1,r1,#5
1119:../Libraries/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
 1507              	 .loc 1 1119 0
 1508 0060 03F51069 	 add r9,r3,#2304
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1509              	 .loc 1 1139 0
 1510 0064 42F08102 	 orr r2,r2,#129
 1511              	.LVL157:
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
 1512              	 .loc 1 1111 0
 1513 0068 C4F80002 	 str r0,[r4,#512]
1112:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
 1514              	 .loc 1 1112 0
 1515 006c C4F80462 	 str r6,[r4,#516]
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 1516              	 .loc 1 1116 0
 1517 0070 C4F8A4A1 	 str r10,[r4,#420]
 1518              	.LVL158:
1119:../Libraries/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
 1519              	 .loc 1 1119 0
 1520 0074 C4F8A891 	 str r9,[r4,#424]
 1521              	.LVL159:
 1522 0078 61F34512 	 bfi r2,r1,#5,#1
 1523              	.LVL160:
 1524 007c 03F51268 	 add r8,r3,#2336
 1525 0080 03F5146C 	 add ip,r3,#2368
 1526 0084 03F5166E 	 add lr,r3,#2400
 1527 0088 03F51867 	 add r7,r3,#2432
 1528              	.LVL161:
 1529 008c 03F51A60 	 add r0,r3,#2464
 1530 0090 03F51C6B 	 add fp,r3,#2496
1125:../Libraries/XMCLib/src/xmc_usbd.c ****     									  ((uint32_t)DWC_EP_REG_OFFSET*i));
 1531              	 .loc 1 1125 0
 1532 0094 03F53061 	 add r1,r3,#2816
 1533 0098 03F53266 	 add r6,r3,#2848
 1534 009c 03F5346A 	 add r10,r3,#2880
 1535 00a0 03F53669 	 add r9,r3,#2912
1119:../Libraries/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
 1536              	 .loc 1 1119 0
 1537 00a4 C4F8AC81 	 str r8,[r4,#428]
 1538              	.LVL162:
 1539 00a8 C4F8B0C1 	 str ip,[r4,#432]
 1540              	.LVL163:
 1541 00ac C4F8B4E1 	 str lr,[r4,#436]
 1542              	.LVL164:
 1543 00b0 C4F8B871 	 str r7,[r4,#440]
 1544              	.LVL165:
 1545 00b4 C4F8BC01 	 str r0,[r4,#444]
 1546              	.LVL166:
 1547 00b8 C4F8C0B1 	 str fp,[r4,#448]
 1548              	.LVL167:
1124:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 1549              	 .loc 1 1124 0
 1550 00bc C4F8C411 	 str r1,[r4,#452]
 1551              	.LVL168:
 1552 00c0 C4F8C861 	 str r6,[r4,#456]
 1553              	.LVL169:
 1554 00c4 C4F8CCA1 	 str r10,[r4,#460]
 1555              	.LVL170:
 1556 00c8 C4F8D091 	 str r9,[r4,#464]
 1557              	.LVL171:
1131:../Libraries/XMCLib/src/xmc_usbd.c ****     						(i * XMC_USBD_TX_FIFO_OFFSET));
 1558              	 .loc 1 1131 0
 1559 00cc 03F58041 	 add r1,r3,#16384
1125:../Libraries/XMCLib/src/xmc_usbd.c ****     									  ((uint32_t)DWC_EP_REG_OFFSET*i));
 1560              	 .loc 1 1125 0
 1561 00d0 03F53868 	 add r8,r3,#2944
 1562 00d4 03F53A6C 	 add ip,r3,#2976
 1563 00d8 03F53C6E 	 add lr,r3,#3008
1131:../Libraries/XMCLib/src/xmc_usbd.c ****     						(i * XMC_USBD_TX_FIFO_OFFSET));
 1564              	 .loc 1 1131 0
 1565 00dc 03F58057 	 add r7,r3,#4096
 1566 00e0 03F50050 	 add r0,r3,#8192
 1567 00e4 03F5405B 	 add fp,r3,#12288
 1568 00e8 03F5A046 	 add r6,r3,#20480
 1569 00ec 03F5C04A 	 add r10,r3,#24576
 1570 00f0 03F5E049 	 add r9,r3,#28672
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 1571              	 .loc 1 1130 0
 1572 00f4 C4F8EC11 	 str r1,[r4,#492]
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GLO
 1573              	 .loc 1 1115 0
 1574 00f8 C4F8A031 	 str r3,[r4,#416]
1124:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 1575              	 .loc 1 1124 0
 1576 00fc C4F8D481 	 str r8,[r4,#468]
 1577              	.LVL172:
 1578 0100 C4F8D8C1 	 str ip,[r4,#472]
 1579              	.LVL173:
 1580 0104 C4F8DCE1 	 str lr,[r4,#476]
 1581              	.LVL174:
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 1582              	 .loc 1 1130 0
 1583 0108 C4F8E071 	 str r7,[r4,#480]
 1584              	.LVL175:
 1585 010c C4F8E401 	 str r0,[r4,#484]
 1586              	.LVL176:
 1587 0110 C4F8E8B1 	 str fp,[r4,#488]
 1588              	.LVL177:
 1589 0114 C4F8F061 	 str r6,[r4,#496]
 1590              	.LVL178:
 1591 0118 C4F8F4A1 	 str r10,[r4,#500]
 1592              	.LVL179:
 1593 011c C4F8F891 	 str r9,[r4,#504]
 1594              	.LVL180:
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */  
 1595              	 .loc 1 1149 0
 1596 0120 9A60     	 str r2,[r3,#8]
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
 1597              	 .loc 1 1151 0
 1598 0122 D968     	 ldr r1,[r3,#12]
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 1599              	 .loc 1 1153 0
 1600 0124 41F08041 	 orr r1,r1,#1073741824
 1601              	.LVL181:
 1602 0128 41F48071 	 orr r1,r1,#256
 1603              	.LVL182:
1154:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1604              	 .loc 1 1154 0
 1605 012c D960     	 str r1,[r3,#12]
1158:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
 1606              	 .loc 1 1158 0
 1607 012e D3F80028 	 ldr r2,[r3,#2048]
 1608              	.LVL183:
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
 1609              	 .loc 1 1159 0
 1610 0132 42F00302 	 orr r2,r2,#3
 1611              	.LVL184:
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 1612              	 .loc 1 1160 0
 1613 0136 6FF3D752 	 bfc r2,#23,#1
 1614              	.LVL185:
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */  
 1615              	 .loc 1 1161 0
 1616 013a C3F80028 	 str r2,[r3,#2048]
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
 1617              	 .loc 1 1163 0
 1618 013e D3F80428 	 ldr r2,[r3,#2052]
 1619              	.LVL186:
 1620              	.LBB90:
 1621              	.LBB91:
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 1622              	 .loc 1 306 0
 1623 0142 0021     	 movs r1,#0
 1624              	.LVL187:
 1625              	.LBE91:
 1626              	.LBE90:
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
 1627              	 .loc 1 1164 0
 1628 0144 42F00202 	 orr r2,r2,#2
 1629              	.LVL188:
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 1630              	 .loc 1 1166 0
 1631 0148 C3F80428 	 str r2,[r3,#2052]
 1632              	.LVL189:
 1633              	.LBB93:
 1634              	.LBB92:
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 1635              	 .loc 1 306 0
 1636 014c 0091     	 str r1,[sp]
 308:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 1637              	 .loc 1 308 0
 1638 014e 009A     	 ldr r2,[sp]
 1639              	.LVL190:
 1640 0150 42F02002 	 orr r2,r2,#32
 1641 0154 0092     	 str r2,[sp]
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 1642              	 .loc 1 309 0
 1643 0156 0099     	 ldr r1,[sp]
 1644 0158 21F4F861 	 bic r1,r1,#1984
 1645 015c 41F48061 	 orr r1,r1,#1024
 1646 0160 0091     	 str r1,[sp]
 310:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U;count < 1000U; count++){}
 1647              	 .loc 1 310 0
 1648 0162 009A     	 ldr r2,[sp]
 1649 0164 1A61     	 str r2,[r3,#16]
 1650              	.LVL191:
 1651              	.L159:
 314:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.txfflsh);
 1652              	 .loc 1 314 0
 1653 0166 1A69     	 ldr r2,[r3,#16]
 1654 0168 0092     	 str r2,[sp]
 315:../Libraries/XMCLib/src/xmc_usbd.c ****     count = 0U;
 1655              	 .loc 1 315 0
 1656 016a 009A     	 ldr r2,[sp]
 1657 016c C2F34012 	 ubfx r2,r2,#5,#1
 1658 0170 002A     	 cmp r2,#0
 1659 0172 F8D1     	 bne .L159
 1660              	.LVL192:
 1661              	.LBE92:
 1662              	.LBE93:
 1663              	.LBB94:
 1664              	.LBB95:
 331:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 1665              	 .loc 1 331 0
 1666 0174 0192     	 str r2,[sp,#4]
 332:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 1667              	 .loc 1 332 0
 1668 0176 019A     	 ldr r2,[sp,#4]
 1669 0178 42F01002 	 orr r2,r2,#16
 1670 017c 0192     	 str r2,[sp,#4]
 334:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 1671              	 .loc 1 334 0
 1672 017e 019A     	 ldr r2,[sp,#4]
 1673 0180 1A61     	 str r2,[r3,#16]
 1674              	.L160:
 1675              	.LVL193:
 338:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.rxfflsh);
 1676              	 .loc 1 338 0
 1677 0182 1A69     	 ldr r2,[r3,#16]
 1678 0184 0192     	 str r2,[sp,#4]
 339:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 1679              	 .loc 1 339 0
 1680 0186 0198     	 ldr r0,[sp,#4]
 1681 0188 C0F30010 	 ubfx r0,r0,#4,#1
 1682 018c 0028     	 cmp r0,#0
 1683 018e F8D1     	 bne .L160
 1684              	.LVL194:
 1685              	.LBE95:
 1686              	.LBE94:
1189:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1687              	 .loc 1 1189 0
 1688 0190 0C49     	 ldr r1,.L165+20
 1689 0192 0D4A     	 ldr r2,.L165+24
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 1690              	 .loc 1 1172 0
 1691 0194 9861     	 str r0,[r3,#24]
1189:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1692              	 .loc 1 1189 0
 1693 0196 012D     	 cmp r5,#1
 1694 0198 18BF     	 it ne
 1695 019a 0A46     	 movne r2,r1
 1696              	.LVL195:
1192:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
 1697              	 .loc 1 1192 0
 1698 019c 42F44022 	 orr r2,r2,#786432
 1699              	.LVL196:
1173:../Libraries/XMCLib/src/xmc_usbd.c ****  
 1700              	 .loc 1 1173 0
 1701 01a0 4FF0FF31 	 mov r1,#-1
 1702 01a4 5961     	 str r1,[r3,#20]
 1703              	.LVL197:
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 1704              	 .loc 1 1193 0
 1705 01a6 9A61     	 str r2,[r3,#24]
1195:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1706              	 .loc 1 1195 0
 1707 01a8 03B0     	 add sp,sp,#12
 1708              	.LCFI11:
 1709              	 .cfi_def_cfa_offset 36
 1710              	 
 1711 01aa BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 1712              	.L166:
 1713 01ae 00BF     	 .align 2
 1714              	.L165:
 1715 01b0 80000020 	 .word 536871040
 1716 01b4 00000000 	 .word xmc_device
 1717 01b8 00000000 	 .word .LANCHOR2
 1718 01bc 00000000 	 .word .LANCHOR1
 1719 01c0 00000000 	 .word usbd_init
 1720 01c4 0E3C00C0 	 .word -1073726450
 1721 01c8 1E3C00C0 	 .word -1073726434
 1722              	 .cfi_endproc
 1723              	.LFE187:
 1725              	 .section .text.XMC_USBD_EndpointReadStart,"ax",%progbits
 1726              	 .align 2
 1727              	 .global XMC_USBD_EndpointReadStart
 1728              	 .thumb
 1729              	 .thumb_func
 1731              	XMC_USBD_EndpointReadStart:
 1732              	.LFB192:
1254:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 1733              	 .loc 1 1254 0
 1734              	 .cfi_startproc
 1735              	 
 1736              	 
 1737              	 
 1738              	.LVL198:
 1739 0000 F0B4     	 push {r4,r5,r6,r7}
 1740              	.LCFI12:
 1741              	 .cfi_def_cfa_offset 16
 1742              	 .cfi_offset 4,-16
 1743              	 .cfi_offset 5,-12
 1744              	 .cfi_offset 6,-8
 1745              	 .cfi_offset 7,-4
1255:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
 1746              	 .loc 1 1255 0
 1747 0002 00F00F00 	 and r0,r0,#15
 1748              	.LVL199:
1258:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1749              	 .loc 1 1258 0
 1750 0006 3424     	 movs r4,#52
 1751 0008 334E     	 ldr r6,.L179
 1752 000a 04FB00F4 	 mul r4,r4,r0
 1753 000e 3219     	 adds r2,r6,r4
 1754              	.LVL200:
1254:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 1755              	 .loc 1 1254 0
 1756 0010 82B0     	 sub sp,sp,#8
 1757              	.LCFI13:
 1758              	 .cfi_def_cfa_offset 24
1258:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1759              	 .loc 1 1258 0
 1760 0012 5368     	 ldr r3,[r2,#4]
 1761 0014 C3F30013 	 ubfx r3,r3,#4,#1
 1762 0018 002B     	 cmp r3,#0
 1763 001a 36D1     	 bne .L175
1258:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1764              	 .loc 1 1258 0 is_stmt 0 discriminator 1
 1765 001c 1579     	 ldrb r5,[r2,#4]
 1766 001e 6D07     	 lsls r5,r5,#29
 1767 0020 33D5     	 bpl .L175
 1768              	.LBB99:
 1769              	.LBB100:
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1770              	 .loc 1 404 0 is_stmt 1
 1771 0022 9568     	 ldr r5,[r2,#8]
 1772 0024 0195     	 str r5,[sp,#4]
 1773 0026 5569     	 ldr r5,[r2,#20]
 1774              	.LBE100:
 1775              	.LBE99:
1273:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
 1776              	 .loc 1 1273 0
 1777 0028 D768     	 ldr r7,[r2,#12]
1271:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 1778              	 .loc 1 1271 0
 1779 002a D362     	 str r3,[r2,#44]
 1780 002c A942     	 cmp r1,r5
 1781 002e 28BF     	 it cs
 1782 0030 2946     	 movcs r1,r5
 1783              	.LVL201:
 1784              	.LBB108:
 1785              	.LBB103:
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1786              	 .loc 1 404 0
 1787 0032 019D     	 ldr r5,[sp,#4]
 1788              	.LBE103:
 1789              	.LBE108:
1274:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartReadXfer(ep);
 1790              	 .loc 1 1274 0
 1791 0034 1361     	 str r3,[r2,#16]
 1792              	.LVL202:
 1793              	.LBB109:
 1794              	.LBB104:
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1795              	 .loc 1 404 0
 1796 0036 C5F31205 	 ubfx r5,r5,#0,#19
 1797 003a 8D42     	 cmp r5,r1
 1798 003c 28BF     	 it cs
 1799 003e 0D46     	 movcs r5,r1
 1800              	.LBE104:
 1801              	.LBE109:
1270:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 1802              	 .loc 1 1270 0
 1803 0040 1163     	 str r1,[r2,#48]
 1804 0042 9562     	 str r5,[r2,#40]
1273:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
 1805              	 .loc 1 1273 0
 1806 0044 5762     	 str r7,[r2,#36]
 1807              	.LBB110:
 1808              	.LBB105:
 412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1809              	 .loc 1 412 0
 1810 0046 345D     	 ldrb r4,[r6,r4]
 1811 0048 2407     	 lsls r4,r4,#28
 1812 004a 22D0     	 beq .L177
 424:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1813              	 .loc 1 424 0
 1814 004c 002D     	 cmp r5,#0
 1815 004e 37D1     	 bne .L171
 427:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 1816              	 .loc 1 427 0
 1817 0050 0122     	 movs r2,#1
 1818              	.LVL203:
 1819 0052 62F3DC43 	 bfi r3,r2,#19,#10
 1820              	.LVL204:
 1821              	.L170:
 436:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1822              	 .loc 1 436 0
 1823 0056 214A     	 ldr r2,.L179+4
 1824 0058 1268     	 ldr r2,[r2]
 1825 005a 527B     	 ldrb r2,[r2,#13]
 1826 005c 2ABB     	 cbnz r2,.L178
 1827              	.L172:
 439:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1828              	 .loc 1 439 0
 1829 005e 3422     	 movs r2,#52
 1830 0060 02FB00F0 	 mul r0,r2,r0
 1831              	.LVL205:
 1832 0064 3118     	 adds r1,r6,r0
 1833 0066 325C     	 ldrb r2,[r6,r0]
 1834 0068 496A     	 ldr r1,[r1,#36]
 1835 006a 02F00F02 	 and r2,r2,#15
 1836 006e 06EB8202 	 add r2,r6,r2,lsl#2
 1837 0072 D2F8C421 	 ldr r2,[r2,#452]
 1838 0076 5161     	 str r1,[r2,#20]
 1839              	.L173:
 442:../Libraries/XMCLib/src/xmc_usbd.c ****  
 1840              	 .loc 1 442 0
 1841 0078 1361     	 str r3,[r2,#16]
 444:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 1842              	 .loc 1 444 0
 1843 007a 1368     	 ldr r3,[r2]
 1844              	.LVL206:
 1845              	.LBE105:
 1846              	.LBE110:
1276:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1847              	 .loc 1 1276 0
 1848 007c 0020     	 movs r0,#0
 1849              	.LVL207:
 1850              	.LBB111:
 1851              	.LBB106:
 446:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 1852              	 .loc 1 446 0
 1853 007e 43F00443 	 orr r3,r3,#-2080374784
 1854              	.LVL208:
 447:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1855              	 .loc 1 447 0
 1856 0082 1360     	 str r3,[r2]
 1857              	.LBE106:
 1858              	.LBE111:
1279:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1859              	 .loc 1 1279 0
 1860 0084 02B0     	 add sp,sp,#8
 1861              	.LCFI14:
 1862              	 .cfi_remember_state
 1863              	 .cfi_def_cfa_offset 16
 1864              	 
 1865 0086 F0BC     	 pop {r4,r5,r6,r7}
 1866              	.LCFI15:
 1867              	 .cfi_restore 4
 1868              	 .cfi_restore 5
 1869              	 .cfi_restore 6
 1870              	 .cfi_restore 7
 1871              	 .cfi_def_cfa_offset 0
 1872 0088 7047     	 bx lr
 1873              	.LVL209:
 1874              	.L175:
 1875              	.LCFI16:
 1876              	 .cfi_restore_state
1260:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1877              	 .loc 1 1260 0
 1878 008a 0120     	 movs r0,#1
 1879              	.LVL210:
1279:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1880              	 .loc 1 1279 0
 1881 008c 02B0     	 add sp,sp,#8
 1882              	.LCFI17:
 1883              	 .cfi_remember_state
 1884              	 .cfi_def_cfa_offset 16
 1885              	 
 1886 008e F0BC     	 pop {r4,r5,r6,r7}
 1887              	.LCFI18:
 1888              	 .cfi_restore 7
 1889              	 .cfi_restore 6
 1890              	 .cfi_restore 5
 1891              	 .cfi_restore 4
 1892              	 .cfi_def_cfa_offset 0
 1893 0090 7047     	 bx lr
 1894              	.LVL211:
 1895              	.L177:
 1896              	.LCFI19:
 1897              	 .cfi_restore_state
 1898              	.LBB112:
 1899              	.LBB107:
 1900              	.LBB101:
 417:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 1901              	 .loc 1 417 0
 1902 0092 0122     	 movs r2,#1
 1903              	.LVL212:
 1904 0094 62F3D443 	 bfi r3,r2,#19,#2
 1905              	.LVL213:
 1906              	.LBE101:
 436:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1907              	 .loc 1 436 0
 1908 0098 104A     	 ldr r2,.L179+4
 1909 009a 1268     	 ldr r2,[r2]
 1910 009c 527B     	 ldrb r2,[r2,#13]
 1911              	.LBB102:
 418:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 1912              	 .loc 1 418 0
 1913 009e 43F0C043 	 orr r3,r3,#1610612736
 1914              	.LVL214:
 419:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1915              	 .loc 1 419 0
 1916 00a2 61F30603 	 bfi r3,r1,#0,#7
 1917              	.LVL215:
 1918              	.LBE102:
 436:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1919              	 .loc 1 436 0
 1920 00a6 002A     	 cmp r2,#0
 1921 00a8 D9D0     	 beq .L172
 1922              	.LVL216:
 1923              	.L178:
 1924 00aa 3422     	 movs r2,#52
 1925 00ac 02FB00F0 	 mul r0,r2,r0
 1926              	.LVL217:
 1927 00b0 325C     	 ldrb r2,[r6,r0]
 1928 00b2 02F00F02 	 and r2,r2,#15
 1929 00b6 06EB8202 	 add r2,r6,r2,lsl#2
 1930 00ba D2F8C421 	 ldr r2,[r2,#452]
 1931 00be DBE7     	 b .L173
 1932              	.LVL218:
 1933              	.L171:
 432:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 1934              	 .loc 1 432 0
 1935 00c0 5268     	 ldr r2,[r2,#4]
 1936              	.LVL219:
 1937 00c2 C2F3C621 	 ubfx r1,r2,#11,#7
 1938              	.LVL220:
 1939 00c6 4A1E     	 subs r2,r1,#1
 1940 00c8 2A44     	 add r2,r2,r5
 1941 00ca B2FBF1F2 	 udiv r2,r2,r1
 1942 00ce 62F3DC43 	 bfi r3,r2,#19,#10
 1943              	.LVL221:
 433:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 1944              	 .loc 1 433 0
 1945 00d2 65F31203 	 bfi r3,r5,#0,#19
 1946 00d6 BEE7     	 b .L170
 1947              	.L180:
 1948              	 .align 2
 1949              	.L179:
 1950 00d8 00000000 	 .word xmc_device
 1951 00dc 00000000 	 .word usbd_init
 1952              	.LBE107:
 1953              	.LBE112:
 1954              	 .cfi_endproc
 1955              	.LFE192:
 1957              	 .section .text.XMC_USBD_EndpointWrite,"ax",%progbits
 1958              	 .align 2
 1959              	 .global XMC_USBD_EndpointWrite
 1960              	 .thumb
 1961              	 .thumb_func
 1963              	XMC_USBD_EndpointWrite:
 1964              	.LFB194:
1308:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
 1965              	 .loc 1 1308 0
 1966              	 .cfi_startproc
 1967              	 
 1968              	 
 1969              	.LVL222:
 1970 0000 2DE9F843 	 push {r3,r4,r5,r6,r7,r8,r9,lr}
 1971              	.LCFI20:
 1972              	 .cfi_def_cfa_offset 32
 1973              	 .cfi_offset 3,-32
 1974              	 .cfi_offset 4,-28
 1975              	 .cfi_offset 5,-24
 1976              	 .cfi_offset 6,-20
 1977              	 .cfi_offset 7,-16
 1978              	 .cfi_offset 8,-12
 1979              	 .cfi_offset 9,-8
 1980              	 .cfi_offset 14,-4
1309:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
 1981              	 .loc 1 1309 0
 1982 0004 00F00F07 	 and r7,r0,#15
 1983              	.LVL223:
1311:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1984              	 .loc 1 1311 0
 1985 0008 3426     	 movs r6,#52
 1986 000a 394D     	 ldr r5,.L193
 1987 000c 06FB07F6 	 mul r6,r6,r7
 1988 0010 AC19     	 adds r4,r5,r6
 1989              	.LVL224:
 1990 0012 2379     	 ldrb r3,[r4,#4]
 1991 0014 5B07     	 lsls r3,r3,#29
 1992 0016 53D5     	 bpl .L188
1315:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1993              	 .loc 1 1315 0
 1994 0018 6368     	 ldr r3,[r4,#4]
 1995 001a 1807     	 lsls r0,r3,#28
 1996              	.LVL225:
 1997 001c 57D4     	 bmi .L189
1321:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1998              	 .loc 1 1321 0
 1999 001e 236A     	 ldr r3,[r4,#32]
1326:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->xferBuffer = ep->inBuffer;
 2000              	 .loc 1 1326 0
 2001 0020 E069     	 ldr r0,[r4,#28]
 2002 0022 9A42     	 cmp r2,r3
 2003 0024 28BF     	 it cs
 2004 0026 1A46     	 movcs r2,r3
 2005              	.LVL226:
 2006 0028 9146     	 mov r9,r2
 2007              	.LVL227:
 2008 002a FFF7FEFF 	 bl memcpy
 2009              	.LVL228:
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
 2010              	 .loc 1 1332 0
 2011 002e 6368     	 ldr r3,[r4,#4]
1327:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
 2012              	 .loc 1 1327 0
 2013 0030 D4F81CC0 	 ldr ip,[r4,#28]
 2014 0034 C4F824C0 	 str ip,[r4,#36]
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
 2015              	 .loc 1 1332 0
 2016 0038 43F00803 	 orr r3,r3,#8
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
 2017              	 .loc 1 1331 0
 2018 003c 0021     	 movs r1,#0
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
 2019              	 .loc 1 1332 0
 2020 003e 6360     	 str r3,[r4,#4]
 2021              	.LVL229:
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
 2022              	 .loc 1 1331 0
 2023 0040 E162     	 str r1,[r4,#44]
1328:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
 2024              	 .loc 1 1328 0
 2025 0042 C4F83090 	 str r9,[r4,#48]
 2026              	.LBB115:
 2027              	.LBB116:
 464:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2028              	 .loc 1 464 0
 2029 0046 A85D     	 ldrb r0,[r5,r6]
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2030              	 .loc 1 466 0
 2031 0048 A368     	 ldr r3,[r4,#8]
 464:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2032              	 .loc 1 464 0
 2033 004a 00F00F00 	 and r0,r0,#15
 2034 004e 00F16A0E 	 add lr,r0,#106
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2035              	 .loc 1 466 0
 2036 0052 C3F31202 	 ubfx r2,r3,#0,#19
 464:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2037              	 .loc 1 464 0
 2038 0056 55F82E80 	 ldr r8,[r5,lr,lsl#2]
 2039 005a 4A45     	 cmp r2,r9
 2040 005c 28BF     	 it cs
 2041 005e 4A46     	 movcs r2,r9
 2042 0060 D8F800E0 	 ldr lr,[r8]
 2043              	.LVL230:
 2044 0064 A262     	 str r2,[r4,#40]
 474:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2045              	 .loc 1 474 0
 2046 0066 AAB3     	 cbz r2,.L191
 481:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2047              	 .loc 1 481 0
 2048 0068 AB5D     	 ldrb r3,[r5,r6]
 2049 006a 1B07     	 lsls r3,r3,#28
 2050 006c 2BD0     	 beq .L192
 490:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 2051              	 .loc 1 490 0
 2052 006e 6368     	 ldr r3,[r4,#4]
 2053 0070 C3F3C624 	 ubfx r4,r3,#11,#7
 2054              	.LVL231:
 2055 0074 631E     	 subs r3,r4,#1
 2056 0076 9BB2     	 uxth r3,r3
 2057 0078 13FA82F3 	 uxtah r3,r3,r2
 489:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 2058              	 .loc 1 489 0
 2059 007c C2F31202 	 ubfx r2,r2,#0,#19
 490:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 2060              	 .loc 1 490 0
 2061 0080 93FBF4F3 	 sdiv r3,r3,r4
 2062 0084 C3F30903 	 ubfx r3,r3,#0,#10
 2063              	.L186:
 493:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2064              	 .loc 1 493 0
 2065 0088 1A4C     	 ldr r4,.L193+4
 2066 008a 2468     	 ldr r4,[r4]
 2067 008c 647B     	 ldrb r4,[r4,#13]
 2068 008e 62F31201 	 bfi r1,r2,#0,#19
 2069              	.LVL232:
 2070 0092 63F3DC41 	 bfi r1,r3,#19,#10
 2071 0096 0CBB     	 cbnz r4,.L187
 496:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2072              	 .loc 1 496 0
 2073 0098 C8F814C0 	 str ip,[r8,#20]
 2074              	.L184:
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 2075              	 .loc 1 506 0
 2076 009c 3423     	 movs r3,#52
 2077 009e 03FB07F7 	 mul r7,r3,r7
 2078              	.LVL233:
 2079 00a2 EA19     	 adds r2,r5,r7
 2080 00a4 EB5D     	 ldrb r3,[r5,r7]
 2081              	.LBE116:
 2082              	.LBE115:
1335:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2083              	 .loc 1 1335 0
 2084 00a6 106B     	 ldr r0,[r2,#48]
 2085              	.LVL234:
 2086              	.LBB120:
 2087              	.LBB117:
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 2088              	 .loc 1 506 0
 2089 00a8 03F00F03 	 and r3,r3,#15
 2090 00ac 6A33     	 adds r3,r3,#106
 508:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 2091              	 .loc 1 508 0
 2092 00ae 4EF0044E 	 orr lr,lr,#-2080374784
 2093              	.LVL235:
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 2094              	 .loc 1 506 0
 2095 00b2 55F82330 	 ldr r3,[r5,r3,lsl#2]
 2096 00b6 1961     	 str r1,[r3,#16]
 2097              	.LVL236:
 509:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2098              	 .loc 1 509 0
 2099 00b8 C3F800E0 	 str lr,[r3]
 2100 00bc BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 2101              	.LVL237:
 2102              	.L188:
 2103              	.LBE117:
 2104              	.LBE120:
1313:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2105              	 .loc 1 1313 0
 2106 00c0 0120     	 movs r0,#1
 2107              	.LVL238:
 2108 00c2 BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 2109              	.LVL239:
 2110              	.L192:
 2111              	.LBB121:
 2112              	.LBB118:
 485:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2113              	 .loc 1 485 0
 2114 00c6 C2F31202 	 ubfx r2,r2,#0,#19
 483:../Libraries/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 2115              	 .loc 1 483 0
 2116 00ca 0123     	 movs r3,#1
 2117 00cc DCE7     	 b .L186
 2118              	.LVL240:
 2119              	.L189:
 2120              	.LBE118:
 2121              	.LBE121:
1317:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2122              	 .loc 1 1317 0
 2123 00ce 0020     	 movs r0,#0
 2124              	.LVL241:
1338:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2125              	 .loc 1 1338 0
 2126 00d0 BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 2127              	.LVL242:
 2128              	.L191:
 2129              	.LBB122:
 2130              	.LBB119:
 477:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2131              	 .loc 1 477 0
 2132 00d4 0123     	 movs r3,#1
 2133 00d6 63F3DC41 	 bfi r1,r3,#19,#10
 2134              	.LVL243:
 2135 00da DFE7     	 b .L184
 2136              	.LVL244:
 2137              	.L187:
 498:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2138              	 .loc 1 498 0
 2139 00dc 012C     	 cmp r4,#1
 2140 00de DDD1     	 bne .L184
 501:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2141              	 .loc 1 501 0
 2142 00e0 D5F8A421 	 ldr r2,[r5,#420]
 2143 00e4 536B     	 ldr r3,[r2,#52]
 2144 00e6 8440     	 lsls r4,r4,r0
 2145 00e8 1C43     	 orrs r4,r4,r3
 2146 00ea 5463     	 str r4,[r2,#52]
 2147 00ec D6E7     	 b .L184
 2148              	.L194:
 2149 00ee 00BF     	 .align 2
 2150              	.L193:
 2151 00f0 00000000 	 .word xmc_device
 2152 00f4 00000000 	 .word usbd_init
 2153              	.LBE119:
 2154              	.LBE122:
 2155              	 .cfi_endproc
 2156              	.LFE194:
 2158              	 .section .text.XMC_USBD_lDeviceActive,"ax",%progbits
 2159              	 .align 2
 2160              	 .global XMC_USBD_lDeviceActive
 2161              	 .thumb
 2162              	 .thumb_func
 2164              	XMC_USBD_lDeviceActive:
 2165              	.LFB162:
 181:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 2166              	 .loc 1 181 0
 2167              	 .cfi_startproc
 2168              	 
 2169              	 
 2170              	 
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2171              	 .loc 1 184 0
 2172 0000 027B     	 ldrb r2,[r0,#12]
 2173 0002 002A     	 cmp r2,#0
 2174 0004 70D0     	 beq .L206
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2175              	 .loc 1 186 0
 2176 0006 394B     	 ldr r3,.L243
 2177 0008 5968     	 ldr r1,[r3,#4]
 2178 000a 0807     	 lsls r0,r1,#28
 2179 000c 56BF     	 itet pl
 2180 000e 5868     	 ldrpl r0,[r3,#4]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2181              	 .loc 1 188 0
 2182 0010 0120     	 movmi r0,#1
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2183              	 .loc 1 186 0
 2184 0012 C0F30010 	 ubfxpl r0,r0,#4,#1
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2185              	 .loc 1 184 0
 2186 0016 012A     	 cmp r2,#1
 2187 0018 57D9     	 bls .L242
 181:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 2188              	 .loc 1 181 0
 2189 001a 10B4     	 push {r4}
 2190              	.LCFI21:
 2191              	 .cfi_def_cfa_offset 4
 2192              	 .cfi_offset 4,-4
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2193              	 .loc 1 186 0
 2194 001c 996B     	 ldr r1,[r3,#56]
 2195 001e 334C     	 ldr r4,.L243
 2196 0020 0907     	 lsls r1,r1,#28
 2197 0022 53D4     	 bmi .L208
 2198 0024 A16B     	 ldr r1,[r4,#56]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2199              	 .loc 1 188 0
 2200 0026 11F0100F 	 tst r1,#16
 2201 002a 18BF     	 it ne
 2202 002c 0120     	 movne r0,#1
 2203              	.L199:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2204              	 .loc 1 184 0
 2205 002e 022A     	 cmp r2,#2
 2206 0030 49D0     	 beq .L196
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2207              	 .loc 1 186 0
 2208 0032 D96E     	 ldr r1,[r3,#108]
 2209 0034 2D4C     	 ldr r4,.L243
 2210 0036 0907     	 lsls r1,r1,#28
 2211 0038 54D4     	 bmi .L210
 2212 003a E16E     	 ldr r1,[r4,#108]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2213              	 .loc 1 188 0
 2214 003c 11F0100F 	 tst r1,#16
 2215 0040 18BF     	 it ne
 2216 0042 0120     	 movne r0,#1
 2217              	.L200:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2218              	 .loc 1 184 0
 2219 0044 032A     	 cmp r2,#3
 2220 0046 3ED0     	 beq .L196
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2221              	 .loc 1 186 0
 2222 0048 D3F8A010 	 ldr r1,[r3,#160]
 2223 004c 274C     	 ldr r4,.L243
 2224 004e 0907     	 lsls r1,r1,#28
 2225 0050 46D4     	 bmi .L212
 2226 0052 D4F8A010 	 ldr r1,[r4,#160]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2227              	 .loc 1 188 0
 2228 0056 11F0100F 	 tst r1,#16
 2229 005a 18BF     	 it ne
 2230 005c 0120     	 movne r0,#1
 2231              	.L201:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2232              	 .loc 1 184 0
 2233 005e 042A     	 cmp r2,#4
 2234 0060 31D0     	 beq .L196
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2235              	 .loc 1 186 0
 2236 0062 D3F8D410 	 ldr r1,[r3,#212]
 2237 0066 214C     	 ldr r4,.L243
 2238 0068 0907     	 lsls r1,r1,#28
 2239 006a 37D4     	 bmi .L214
 2240 006c D4F8D410 	 ldr r1,[r4,#212]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2241              	 .loc 1 188 0
 2242 0070 11F0100F 	 tst r1,#16
 2243 0074 18BF     	 it ne
 2244 0076 0120     	 movne r0,#1
 2245              	.L202:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2246              	 .loc 1 184 0
 2247 0078 052A     	 cmp r2,#5
 2248 007a 24D0     	 beq .L196
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2249              	 .loc 1 186 0
 2250 007c D3F80811 	 ldr r1,[r3,#264]
 2251 0080 1A4C     	 ldr r4,.L243
 2252 0082 0907     	 lsls r1,r1,#28
 2253 0084 28D4     	 bmi .L216
 2254 0086 D4F80811 	 ldr r1,[r4,#264]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2255              	 .loc 1 188 0
 2256 008a 11F0100F 	 tst r1,#16
 2257 008e 18BF     	 it ne
 2258 0090 0120     	 movne r0,#1
 2259              	.L203:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2260              	 .loc 1 184 0
 2261 0092 062A     	 cmp r2,#6
 2262 0094 17D0     	 beq .L196
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2263              	 .loc 1 186 0
 2264 0096 D3F83C11 	 ldr r1,[r3,#316]
 2265 009a 144C     	 ldr r4,.L243
 2266 009c 0907     	 lsls r1,r1,#28
 2267 009e 19D4     	 bmi .L218
 2268 00a0 D4F83C11 	 ldr r1,[r4,#316]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2269              	 .loc 1 188 0
 2270 00a4 11F0100F 	 tst r1,#16
 2271 00a8 18BF     	 it ne
 2272 00aa 0120     	 movne r0,#1
 2273              	.L204:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2274              	 .loc 1 184 0
 2275 00ac 072A     	 cmp r2,#7
 2276 00ae 0AD0     	 beq .L196
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2277              	 .loc 1 186 0
 2278 00b0 D3F87031 	 ldr r3,[r3,#368]
 2279 00b4 0D4A     	 ldr r2,.L243
 2280 00b6 1B07     	 lsls r3,r3,#28
 2281 00b8 0AD4     	 bmi .L220
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2282              	 .loc 1 186 0 is_stmt 0 discriminator 1
 2283 00ba D2F87031 	 ldr r3,[r2,#368]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2284              	 .loc 1 188 0 is_stmt 1 discriminator 1
 2285 00be 13F0100F 	 tst r3,#16
 2286 00c2 18BF     	 it ne
 2287 00c4 0120     	 movne r0,#1
 2288              	.L196:
 192:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2289              	 .loc 1 192 0
 2290 00c6 5DF8044B 	 ldr r4,[sp],#4
 2291              	.LCFI22:
 2292              	 .cfi_restore 4
 2293              	 .cfi_def_cfa_offset 0
 2294              	.L242:
 2295 00ca 7047     	 bx lr
 2296              	.L208:
 2297              	.LCFI23:
 2298              	 .cfi_def_cfa_offset 4
 2299              	 .cfi_offset 4,-4
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2300              	 .loc 1 188 0
 2301 00cc 0120     	 movs r0,#1
 2302 00ce AEE7     	 b .L199
 2303              	.L220:
 2304 00d0 0120     	 movs r0,#1
 2305 00d2 F8E7     	 b .L196
 2306              	.L218:
 2307 00d4 0120     	 movs r0,#1
 2308 00d6 E9E7     	 b .L204
 2309              	.L216:
 2310 00d8 0120     	 movs r0,#1
 2311 00da DAE7     	 b .L203
 2312              	.L214:
 2313 00dc 0120     	 movs r0,#1
 2314 00de CBE7     	 b .L202
 2315              	.L212:
 2316 00e0 0120     	 movs r0,#1
 2317 00e2 BCE7     	 b .L201
 2318              	.L210:
 2319 00e4 0120     	 movs r0,#1
 2320 00e6 ADE7     	 b .L200
 2321              	.L206:
 2322              	.LCFI24:
 2323              	 .cfi_def_cfa_offset 0
 2324              	 .cfi_restore 4
 183:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
 2325              	 .loc 1 183 0
 2326 00e8 1046     	 mov r0,r2
 2327 00ea 7047     	 bx lr
 2328              	.L244:
 2329              	 .align 2
 2330              	.L243:
 2331 00ec 00000000 	 .word xmc_device
 2332              	 .cfi_endproc
 2333              	.LFE162:
 2335              	 .section .text.XMC_USBD_IRQHandler,"ax",%progbits
 2336              	 .align 2
 2337              	 .global XMC_USBD_IRQHandler
 2338              	 .thumb
 2339              	 .thumb_func
 2341              	XMC_USBD_IRQHandler:
 2342              	.LFB177:
 867:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 2343              	 .loc 1 867 0
 2344              	 .cfi_startproc
 2345              	 
 2346              	 
 2347              	.LVL245:
 2348 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 2349              	.LCFI25:
 2350              	 .cfi_def_cfa_offset 36
 2351              	 .cfi_offset 4,-36
 2352              	 .cfi_offset 5,-32
 2353              	 .cfi_offset 6,-28
 2354              	 .cfi_offset 7,-24
 2355              	 .cfi_offset 8,-20
 2356              	 .cfi_offset 9,-16
 2357              	 .cfi_offset 10,-12
 2358              	 .cfi_offset 11,-8
 2359              	 .cfi_offset 14,-4
 871:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 2360              	 .loc 1 871 0
 2361 0004 B94C     	 ldr r4,.L423
 2362 0006 D4F8A031 	 ldr r3,[r4,#416]
 2363 000a 9D69     	 ldr r5,[r3,#24]
 2364              	.LVL246:
 872:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 2365              	 .loc 1 872 0
 2366 000c 5A69     	 ldr r2,[r3,#20]
 867:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 2367              	 .loc 1 867 0
 2368 000e 8FB0     	 sub sp,sp,#60
 2369              	.LCFI26:
 2370              	 .cfi_def_cfa_offset 96
 872:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 2371              	 .loc 1 872 0
 2372 0010 02EA050A 	 and r10,r2,r5
 2373              	.LVL247:
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2374              	 .loc 1 874 0
 2375 0014 5FFA8AF6 	 uxtb r6,r10
 867:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 2376              	 .loc 1 867 0
 2377 0018 0190     	 str r0,[sp,#4]
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2378              	 .loc 1 874 0
 2379 001a 3007     	 lsls r0,r6,#28
 2380              	.LVL248:
 2381 001c 00F1EB82 	 bmi .L400
 879:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2382              	 .loc 1 879 0
 2383 0020 019A     	 ldr r2,[sp,#4]
 2384 0022 527B     	 ldrb r2,[r2,#13]
 2385 0024 012A     	 cmp r2,#1
 2386 0026 00F0F382 	 beq .L401
 2387              	.L247:
 891:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2388              	 .loc 1 891 0
 2389 002a CAF30725 	 ubfx r5,r10,#8,#8
 2390              	.LVL249:
 2391 002e 6907     	 lsls r1,r5,#29
 2392              	.LVL250:
 2393              	.LBB185:
 2394              	.LBB186:
 992:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2395              	 .loc 1 992 0
 2396 0030 44BF     	 itt mi
 2397 0032 4FF48062 	 movmi r2,#1024
 2398              	.LVL251:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2399              	 .loc 1 1003 0
 2400 0036 5A61     	 strmi r2,[r3,#20]
 2401              	.LBE186:
 2402              	.LBE185:
 895:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2403              	 .loc 1 895 0
 2404 0038 2A07     	 lsls r2,r5,#28
 2405              	.LVL252:
 2406 003a 00F1D282 	 bmi .L402
 2407              	.LVL253:
 2408              	.L264:
 900:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2409              	 .loc 1 900 0
 2410 003e 4FEA1A66 	 lsr r6,r10,#24
 2411 0042 3706     	 lsls r7,r6,#24
 2412 0044 00F1C382 	 bmi .L403
 2413              	.LVL254:
 2414              	.L265:
 905:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2415              	 .loc 1 905 0
 2416 0048 7006     	 lsls r0,r6,#25
 2417 004a 00F1B082 	 bmi .L404
 2418              	.LVL255:
 2419              	.L266:
 911:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2420              	 .loc 1 911 0
 2421 004e E906     	 lsls r1,r5,#27
 2422 0050 00F1F181 	 bmi .L405
 2423              	.LVL256:
 2424              	.L267:
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2425              	 .loc 1 915 0
 2426 0054 AA06     	 lsls r2,r5,#26
 2427              	.LVL257:
 2428 0056 00F1D381 	 bmi .L406
 2429              	.LVL258:
 2430              	.L272:
 919:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2431              	 .loc 1 919 0
 2432 005a 1AF4802F 	 tst r10,#262144
 2433 005e 40F00581 	 bne .L407
 2434              	.LVL259:
 2435              	.L273:
 923:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2436              	 .loc 1 923 0
 2437 0062 1AF4002F 	 tst r10,#524288
 2438 0066 18D1     	 bne .L408
 2439              	.LVL260:
 2440              	.L298:
 927:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2441              	 .loc 1 927 0
 2442 0068 1AF0040F 	 tst r10,#4
 2443 006c 02D1     	 bne .L409
 932:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2444              	 .loc 1 932 0
 2445 006e 0FB0     	 add sp,sp,#60
 2446              	.LCFI27:
 2447              	 .cfi_remember_state
 2448              	 .cfi_def_cfa_offset 36
 2449              	 
 2450 0070 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 2451              	.L409:
 2452              	.LCFI28:
 2453              	 .cfi_restore_state
 2454              	.LBB187:
 2455              	.LBB188:
 606:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 2456              	 .loc 1 606 0
 2457 0074 5D68     	 ldr r5,[r3,#4]
 2458              	.LVL261:
 607:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2459              	 .loc 1 607 0
 2460 0076 6807     	 lsls r0,r5,#29
 2461              	.LVL262:
 2462 0078 0BD5     	 bpl .L317
 609:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 2463              	 .loc 1 609 0
 2464 007a 94F8FE31 	 ldrb r3,[r4,#510]
 610:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2465              	 .loc 1 610 0
 2466 007e D4F80022 	 ldr r2,[r4,#512]
 2467              	.LVL263:
 609:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 2468              	 .loc 1 609 0
 2469 0082 6FF38203 	 bfc r3,#2,#1
 2470 0086 84F8FE31 	 strb r3,[r4,#510]
 610:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2471              	 .loc 1 610 0
 2472 008a 0120     	 movs r0,#1
 2473 008c 9047     	 blx r2
 2474              	.LVL264:
 2475 008e D4F8A031 	 ldr r3,[r4,#416]
 2476              	.LVL265:
 2477              	.L317:
 2478              	.LBB189:
 2479              	.LBB190:
1013:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2480              	 .loc 1 1013 0
 2481 0092 5D60     	 str r5,[r3,#4]
 2482              	.LBE190:
 2483              	.LBE189:
 2484              	.LBE188:
 2485              	.LBE187:
 932:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2486              	 .loc 1 932 0
 2487 0094 0FB0     	 add sp,sp,#60
 2488              	.LCFI29:
 2489              	 .cfi_remember_state
 2490              	 .cfi_def_cfa_offset 36
 2491              	 
 2492 0096 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 2493              	.LVL266:
 2494              	.L408:
 2495              	.LCFI30:
 2496              	 .cfi_restore_state
 2497              	.LBB191:
 2498              	.LBB192:
 667:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2499              	 .loc 1 667 0
 2500 009a D4F8A421 	 ldr r2,[r4,#420]
 2501              	.LVL267:
 2502 009e 9369     	 ldr r3,[r2,#24]
 669:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2503              	 .loc 1 669 0
 2504 00a0 D769     	 ldr r7,[r2,#28]
 671:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2505              	 .loc 1 671 0
 2506 00a2 5269     	 ldr r2,[r2,#20]
 2507 00a4 0292     	 str r2,[sp,#8]
 2508              	.LVL268:
 673:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 2509              	 .loc 1 673 0
 2510 00a6 C3F30F43 	 ubfx r3,r3,#16,#16
 2511              	.LVL269:
 675:../Libraries/XMCLib/src/xmc_usbd.c ****  
 2512              	 .loc 1 675 0
 2513 00aa 0022     	 movs r2,#0
 2514              	.LVL270:
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2515              	 .loc 1 677 0
 2516 00ac 13EA1747 	 ands r7,r3,r7,lsr#16
 2517              	.LVL271:
 675:../Libraries/XMCLib/src/xmc_usbd.c ****  
 2518              	 .loc 1 675 0
 2519 00b0 0392     	 str r2,[sp,#12]
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2520              	 .loc 1 677 0
 2521 00b2 00F09780 	 beq .L315
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2522              	 .loc 1 694 0
 2523 00b6 DDF804B0 	 ldr fp,[sp,#4]
 2524 00ba CDF810A0 	 str r10,[sp,#16]
 2525 00be 1646     	 mov r6,r2
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2526              	 .loc 1 677 0
 2527 00c0 3B46     	 mov r3,r7
 2528 00c2 1546     	 mov r5,r2
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2529              	 .loc 1 694 0
 2530 00c4 4FF0340C 	 mov ip,#52
 2531 00c8 B846     	 mov r8,r7
 2532              	.LVL272:
 2533              	.L314:
 681:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2534              	 .loc 1 681 0
 2535 00ca DF07     	 lsls r7,r3,#31
 2536 00cc 40F18180 	 bpl .L300
 2537              	.LVL273:
 685:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2538              	 .loc 1 685 0
 2539 00d0 06F17009 	 add r9,r6,#112
 2540 00d4 04EB8902 	 add r2,r4,r9,lsl#2
 2541 00d8 0299     	 ldr r1,[sp,#8]
 2542              	.LVL274:
 2543 00da 5268     	 ldr r2,[r2,#4]
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2544              	 .loc 1 686 0
 2545 00dc 9BF80D30 	 ldrb r3,[fp,#13]
 2546              	.LVL275:
 685:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2547              	 .loc 1 685 0
 2548 00e0 9768     	 ldr r7,[r2,#8]
 2549 00e2 0F40     	 ands r7,r7,r1
 2550              	.LVL276:
 691:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2551              	 .loc 1 691 0
 2552 00e4 5FFA87FA 	 uxtb r10,r7
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2553              	 .loc 1 686 0
 2554 00e8 002B     	 cmp r3,#0
 2555 00ea 40F08180 	 bne .L301
 688:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 2556              	 .loc 1 688 0
 2557 00ee 1169     	 ldr r1,[r2,#16]
 2558              	.LVL277:
 2559 00f0 0391     	 str r1,[sp,#12]
 2560              	.LVL278:
 691:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2561              	 .loc 1 691 0
 2562 00f2 1AF0080F 	 tst r10,#8
 2563 00f6 21D0     	 beq .L303
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2564              	 .loc 1 694 0
 2565 00f8 7C4A     	 ldr r2,.L423
 2566 00fa 0CFB0620 	 mla r0,ip,r6,r2
 2567              	.LVL279:
 699:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 2568              	 .loc 1 699 0
 2569 00fe 039A     	 ldr r2,[sp,#12]
 2570              	.LVL280:
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2571              	 .loc 1 694 0
 2572 0100 0179     	 ldrb r1,[r0,#4]
 2573              	.LVL281:
 699:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 2574              	 .loc 1 699 0
 2575 0102 C2F34172 	 ubfx r2,r2,#29,#2
 2576              	.LVL282:
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 2577              	 .loc 1 698 0
 2578 0106 D200     	 lsls r2,r2,#3
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2579              	 .loc 1 694 0
 2580 0108 63F34511 	 bfi r1,r3,#5,#1
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 2581              	 .loc 1 698 0
 2582 010c C2F11802 	 rsb r2,r2,#24
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2583              	 .loc 1 694 0
 2584 0110 0171     	 strb r1,[r0,#4]
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 2585              	 .loc 1 698 0
 2586 0112 0261     	 str r2,[r0,#16]
 2587              	.LVL283:
 2588              	.L320:
 705:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.EndpointEvent_cb(0U,XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 2589              	 .loc 1 705 0
 2590 0114 0CFB0643 	 mla r3,ip,r6,r4
 2591 0118 CDF804C0 	 str ip,[sp,#4]
 2592 011c 5A68     	 ldr r2,[r3,#4]
 2593 011e 22F01002 	 bic r2,r2,#16
 2594 0122 5A60     	 str r2,[r3,#4]
 706:../Libraries/XMCLib/src/xmc_usbd.c **** 				/* clear the interrupt */
 2595              	 .loc 1 706 0
 2596 0124 0020     	 movs r0,#0
 2597              	.LVL284:
 2598 0126 D4F80432 	 ldr r3,[r4,#516]
 2599 012a 0146     	 mov r1,r0
 2600 012c 9847     	 blx r3
 2601              	.LVL285:
 2602              	.LBB193:
 2603              	.LBB194:
1033:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2604              	 .loc 1 1033 0
 2605 012e 04EB8903 	 add r3,r4,r9,lsl#2
 2606 0132 0821     	 movs r1,#8
 2607 0134 5A68     	 ldr r2,[r3,#4]
 2608 0136 DDF804C0 	 ldr ip,[sp,#4]
 2609 013a 9160     	 str r1,[r2,#8]
 2610              	.LVL286:
 2611              	.L303:
 2612              	.LBE194:
 2613              	.LBE193:
 710:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2614              	 .loc 1 710 0
 2615 013c 1AF0010F 	 tst r10,#1
 2616 0140 46D0     	 beq .L304
 712:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2617              	 .loc 1 712 0
 2618 0142 9BF80D30 	 ldrb r3,[fp,#13]
 2619 0146 002B     	 cmp r3,#0
 2620 0148 63D0     	 beq .L305
 2621 014a 0CFB0643 	 mla r3,ip,r6,r4
 2622 014e 996A     	 ldr r1,[r3,#40]
 2623              	.LVL287:
 718:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2624              	 .loc 1 718 0
 2625 0150 0CFB0643 	 mla r3,ip,r6,r4
 2626 0154 1A6B     	 ldr r2,[r3,#48]
 2627 0156 8A42     	 cmp r2,r1
 2628 0158 72D0     	 beq .L410
 2629              	.L307:
 2630              	.LVL288:
 2631              	.LBB195:
 2632              	.LBB196:
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2633              	 .loc 1 404 0
 2634 015a 9868     	 ldr r0,[r3,#8]
 2635              	.LVL289:
 2636 015c C1EB020E 	 rsb lr,r1,r2
 2637 0160 C0F31200 	 ubfx r0,r0,#0,#19
 2638 0164 8645     	 cmp lr,r0
 2639 0166 0CFB06FE 	 mul lr,ip,r6
 406:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2640              	 .loc 1 406 0
 2641 016a 88BF     	 it hi
 2642 016c 0918     	 addhi r1,r1,r0
 2643 016e 04EB0E00 	 add r0,r4,lr
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2644              	 .loc 1 404 0
 2645 0172 98BF     	 it ls
 2646 0174 1146     	 movls r1,r2
 2647 0176 8162     	 str r1,[r0,#40]
 412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2648              	 .loc 1 412 0
 2649 0178 14F80EE0 	 ldrb lr,[r4,lr]
 2650 017c 1EF00F0F 	 tst lr,#15
 403:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 2651              	 .loc 1 403 0
 2652 0180 4FF00003 	 mov r3,#0
 2653              	.LVL290:
 2654 0184 00F1280A 	 add r10,r0,#40
 412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2655              	 .loc 1 412 0
 2656 0188 40F0AE82 	 bne .L309
 2657              	.LVL291:
 2658              	.LBB197:
 417:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 2659              	 .loc 1 417 0
 2660 018c 0121     	 movs r1,#1
 2661 018e 61F3D443 	 bfi r3,r1,#19,#2
 2662              	.LVL292:
 418:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 2663              	 .loc 1 418 0
 2664 0192 43F0C043 	 orr r3,r3,#1610612736
 2665              	.LVL293:
 419:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2666              	 .loc 1 419 0
 2667 0196 62F30603 	 bfi r3,r2,#0,#7
 2668              	.LVL294:
 2669              	.L310:
 2670              	.LBE197:
 436:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2671              	 .loc 1 436 0
 2672 019a 554A     	 ldr r2,.L423+4
 2673 019c 1268     	 ldr r2,[r2]
 2674 019e 527B     	 ldrb r2,[r2,#13]
 439:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2675              	 .loc 1 439 0
 2676 01a0 0CFB06F6 	 mul r6,ip,r6
 2677              	.LVL295:
 436:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2678              	 .loc 1 436 0
 2679 01a4 002A     	 cmp r2,#0
 2680 01a6 40F0A682 	 bne .L411
 439:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2681              	 .loc 1 439 0
 2682 01aa A25D     	 ldrb r2,[r4,r6]
 2683 01ac 02F00F02 	 and r2,r2,#15
 2684 01b0 A119     	 adds r1,r4,r6
 2685 01b2 04EB8202 	 add r2,r4,r2,lsl#2
 2686 01b6 486A     	 ldr r0,[r1,#36]
 2687 01b8 D2F8C411 	 ldr r1,[r2,#452]
 2688 01bc 4861     	 str r0,[r1,#20]
 2689              	.L313:
 442:../Libraries/XMCLib/src/xmc_usbd.c ****  
 2690              	 .loc 1 442 0
 2691 01be 0B61     	 str r3,[r1,#16]
 444:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 2692              	 .loc 1 444 0
 2693 01c0 0B68     	 ldr r3,[r1]
 2694              	.LVL296:
 2695 01c2 04EB8909 	 add r9,r4,r9,lsl#2
 2696              	.LVL297:
 446:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 2697              	 .loc 1 446 0
 2698 01c6 43F00443 	 orr r3,r3,#-2080374784
 2699              	.LVL298:
 2700 01ca D9F80420 	 ldr r2,[r9,#4]
 2701              	.LVL299:
 447:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2702              	 .loc 1 447 0
 2703 01ce 0B60     	 str r3,[r1]
 2704              	.LVL300:
 2705              	.L304:
 2706              	.LBE196:
 2707              	.LBE195:
 2708              	.LBB200:
 2709              	.LBB201:
1033:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2710              	 .loc 1 1033 0
 2711 01d0 9760     	 str r7,[r2,#8]
 2712              	.LVL301:
 2713              	.L300:
 2714              	.LBE201:
 2715              	.LBE200:
 733:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2716              	 .loc 1 733 0
 2717 01d2 0135     	 adds r5,r5,#1
 2718              	.LVL302:
 2719 01d4 EDB2     	 uxtb r5,r5
 2720              	.LVL303:
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2721              	 .loc 1 677 0
 2722 01d6 58FA05F3 	 asrs r3,r8,r5
 2723              	.LVL304:
 2724 01da 2E46     	 mov r6,r5
 2725 01dc 7FF475AF 	 bne .L314
 2726 01e0 DDF810A0 	 ldr r10,[sp,#16]
 2727              	.LVL305:
 2728              	.L315:
 2729              	.LBB202:
 2730              	.LBB203:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2731              	 .loc 1 1003 0
 2732 01e4 D4F8A031 	 ldr r3,[r4,#416]
 998:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2733              	 .loc 1 998 0
 2734 01e8 4FF40022 	 mov r2,#524288
 2735              	.LVL306:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2736              	 .loc 1 1003 0
 2737 01ec 5A61     	 str r2,[r3,#20]
 2738 01ee 3BE7     	 b .L298
 2739              	.LVL307:
 2740              	.L301:
 2741              	.LBE203:
 2742              	.LBE202:
 691:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2743              	 .loc 1 691 0
 2744 01f0 1AF0080F 	 tst r10,#8
 2745 01f4 A2D0     	 beq .L303
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2746              	 .loc 1 694 0
 2747 01f6 3D4A     	 ldr r2,.L423
 2748 01f8 0CFB0621 	 mla r1,ip,r6,r2
 701:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 2749              	 .loc 1 701 0
 2750 01fc 012B     	 cmp r3,#1
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2751              	 .loc 1 694 0
 2752 01fe 0A79     	 ldrb r2,[r1,#4]
 2753 0200 6FF34512 	 bfc r2,#5,#1
 2754 0204 0A71     	 strb r2,[r1,#4]
 701:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 2755              	 .loc 1 701 0
 2756 0206 85D1     	 bne .L320
 703:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 2757              	 .loc 1 703 0
 2758 0208 0B69     	 ldr r3,[r1,#16]
 2759 020a CA6A     	 ldr r2,[r1,#44]
 2760 020c 1344     	 add r3,r3,r2
 2761 020e 0B61     	 str r3,[r1,#16]
 2762 0210 80E7     	 b .L320
 2763              	.LVL308:
 2764              	.L305:
 2765              	.LBB204:
 714:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 2766              	 .loc 1 714 0
 2767 0212 0CFB0640 	 mla r0,ip,r6,r4
 2768              	.LVL309:
 2769 0216 039B     	 ldr r3,[sp,#12]
 2770              	.LVL310:
 2771 0218 C26A     	 ldr r2,[r0,#44]
 2772 021a 816A     	 ldr r1,[r0,#40]
 2773              	.LVL311:
 2774 021c C3F31203 	 ubfx r3,r3,#0,#19
 2775              	.LVL312:
 2776 0220 C2EB010E 	 rsb lr,r2,r1
 2777 0224 C3EB0E03 	 rsb r3,r3,lr
 2778              	.LVL313:
 715:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 2779              	 .loc 1 715 0
 2780 0228 02EB030E 	 add lr,r2,r3
 716:../Libraries/XMCLib/src/xmc_usbd.c **** 				}
 2781              	 .loc 1 716 0
 2782 022c 426A     	 ldr r2,[r0,#36]
 715:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 2783              	 .loc 1 715 0
 2784 022e C0F82CE0 	 str lr,[r0,#44]
 716:../Libraries/XMCLib/src/xmc_usbd.c **** 				}
 2785              	 .loc 1 716 0
 2786 0232 1344     	 add r3,r3,r2
 2787              	.LVL314:
 2788 0234 4362     	 str r3,[r0,#36]
 2789              	.LBE204:
 718:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2790              	 .loc 1 718 0
 2791 0236 0CFB0643 	 mla r3,ip,r6,r4
 2792 023a 1A6B     	 ldr r2,[r3,#48]
 2793 023c 8A42     	 cmp r2,r1
 2794 023e 8CD1     	 bne .L307
 2795              	.LVL315:
 2796              	.L410:
 2797 0240 CDF804C0 	 str ip,[sp,#4]
 721:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num,XMC_USBD_EP_EVENT_OUT);
 2798              	 .loc 1 721 0
 2799 0244 5A68     	 ldr r2,[r3,#4]
 720:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 2800              	 .loc 1 720 0
 2801 0246 D96A     	 ldr r1,[r3,#44]
 2802 0248 1961     	 str r1,[r3,#16]
 721:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num,XMC_USBD_EP_EVENT_OUT);
 2803              	 .loc 1 721 0
 2804 024a 22F01002 	 bic r2,r2,#16
 2805 024e 5A60     	 str r2,[r3,#4]
 722:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 2806              	 .loc 1 722 0
 2807 0250 264B     	 ldr r3,.L423
 2808 0252 2846     	 mov r0,r5
 2809              	.LVL316:
 2810 0254 D3F80432 	 ldr r3,[r3,#516]
 2811 0258 0121     	 movs r1,#1
 2812 025a 9847     	 blx r3
 2813              	.LVL317:
 2814 025c 234B     	 ldr r3,.L423
 2815 025e DDF804C0 	 ldr ip,[sp,#4]
 2816 0262 03EB8909 	 add r9,r3,r9,lsl#2
 2817 0266 D9F80420 	 ldr r2,[r9,#4]
 2818 026a B1E7     	 b .L304
 2819              	.LVL318:
 2820              	.L407:
 2821              	.LBE192:
 2822              	.LBE191:
 2823              	.LBB209:
 2824              	.LBB210:
 759:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2825              	 .loc 1 759 0
 2826 026c D4F8A431 	 ldr r3,[r4,#420]
 2827 0270 9A69     	 ldr r2,[r3,#24]
 2828              	.LVL319:
 761:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2829              	 .loc 1 761 0
 2830 0272 1B69     	 ldr r3,[r3,#16]
 2831 0274 0393     	 str r3,[sp,#12]
 2832              	.LVL320:
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2833              	 .loc 1 767 0
 2834 0276 97B2     	 uxth r7,r2
 2835 0278 002F     	 cmp r7,#0
 2836 027a 61D0     	 beq .L297
 2837 027c 0026     	 movs r6,#0
 2838 027e B646     	 mov lr,r6
 2839 0280 3B46     	 mov r3,r7
 2840              	.LVL321:
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2841              	 .loc 1 776 0
 2842 0282 4FF0340B 	 mov fp,#52
 2843 0286 CDF810A0 	 str r10,[sp,#16]
 2844 028a B946     	 mov r9,r7
 2845              	.LVL322:
 2846              	.L296:
 771:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2847              	 .loc 1 771 0
 2848 028c DB07     	 lsls r3,r3,#31
 2849              	.LVL323:
 2850 028e 4FD5     	 bpl .L275
 2851              	.LVL324:
 774:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2852              	 .loc 1 774 0
 2853 0290 0EF16A03 	 add r3,lr,#106
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2854              	 .loc 1 776 0
 2855 0294 0BFB0EF0 	 mul r0,fp,lr
 2856              	.LVL325:
 774:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2857              	 .loc 1 774 0
 2858 0298 0293     	 str r3,[sp,#8]
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2859              	 .loc 1 776 0
 2860 029a D4F8A4A1 	 ldr r10,[r4,#420]
 774:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2861              	 .loc 1 774 0
 2862 029e 54F82330 	 ldr r3,[r4,r3,lsl#2]
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2863              	 .loc 1 776 0
 2864 02a2 14F80080 	 ldrb r8,[r4,r0]
 774:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2865              	 .loc 1 774 0
 2866 02a6 9D68     	 ldr r5,[r3,#8]
 2867              	.LVL326:
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2868              	 .loc 1 776 0
 2869 02a8 DAF83410 	 ldr r1,[r10,#52]
 2870              	.LVL327:
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2871              	 .loc 1 778 0
 2872 02ac 019A     	 ldr r2,[sp,#4]
 2873              	.LVL328:
 777:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2874              	 .loc 1 777 0
 2875 02ae 039F     	 ldr r7,[sp,#12]
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2876              	 .loc 1 778 0
 2877 02b0 527B     	 ldrb r2,[r2,#13]
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2878              	 .loc 1 776 0
 2879 02b2 08F00F0C 	 and ip,r8,#15
 2880 02b6 21FA0CF1 	 lsr r1,r1,ip
 777:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2881              	 .loc 1 777 0
 2882 02ba C901     	 lsls r1,r1,#7
 2883 02bc C9B2     	 uxtb r1,r1
 2884 02be 3943     	 orrs r1,r1,r7
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2885              	 .loc 1 776 0
 2886 02c0 2044     	 add r0,r0,r4
 775:../Libraries/XMCLib/src/xmc_usbd.c ****       ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep->address_u.add
 2887              	 .loc 1 775 0
 2888 02c2 0D40     	 ands r5,r5,r1
 2889              	.LVL329:
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2890              	 .loc 1 778 0
 2891 02c4 B2B9     	 cbnz r2,.L276
 792:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2892              	 .loc 1 792 0
 2893 02c6 EF07     	 lsls r7,r5,#31
 780:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 2894              	 .loc 1 780 0
 2895 02c8 1A69     	 ldr r2,[r3,#16]
 2896              	.LVL330:
 792:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2897              	 .loc 1 792 0
 2898 02ca 30D5     	 bpl .L278
 797:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 2899              	 .loc 1 797 0
 2900 02cc 22F06042 	 bic r2,r2,#-536870912
 2901              	.LVL331:
 2902 02d0 002A     	 cmp r2,#0
 2903 02d2 00F01882 	 beq .L412
 2904 02d6 816A     	 ldr r1,[r0,#40]
 2905              	.L287:
 804:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2906              	 .loc 1 804 0
 2907 02d8 0BFB0E42 	 mla r2,fp,lr,r4
 2908 02dc 136B     	 ldr r3,[r2,#48]
 2909 02de 8B42     	 cmp r3,r1
 2910 02e0 33D1     	 bne .L288
 806:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2911              	 .loc 1 806 0
 2912 02e2 5368     	 ldr r3,[r2,#4]
 2913 02e4 23F00803 	 bic r3,r3,#8
 2914 02e8 5360     	 str r3,[r2,#4]
 2915 02ea 17E0     	 b .L289
 2916              	.L424:
 2917              	 .align 2
 2918              	.L423:
 2919 02ec 00000000 	 .word xmc_device
 2920 02f0 00000000 	 .word usbd_init
 2921              	.LVL332:
 2922              	.L276:
 782:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2923              	 .loc 1 782 0
 2924 02f4 012A     	 cmp r2,#1
 2925 02f6 02D1     	 bne .L285
 2926              	.LVL333:
 784:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2927              	 .loc 1 784 0
 2928 02f8 2906     	 lsls r1,r5,#24
 2929 02fa 00F12A82 	 bmi .L413
 2930              	.LVL334:
 2931              	.L285:
 792:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2932              	 .loc 1 792 0
 2933 02fe E907     	 lsls r1,r5,#31
 2934 0300 15D5     	 bpl .L278
 804:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2935              	 .loc 1 804 0
 2936 0302 0BFB0E40 	 mla r0,fp,lr,r4
 2937 0306 036B     	 ldr r3,[r0,#48]
 2938 0308 816A     	 ldr r1,[r0,#40]
 2939 030a 8B42     	 cmp r3,r1
 2940 030c 1DD1     	 bne .L288
 806:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2941              	 .loc 1 806 0
 2942 030e 4368     	 ldr r3,[r0,#4]
 807:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 2943              	 .loc 1 807 0
 2944 0310 012A     	 cmp r2,#1
 806:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2945              	 .loc 1 806 0
 2946 0312 23F00803 	 bic r3,r3,#8
 2947 0316 4360     	 str r3,[r0,#4]
 807:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 2948              	 .loc 1 807 0
 2949 0318 00F07382 	 beq .L414
 2950              	.L289:
 813:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 2951              	 .loc 1 813 0
 2952 031c D4F80432 	 ldr r3,[r4,#516]
 2953 0320 46F08000 	 orr r0,r6,#128
 2954 0324 0221     	 movs r1,#2
 2955 0326 9847     	 blx r3
 2956              	.LVL335:
 2957 0328 029B     	 ldr r3,[sp,#8]
 2958 032a 54F82330 	 ldr r3,[r4,r3,lsl#2]
 2959              	.L278:
 2960              	.LVL336:
 2961              	.LBB211:
 2962              	.LBB212:
1023:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2963              	 .loc 1 1023 0
 2964 032e 9D60     	 str r5,[r3,#8]
 2965              	.LVL337:
 2966              	.L275:
 2967              	.LBE212:
 2968              	.LBE211:
 825:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2969              	 .loc 1 825 0
 2970 0330 0136     	 adds r6,r6,#1
 2971              	.LVL338:
 2972 0332 F6B2     	 uxtb r6,r6
 2973              	.LVL339:
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2974              	 .loc 1 767 0
 2975 0334 59FA06F3 	 asrs r3,r9,r6
 2976 0338 B646     	 mov lr,r6
 2977 033a A7D1     	 bne .L296
 2978 033c DDF810A0 	 ldr r10,[sp,#16]
 2979              	.LVL340:
 2980              	.L297:
 2981              	.LBB214:
 2982              	.LBB215:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2983              	 .loc 1 1003 0
 2984 0340 D4F8A031 	 ldr r3,[r4,#416]
 2985 0344 0022     	 movs r2,#0
 2986              	.LVL341:
 2987 0346 5A61     	 str r2,[r3,#20]
 2988 0348 8BE6     	 b .L273
 2989              	.LVL342:
 2990              	.L288:
 2991              	.LBE215:
 2992              	.LBE214:
 2993              	.LBB216:
 2994              	.LBB217:
 464:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2995              	 .loc 1 464 0
 2996 034a 0BFB0EF2 	 mul r2,fp,lr
 2997 034e A018     	 adds r0,r4,r2
 2998 0350 A25C     	 ldrb r2,[r4,r2]
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2999              	 .loc 1 466 0
 3000 0352 8068     	 ldr r0,[r0,#8]
 3001 0354 C1EB0308 	 rsb r8,r1,r3
 3002 0358 C0F3120C 	 ubfx ip,r0,#0,#19
 464:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3003              	 .loc 1 464 0
 3004 035c 02F00F02 	 and r2,r2,#15
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3005              	 .loc 1 466 0
 3006 0360 E045     	 cmp r8,ip
 464:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3007              	 .loc 1 464 0
 3008 0362 0692     	 str r2,[sp,#24]
 3009 0364 02F16A02 	 add r2,r2,#106
 472:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3010              	 .loc 1 472 0
 3011 0368 28BF     	 it cs
 3012 036a 01EB0C03 	 addcs r3,r1,ip
 3013 036e 0BFB0EFC 	 mul ip,fp,lr
 464:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3014              	 .loc 1 464 0
 3015 0372 54F82220 	 ldr r2,[r4,r2,lsl#2]
 3016 0376 0592     	 str r2,[sp,#20]
 3017 0378 04EB0C01 	 add r1,r4,ip
 3018 037c 1268     	 ldr r2,[r2]
 3019              	.LVL343:
 3020 037e 8B62     	 str r3,[r1,#40]
 463:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 3021              	 .loc 1 463 0
 3022 0380 0020     	 movs r0,#0
 3023 0382 01F12808 	 add r8,r1,#40
 474:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3024              	 .loc 1 474 0
 3025 0386 002B     	 cmp r3,#0
 3026 0388 00F0DD81 	 beq .L415
 481:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3027              	 .loc 1 481 0
 3028 038c 14F80CC0 	 ldrb ip,[r4,ip]
 3029 0390 1CF00F0F 	 tst ip,#15
 3030 0394 00F0CF81 	 beq .L416
 490:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 3031              	 .loc 1 490 0
 3032 0398 4968     	 ldr r1,[r1,#4]
 489:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 3033              	 .loc 1 489 0
 3034 039a D8F80470 	 ldr r7,[r8,#4]
 490:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 3035              	 .loc 1 490 0
 3036 039e C1F3C62C 	 ubfx ip,r1,#11,#7
 3037 03a2 0CF1FF38 	 add r8,ip,#-1
 3038 03a6 D91B     	 subs r1,r3,r7
 489:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 3039              	 .loc 1 489 0
 3040 03a8 0B46     	 mov r3,r1
 490:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 3041              	 .loc 1 490 0
 3042 03aa 1FFA88F8 	 uxth r8,r8
 3043 03ae 18FA81F1 	 uxtah r1,r8,r1
 489:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 3044              	 .loc 1 489 0
 3045 03b2 C3F31203 	 ubfx r3,r3,#0,#19
 490:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 3046              	 .loc 1 490 0
 3047 03b6 91FBFCFC 	 sdiv ip,r1,ip
 3048 03ba CCF3090C 	 ubfx ip,ip,#0,#10
 3049              	.L294:
 493:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3050              	 .loc 1 493 0
 3051 03be C249     	 ldr r1,.L425
 3052 03c0 0968     	 ldr r1,[r1]
 3053 03c2 497B     	 ldrb r1,[r1,#13]
 3054 03c4 63F31200 	 bfi r0,r3,#0,#19
 3055              	.LVL344:
 3056 03c8 6CF3DC40 	 bfi r0,ip,#19,#10
 3057 03cc 0029     	 cmp r1,#0
 3058 03ce 40F00D82 	 bne .L295
 496:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 3059              	 .loc 1 496 0
 3060 03d2 0BFB0E43 	 mla r3,fp,lr,r4
 3061 03d6 0599     	 ldr r1,[sp,#20]
 3062 03d8 5B6A     	 ldr r3,[r3,#36]
 3063 03da 4B61     	 str r3,[r1,#20]
 3064              	.L292:
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 3065              	 .loc 1 506 0
 3066 03dc 0BFB0EFE 	 mul lr,fp,lr
 3067 03e0 029B     	 ldr r3,[sp,#8]
 3068 03e2 14F80E10 	 ldrb r1,[r4,lr]
 3069 03e6 54F82330 	 ldr r3,[r4,r3,lsl#2]
 3070 03ea 01F00F01 	 and r1,r1,#15
 3071 03ee 6A31     	 adds r1,r1,#106
 508:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 3072              	 .loc 1 508 0
 3073 03f0 42F00442 	 orr r2,r2,#-2080374784
 3074              	.LVL345:
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 3075              	 .loc 1 506 0
 3076 03f4 54F82110 	 ldr r1,[r4,r1,lsl#2]
 3077 03f8 0861     	 str r0,[r1,#16]
 3078              	.LVL346:
 509:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3079              	 .loc 1 509 0
 3080 03fa 0A60     	 str r2,[r1]
 3081              	.LVL347:
 3082              	.LBE217:
 3083              	.LBE216:
 3084              	.LBB220:
 3085              	.LBB213:
1023:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3086              	 .loc 1 1023 0
 3087 03fc 9D60     	 str r5,[r3,#8]
 3088 03fe 97E7     	 b .L275
 3089              	.LVL348:
 3090              	.L406:
 3091              	.LBE213:
 3092              	.LBE220:
 3093              	.LBE210:
 3094              	.LBE209:
 3095              	.LBB232:
 3096              	.LBB233:
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 3097              	 .loc 1 628 0
 3098 0400 D4F8A811 	 ldr r1,[r4,#424]
 633:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 3099              	 .loc 1 633 0
 3100 0404 94F8FE21 	 ldrb r2,[r4,#510]
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 3101              	 .loc 1 628 0
 3102 0408 0B68     	 ldr r3,[r1]
 636:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3103              	 .loc 1 636 0
 3104 040a D4F80052 	 ldr r5,[r4,#512]
 629:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 3105              	 .loc 1 629 0
 3106 040e 6FF30A03 	 bfc r3,#0,#11
 3107              	.LVL349:
 634:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3108              	 .loc 1 634 0
 3109 0412 42F00502 	 orr r2,r2,#5
 630:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3110              	 .loc 1 630 0
 3111 0416 0B60     	 str r3,[r1]
 636:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3112              	 .loc 1 636 0
 3113 0418 0220     	 movs r0,#2
 634:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3114              	 .loc 1 634 0
 3115 041a 84F8FE21 	 strb r2,[r4,#510]
 636:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3116              	 .loc 1 636 0
 3117 041e A847     	 blx r5
 3118              	.LVL350:
 639:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 3119              	 .loc 1 639 0
 3120 0420 D4F8A031 	 ldr r3,[r4,#416]
 3121 0424 DA68     	 ldr r2,[r3,#12]
 640:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 3122              	 .loc 1 640 0
 3123 0426 0921     	 movs r1,#9
 3124 0428 61F38D22 	 bfi r2,r1,#10,#4
 3125              	.LVL351:
 3126              	.LBB234:
 3127              	.LBB235:
 995:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 3128              	 .loc 1 995 0
 3129 042c 4FF40051 	 mov r1,#8192
 3130              	.LBE235:
 3131              	.LBE234:
 641:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3132              	 .loc 1 641 0
 3133 0430 DA60     	 str r2,[r3,#12]
 3134              	.LVL352:
 3135              	.LBB237:
 3136              	.LBB236:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3137              	 .loc 1 1003 0
 3138 0432 5961     	 str r1,[r3,#20]
 3139 0434 11E6     	 b .L272
 3140              	.LVL353:
 3141              	.L405:
 3142              	.LBE236:
 3143              	.LBE237:
 3144              	.LBE233:
 3145              	.LBE232:
 3146              	.LBB238:
 3147              	.LBB239:
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 3148              	 .loc 1 530 0
 3149 0436 D4F8A411 	 ldr r1,[r4,#420]
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 3150              	 .loc 1 537 0
 3151 043a D4F8C491 	 ldr r9,[r4,#452]
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 3152              	 .loc 1 530 0
 3153 043e 4A68     	 ldr r2,[r1,#4]
 3154              	.LVL354:
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 3155              	 .loc 1 537 0
 3156 0440 D4F8D471 	 ldr r7,[r4,#468]
 3157 0444 D4F8D861 	 ldr r6,[r4,#472]
 3158 0448 D4F8DC01 	 ldr r0,[r4,#476]
 531:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3159              	 .loc 1 531 0
 3160 044c 42F00102 	 orr r2,r2,#1
 3161              	.LVL355:
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 3162              	 .loc 1 537 0
 3163 0450 04F5E478 	 add r8,r4,#456
 3164 0454 98E80051 	 ldmia r8,{r8,ip,lr}
 3165              	.LVL356:
 532:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3166              	 .loc 1 532 0
 3167 0458 4A60     	 str r2,[r1,#4]
 3168              	.LVL357:
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 3169              	 .loc 1 537 0
 3170 045a D9F80020 	 ldr r2,[r9]
 3171              	.LVL358:
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 3172              	 .loc 1 538 0
 3173 045e 42F00062 	 orr r2,r2,#134217728
 3174              	.LVL359:
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 3175              	 .loc 1 539 0
 3176 0462 6FF35552 	 bfc r2,#21,#1
 3177              	.LVL360:
 540:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3178              	 .loc 1 540 0
 3179 0466 C9F80020 	 str r2,[r9]
 3180              	.LVL361:
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 3181              	 .loc 1 537 0
 3182 046a D8F80020 	 ldr r2,[r8]
 3183              	.LVL362:
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3184              	 .loc 1 554 0
 3185 046e DFF86892 	 ldr r9,.L425+16
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 3186              	 .loc 1 538 0
 3187 0472 42F00062 	 orr r2,r2,#134217728
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 3188              	 .loc 1 539 0
 3189 0476 6FF35552 	 bfc r2,#21,#1
 3190              	.LVL363:
 540:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3191              	 .loc 1 540 0
 3192 047a C8F80020 	 str r2,[r8]
 3193              	.LVL364:
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 3194              	 .loc 1 537 0
 3195 047e DCF80020 	 ldr r2,[ip]
 3196              	.LVL365:
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3197              	 .loc 1 554 0
 3198 0482 DFF85882 	 ldr r8,.L425+20
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 3199              	 .loc 1 538 0
 3200 0486 42F00062 	 orr r2,r2,#134217728
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 3201              	 .loc 1 539 0
 3202 048a 6FF35552 	 bfc r2,#21,#1
 3203              	.LVL366:
 540:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3204              	 .loc 1 540 0
 3205 048e CCF80020 	 str r2,[ip]
 3206              	.LVL367:
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 3207              	 .loc 1 537 0
 3208 0492 DEF80020 	 ldr r2,[lr]
 3209              	.LVL368:
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3210              	 .loc 1 554 0
 3211 0496 DFF848C2 	 ldr ip,.L425+24
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 3212              	 .loc 1 538 0
 3213 049a 42F00062 	 orr r2,r2,#134217728
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 3214              	 .loc 1 539 0
 3215 049e 6FF35552 	 bfc r2,#21,#1
 3216              	.LVL369:
 540:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3217              	 .loc 1 540 0
 3218 04a2 CEF80020 	 str r2,[lr]
 3219              	.LVL370:
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 3220              	 .loc 1 537 0
 3221 04a6 3A68     	 ldr r2,[r7]
 3222              	.LVL371:
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3223              	 .loc 1 554 0
 3224 04a8 DFF838E2 	 ldr lr,.L425+28
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 3225              	 .loc 1 538 0
 3226 04ac 42F00062 	 orr r2,r2,#134217728
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 3227              	 .loc 1 539 0
 3228 04b0 6FF35552 	 bfc r2,#21,#1
 3229              	.LVL372:
 540:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3230              	 .loc 1 540 0
 3231 04b4 3A60     	 str r2,[r7]
 3232              	.LVL373:
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 3233              	 .loc 1 537 0
 3234 04b6 3268     	 ldr r2,[r6]
 3235              	.LVL374:
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3236              	 .loc 1 554 0
 3237 04b8 844F     	 ldr r7,.L425+4
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 3238              	 .loc 1 538 0
 3239 04ba 42F00062 	 orr r2,r2,#134217728
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 3240              	 .loc 1 539 0
 3241 04be 6FF35552 	 bfc r2,#21,#1
 3242              	.LVL375:
 540:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3243              	 .loc 1 540 0
 3244 04c2 3260     	 str r2,[r6]
 3245              	.LVL376:
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 3246              	 .loc 1 537 0
 3247 04c4 0268     	 ldr r2,[r0]
 3248              	.LVL377:
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3249              	 .loc 1 554 0
 3250 04c6 824E     	 ldr r6,.L425+8
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 3251              	 .loc 1 538 0
 3252 04c8 42F00062 	 orr r2,r2,#134217728
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 3253              	 .loc 1 539 0
 3254 04cc 6FF35552 	 bfc r2,#21,#1
 3255              	.LVL378:
 540:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3256              	 .loc 1 540 0
 3257 04d0 0260     	 str r2,[r0]
 3258              	.LVL379:
 545:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 3259              	 .loc 1 545 0
 3260 04d2 4020     	 movs r0,#64
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 3261              	 .loc 1 548 0
 3262 04d4 4FF48012 	 mov r2,#1048576
 3263              	.LVL380:
 545:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 3264              	 .loc 1 545 0
 3265 04d8 5862     	 str r0,[r3,#36]
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 3266              	 .loc 1 549 0
 3267 04da 60F30F02 	 bfi r2,r0,#0,#16
 3268              	.LVL381:
 3269              	.LBB240:
 3270              	.LBB241:
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 3271              	 .loc 1 306 0
 3272 04de 0020     	 movs r0,#0
 3273              	.LBE241:
 3274              	.LBE240:
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 3275              	 .loc 1 550 0
 3276 04e0 9A62     	 str r2,[r3,#40]
 3277              	.LVL382:
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3278              	 .loc 1 554 0
 3279 04e2 C3F80491 	 str r9,[r3,#260]
 3280              	.LVL383:
 3281 04e6 C3F80881 	 str r8,[r3,#264]
 3282              	.LVL384:
 3283 04ea C3F80CC1 	 str ip,[r3,#268]
 3284              	.LVL385:
 3285 04ee C3F810E1 	 str lr,[r3,#272]
 3286              	.LVL386:
 3287 04f2 C3F81471 	 str r7,[r3,#276]
 3288              	.LVL387:
 3289 04f6 C3F81861 	 str r6,[r3,#280]
 3290              	.LVL388:
 3291              	.LBB243:
 3292              	.LBB242:
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 3293              	 .loc 1 306 0
 3294 04fa 0D90     	 str r0,[sp,#52]
 308:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 3295              	 .loc 1 308 0
 3296 04fc 0D9A     	 ldr r2,[sp,#52]
 3297              	.LVL389:
 3298 04fe 42F02002 	 orr r2,r2,#32
 3299 0502 0D92     	 str r2,[sp,#52]
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 3300              	 .loc 1 309 0
 3301 0504 0D9A     	 ldr r2,[sp,#52]
 3302 0506 22F4F862 	 bic r2,r2,#1984
 3303 050a 42F48062 	 orr r2,r2,#1024
 3304 050e 0D92     	 str r2,[sp,#52]
 310:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U;count < 1000U; count++){}
 3305              	 .loc 1 310 0
 3306 0510 0D9A     	 ldr r2,[sp,#52]
 3307 0512 1A61     	 str r2,[r3,#16]
 3308              	.LVL390:
 3309              	.L268:
 314:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.txfflsh);
 3310              	 .loc 1 314 0
 3311 0514 1A69     	 ldr r2,[r3,#16]
 3312 0516 0D92     	 str r2,[sp,#52]
 315:../Libraries/XMCLib/src/xmc_usbd.c ****     count = 0U;
 3313              	 .loc 1 315 0
 3314 0518 0D9A     	 ldr r2,[sp,#52]
 3315 051a C2F34012 	 ubfx r2,r2,#5,#1
 3316 051e 002A     	 cmp r2,#0
 3317 0520 F8D1     	 bne .L268
 3318              	.LVL391:
 3319              	.LBE242:
 3320              	.LBE243:
 3321              	.LBB244:
 3322              	.LBB245:
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 3323              	 .loc 1 306 0
 3324 0522 0C92     	 str r2,[sp,#48]
 308:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 3325              	 .loc 1 308 0
 3326 0524 0C9A     	 ldr r2,[sp,#48]
 3327 0526 42F02002 	 orr r2,r2,#32
 3328 052a 0C92     	 str r2,[sp,#48]
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 3329              	 .loc 1 309 0
 3330 052c 0C9A     	 ldr r2,[sp,#48]
 3331 052e 22F4F862 	 bic r2,r2,#1984
 3332 0532 0C92     	 str r2,[sp,#48]
 310:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U;count < 1000U; count++){}
 3333              	 .loc 1 310 0
 3334 0534 0C9A     	 ldr r2,[sp,#48]
 3335 0536 1A61     	 str r2,[r3,#16]
 3336              	.LVL392:
 3337              	.L269:
 314:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.txfflsh);
 3338              	 .loc 1 314 0
 3339 0538 1A69     	 ldr r2,[r3,#16]
 3340 053a 0C92     	 str r2,[sp,#48]
 315:../Libraries/XMCLib/src/xmc_usbd.c ****     count = 0U;
 3341              	 .loc 1 315 0
 3342 053c 0C9A     	 ldr r2,[sp,#48]
 3343 053e C2F34012 	 ubfx r2,r2,#5,#1
 3344 0542 002A     	 cmp r2,#0
 3345 0544 F8D1     	 bne .L269
 3346              	.LVL393:
 3347              	.LBE245:
 3348              	.LBE244:
 3349              	.LBB246:
 3350              	.LBB247:
 331:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 3351              	 .loc 1 331 0
 3352 0546 0B92     	 str r2,[sp,#44]
 332:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 3353              	 .loc 1 332 0
 3354 0548 0B9A     	 ldr r2,[sp,#44]
 3355 054a 42F01002 	 orr r2,r2,#16
 3356 054e 0B92     	 str r2,[sp,#44]
 334:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 3357              	 .loc 1 334 0
 3358 0550 0B9A     	 ldr r2,[sp,#44]
 3359 0552 1A61     	 str r2,[r3,#16]
 3360              	.L270:
 3361              	.LVL394:
 338:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.rxfflsh);
 3362              	 .loc 1 338 0
 3363 0554 1A69     	 ldr r2,[r3,#16]
 3364 0556 0B92     	 str r2,[sp,#44]
 339:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 3365              	 .loc 1 339 0
 3366 0558 0B9A     	 ldr r2,[sp,#44]
 3367 055a C2F30012 	 ubfx r2,r2,#4,#1
 3368 055e 002A     	 cmp r2,#0
 3369 0560 F8D1     	 bne .L270
 3370              	.LVL395:
 3371              	.LBE247:
 3372              	.LBE246:
 565:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daint.d32;
 3373              	 .loc 1 565 0
 3374 0562 4FF00113 	 mov r3,#65537
 3375              	.LVL396:
 566:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3376              	 .loc 1 566 0
 3377 0566 CB61     	 str r3,[r1,#28]
 3378              	.LVL397:
 3379              	.LBB248:
 3380              	.LBB249:
1043:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3381              	 .loc 1 1043 0
 3382 0568 4B69     	 ldr r3,[r1,#20]
 3383              	.LVL398:
 3384              	.LBE249:
 3385              	.LBE248:
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3386              	 .loc 1 583 0
 3387 056a 0198     	 ldr r0,[sp,#4]
 3388              	.LBB252:
 3389              	.LBB250:
1043:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3390              	 .loc 1 1043 0
 3391 056c 43F00F03 	 orr r3,r3,#15
 3392              	.LBE250:
 3393              	.LBE252:
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3394              	 .loc 1 583 0
 3395 0570 407B     	 ldrb r0,[r0,#13]
 3396              	.LBB253:
 3397              	.LBB251:
1043:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3398              	 .loc 1 1043 0
 3399 0572 4B61     	 str r3,[r1,#20]
 3400              	.LVL399:
 3401              	.LBE251:
 3402              	.LBE253:
 3403              	.LBB254:
 3404              	.LBB255:
1053:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3405              	 .loc 1 1053 0
 3406 0574 0B69     	 ldr r3,[r1,#16]
 3407 0576 43F00F03 	 orr r3,r3,#15
 3408 057a 0B61     	 str r3,[r1,#16]
 3409              	.LBE255:
 3410              	.LBE254:
 579:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 3411              	 .loc 1 579 0
 3412 057c 0B68     	 ldr r3,[r1]
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3413              	 .loc 1 583 0
 3414 057e 0128     	 cmp r0,#1
 580:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 3415              	 .loc 1 580 0
 3416 0580 62F30A13 	 bfi r3,r2,#4,#7
 3417              	.LVL400:
 581:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3418              	 .loc 1 581 0
 3419 0584 0B60     	 str r3,[r1]
 586:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3420              	 .loc 1 586 0
 3421 0586 08BF     	 it eq
 3422 0588 4A63     	 streq r2,[r1,#52]
 589:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 3423              	 .loc 1 589 0
 3424 058a 6368     	 ldr r3,[r4,#4]
 3425              	.LVL401:
 592:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3426              	 .loc 1 592 0
 3427 058c D4F80022 	 ldr r2,[r4,#512]
 589:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 3428              	 .loc 1 589 0
 3429 0590 23F01003 	 bic r3,r3,#16
 3430 0594 6360     	 str r3,[r4,#4]
 590:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3431              	 .loc 1 590 0
 3432 0596 6368     	 ldr r3,[r4,#4]
 3433 0598 23F00803 	 bic r3,r3,#8
 3434 059c 6360     	 str r3,[r4,#4]
 592:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3435              	 .loc 1 592 0
 3436 059e 0420     	 movs r0,#4
 3437 05a0 9047     	 blx r2
 3438              	.LVL402:
 3439              	.LBB256:
 3440              	.LBB257:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3441              	 .loc 1 1003 0
 3442 05a2 D4F8A031 	 ldr r3,[r4,#416]
 977:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 3443              	 .loc 1 977 0
 3444 05a6 4FF48052 	 mov r2,#4096
 3445              	.LVL403:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3446              	 .loc 1 1003 0
 3447 05aa 5A61     	 str r2,[r3,#20]
 3448 05ac 52E5     	 b .L267
 3449              	.LVL404:
 3450              	.L404:
 3451              	.LBE257:
 3452              	.LBE256:
 3453              	.LBE239:
 3454              	.LBE238:
 907:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 3455              	 .loc 1 907 0
 3456 05ae 94F8FE31 	 ldrb r3,[r4,#510]
 908:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 3457              	 .loc 1 908 0
 3458 05b2 D4F80022 	 ldr r2,[r4,#512]
 3459              	.LVL405:
 907:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 3460              	 .loc 1 907 0
 3461 05b6 43F00403 	 orr r3,r3,#4
 3462 05ba 84F8FE31 	 strb r3,[r4,#510]
 908:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 3463              	 .loc 1 908 0
 3464 05be 0020     	 movs r0,#0
 3465 05c0 9047     	 blx r2
 3466              	.LVL406:
 3467              	.LBB258:
 3468              	.LBB259:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3469              	 .loc 1 1003 0
 3470 05c2 D4F8A031 	 ldr r3,[r4,#416]
 974:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 3471              	 .loc 1 974 0
 3472 05c6 4FF08042 	 mov r2,#1073741824
 3473              	.LVL407:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3474              	 .loc 1 1003 0
 3475 05ca 5A61     	 str r2,[r3,#20]
 3476 05cc 3FE5     	 b .L266
 3477              	.LVL408:
 3478              	.L403:
 3479              	.LBE259:
 3480              	.LBE258:
 902:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 3481              	 .loc 1 902 0
 3482 05ce D4F80032 	 ldr r3,[r4,#512]
 3483 05d2 0820     	 movs r0,#8
 3484 05d4 9847     	 blx r3
 3485              	.LVL409:
 3486              	.LBB260:
 3487              	.LBB261:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3488              	 .loc 1 1003 0
 3489 05d6 D4F8A031 	 ldr r3,[r4,#416]
 986:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 3490              	 .loc 1 986 0
 3491 05da 4FF00042 	 mov r2,#-2147483648
 3492              	.LVL410:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3493              	 .loc 1 1003 0
 3494 05de 5A61     	 str r2,[r3,#20]
 3495 05e0 32E5     	 b .L265
 3496              	.LVL411:
 3497              	.L402:
 3498              	.LBE261:
 3499              	.LBE260:
 897:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 3500              	 .loc 1 897 0
 3501 05e2 D4F80032 	 ldr r3,[r4,#512]
 3502 05e6 0620     	 movs r0,#6
 3503 05e8 9847     	 blx r3
 3504              	.LVL412:
 3505              	.LBB262:
 3506              	.LBB263:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3507              	 .loc 1 1003 0
 3508 05ea D4F8A031 	 ldr r3,[r4,#416]
 980:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 3509              	 .loc 1 980 0
 3510 05ee 4FF40062 	 mov r2,#2048
 3511              	.LVL413:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3512              	 .loc 1 1003 0
 3513 05f2 5A61     	 str r2,[r3,#20]
 3514 05f4 23E5     	 b .L264
 3515              	.LVL414:
 3516              	.L400:
 3517              	.LBE263:
 3518              	.LBE262:
 876:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 3519              	 .loc 1 876 0
 3520 05f6 D4F80032 	 ldr r3,[r4,#512]
 3521 05fa 0920     	 movs r0,#9
 3522 05fc 9847     	 blx r3
 3523              	.LVL415:
 3524              	.LBB264:
 3525              	.LBB265:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3526              	 .loc 1 1003 0
 3527 05fe D4F8A031 	 ldr r3,[r4,#416]
 989:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 3528              	 .loc 1 989 0
 3529 0602 0822     	 movs r2,#8
 3530              	.LVL416:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3531              	 .loc 1 1003 0
 3532 0604 5A61     	 str r2,[r3,#20]
 3533              	.LBE265:
 3534              	.LBE264:
 879:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3535              	 .loc 1 879 0
 3536 0606 019A     	 ldr r2,[sp,#4]
 3537              	.LVL417:
 3538 0608 527B     	 ldrb r2,[r2,#13]
 3539 060a 012A     	 cmp r2,#1
 3540 060c 7FF40DAD 	 bne .L247
 3541              	.LVL418:
 3542              	.L401:
 881:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3543              	 .loc 1 881 0
 3544 0610 F106     	 lsls r1,r6,#27
 3545 0612 7FF50AAD 	 bpl .L247
 884:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 3546              	 .loc 1 884 0
 3547 0616 6FF30415 	 bfc r5,#4,#1
 885:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 3548              	 .loc 1 885 0
 3549 061a 9D61     	 str r5,[r3,#24]
 3550              	.LBB266:
 3551              	.LBB267:
 838:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3552              	 .loc 1 838 0
 3553 061c 1A6A     	 ldr r2,[r3,#32]
 840:../Libraries/XMCLib/src/xmc_usbd.c **** 	{
 3554              	 .loc 1 840 0
 3555 061e C2F34341 	 ubfx r1,r2,#17,#4
 3556 0622 0229     	 cmp r1,#2
 3557 0624 00F0FF80 	 beq .L249
 3558 0628 0629     	 cmp r1,#6
 3559 062a 49D1     	 bne .L248
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 3560              	 .loc 1 850 0
 3561 062c 02F00F07 	 and r7,r2,#15
 3562              	.LBB268:
 3563              	.LBB269:
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 3564              	 .loc 1 214 0
 3565 0630 04EB8701 	 add r1,r4,r7,lsl#2
 3566              	.LBE269:
 3567              	.LBE268:
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 3568              	 .loc 1 850 0
 3569 0634 C2F30A12 	 ubfx r2,r2,#4,#11
 3570              	.LVL419:
 3571              	.LBB271:
 3572              	.LBB270:
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 3573              	 .loc 1 214 0
 3574 0638 D1F8C411 	 ldr r1,[r1,#452]
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 3575              	 .loc 1 211 0
 3576 063c 2548     	 ldr r0,.L425+12
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 3577              	 .loc 1 214 0
 3578 063e 0968     	 ldr r1,[r1]
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 3579              	 .loc 1 211 0
 3580 0640 D4F8E081 	 ldr r8,[r4,#480]
 3581              	.LVL420:
 218:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3582              	 .loc 1 218 0
 3583 0644 0E04     	 lsls r6,r1,#16
 3584 0646 3BD5     	 bpl .L248
 222:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3585              	 .loc 1 222 0
 3586 0648 3421     	 movs r1,#52
 3587              	.LVL421:
 3588 064a 01FB070E 	 mla lr,r1,r7,r0
 3589              	.LVL422:
 3590 064e DEF82400 	 ldr r0,[lr,#36]
 3591 0652 A8B3     	 cbz r0,.L248
 3592              	.LVL423:
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3593              	 .loc 1 229 0
 3594 0654 5FEA920C 	 lsrs ip,r2,#2
 3595 0658 0BD0     	 beq .L260
 3596 065a 4FEA8C0C 	 lsl ip,ip,#2
 3597 065e 0021     	 movs r1,#0
 3598 0660 01E0     	 b .L261
 3599              	.LVL424:
 3600              	.L417:
 3601 0662 DEF82400 	 ldr r0,[lr,#36]
 3602              	.L261:
 231:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 3603              	 .loc 1 231 0
 3604 0666 D8F80060 	 ldr r6,[r8]
 3605 066a 4650     	 str r6,[r0,r1]
 3606 066c 0431     	 adds r1,r1,#4
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3607              	 .loc 1 229 0
 3608 066e 6145     	 cmp r1,ip
 3609 0670 F7D1     	 bne .L417
 3610              	.L260:
 234:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3611              	 .loc 1 234 0
 3612 0672 6245     	 cmp r2,ip
 3613 0674 1BD0     	 beq .L259
 236:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 3614              	 .loc 1 236 0
 3615 0676 D8F80080 	 ldr r8,[r8]
 3616              	.LVL425:
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 3617              	 .loc 1 237 0
 3618 067a 18D9     	 bls .L259
 239:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 3619              	 .loc 1 239 0
 3620 067c 4FF0340E 	 mov lr,#52
 3621              	.LVL426:
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 3622              	 .loc 1 237 0
 3623 0680 6346     	 mov r3,ip
 239:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 3624              	 .loc 1 239 0
 3625 0682 0EFB074E 	 mla lr,lr,r7,r4
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 3626              	 .loc 1 237 0
 3627 0686 0026     	 movs r6,#0
 239:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 3628              	 .loc 1 239 0
 3629 0688 4FF0FF09 	 mov r9,#255
 3630              	.LVL427:
 3631              	.L262:
 3632 068c 09FA06F1 	 lsl r1,r9,r6
 3633 0690 01EA0801 	 and r1,r1,r8
 3634 0694 DEF82400 	 ldr r0,[lr,#36]
 3635 0698 DFF838C0 	 ldr ip,.L425+12
 3636 069c F140     	 lsrs r1,r1,r6
 3637 069e C154     	 strb r1,[r0,r3]
 3638              	.LVL428:
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 3639              	 .loc 1 237 0
 3640 06a0 0133     	 adds r3,r3,#1
 3641              	.LVL429:
 3642 06a2 9A42     	 cmp r2,r3
 3643 06a4 06F10806 	 add r6,r6,#8
 3644 06a8 F0D1     	 bne .L262
 3645 06aa DCF8A031 	 ldr r3,[ip,#416]
 3646              	.LVL430:
 3647              	.L259:
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 3648              	 .loc 1 244 0
 3649 06ae 3426     	 movs r6,#52
 3650 06b0 06FB0746 	 mla r6,r6,r7,r4
 3651 06b4 F16A     	 ldr r1,[r6,#44]
 245:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3652              	 .loc 1 245 0
 3653 06b6 706A     	 ldr r0,[r6,#36]
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 3654              	 .loc 1 244 0
 3655 06b8 1144     	 add r1,r1,r2
 245:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3656              	 .loc 1 245 0
 3657 06ba 0244     	 add r2,r2,r0
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 3658              	 .loc 1 244 0
 3659 06bc F162     	 str r1,[r6,#44]
 245:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3660              	 .loc 1 245 0
 3661 06be 7262     	 str r2,[r6,#36]
 3662              	.LVL431:
 3663              	.L248:
 3664              	.LBE270:
 3665              	.LBE271:
 3666              	.LBE267:
 3667              	.LBE266:
 887:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 3668              	 .loc 1 887 0
 3669 06c0 45F01005 	 orr r5,r5,#16
 3670              	.LVL432:
 888:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 3671              	 .loc 1 888 0
 3672 06c4 9D61     	 str r5,[r3,#24]
 3673 06c6 B0E4     	 b .L247
 3674              	.L426:
 3675              	 .align 2
 3676              	.L425:
 3677 06c8 00000000 	 .word usbd_init
 3678 06cc 90001000 	 .word 1048720
 3679 06d0 A0001000 	 .word 1048736
 3680 06d4 00000000 	 .word xmc_device
 3681 06d8 50001000 	 .word 1048656
 3682 06dc 60001000 	 .word 1048672
 3683 06e0 70001000 	 .word 1048688
 3684 06e4 80001000 	 .word 1048704
 3685              	.LVL433:
 3686              	.L309:
 3687              	.LBB277:
 3688              	.LBB207:
 3689              	.LBB205:
 3690              	.LBB198:
 424:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3691              	 .loc 1 424 0
 3692 06e8 A9B9     	 cbnz r1,.L311
 426:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = 1U;
 3693              	 .loc 1 426 0
 3694 06ea 61F31203 	 bfi r3,r1,#0,#19
 3695              	.LVL434:
 427:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 3696              	 .loc 1 427 0
 3697 06ee 0122     	 movs r2,#1
 3698 06f0 62F3DC43 	 bfi r3,r2,#19,#10
 3699 06f4 51E5     	 b .L310
 3700              	.LVL435:
 3701              	.L411:
 3702 06f6 A25D     	 ldrb r2,[r4,r6]
 3703 06f8 02F00F02 	 and r2,r2,#15
 3704 06fc 04EB8202 	 add r2,r4,r2,lsl#2
 3705 0700 D2F8C411 	 ldr r1,[r2,#452]
 3706 0704 5BE5     	 b .L313
 3707              	.LVL436:
 3708              	.L412:
 3709              	.LBE198:
 3710              	.LBE205:
 3711              	.LBE207:
 3712              	.LBE277:
 3713              	.LBB278:
 3714              	.LBB230:
 3715              	.LBB221:
 799:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 3716              	 .loc 1 799 0
 3717 0706 C26A     	 ldr r2,[r0,#44]
 3718 0708 816A     	 ldr r1,[r0,#40]
 801:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 3719              	 .loc 1 801 0
 3720 070a 436A     	 ldr r3,[r0,#36]
 800:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 3721              	 .loc 1 800 0
 3722 070c C162     	 str r1,[r0,#44]
 799:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 3723              	 .loc 1 799 0
 3724 070e 8A1A     	 subs r2,r1,r2
 3725              	.LVL437:
 801:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 3726              	 .loc 1 801 0
 3727 0710 1A44     	 add r2,r2,r3
 3728              	.LVL438:
 3729 0712 4262     	 str r2,[r0,#36]
 3730 0714 E0E5     	 b .L287
 3731              	.LVL439:
 3732              	.L311:
 3733              	.LBE221:
 3734              	.LBE230:
 3735              	.LBE278:
 3736              	.LBB279:
 3737              	.LBB208:
 3738              	.LBB206:
 3739              	.LBB199:
 432:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 3740              	 .loc 1 432 0
 3741 0716 4268     	 ldr r2,[r0,#4]
 3742 0718 DAF80400 	 ldr r0,[r10,#4]
 3743 071c C2F3C622 	 ubfx r2,r2,#11,#7
 3744 0720 091A     	 subs r1,r1,r0
 3745 0722 02F1FF3E 	 add lr,r2,#-1
 3746 0726 8E44     	 add lr,lr,r1
 3747 0728 BEFBF2F2 	 udiv r2,lr,r2
 3748 072c 62F3DC43 	 bfi r3,r2,#19,#10
 3749              	.LVL440:
 433:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 3750              	 .loc 1 433 0
 3751 0730 61F31203 	 bfi r3,r1,#0,#19
 3752 0734 31E5     	 b .L310
 3753              	.LVL441:
 3754              	.L416:
 3755              	.LBE199:
 3756              	.LBE206:
 3757              	.LBE208:
 3758              	.LBE279:
 3759              	.LBB280:
 3760              	.LBB231:
 3761              	.LBB222:
 3762              	.LBB218:
 485:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 3763              	 .loc 1 485 0
 3764 0736 D8F80410 	 ldr r1,[r8,#4]
 3765 073a 5B1A     	 subs r3,r3,r1
 3766 073c C3F31203 	 ubfx r3,r3,#0,#19
 483:../Libraries/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 3767              	 .loc 1 483 0
 3768 0740 4FF0010C 	 mov ip,#1
 3769 0744 3BE6     	 b .L294
 3770              	.L415:
 476:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.pktcnt = 1U;
 3771              	 .loc 1 476 0
 3772 0746 63F31200 	 bfi r0,r3,#0,#19
 3773              	.LVL442:
 477:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3774              	 .loc 1 477 0
 3775 074a 0123     	 movs r3,#1
 3776 074c 63F3DC40 	 bfi r0,r3,#19,#10
 3777 0750 44E6     	 b .L292
 3778              	.LVL443:
 3779              	.L413:
 3780              	.LBE218:
 3781              	.LBE222:
 3782              	.LBB223:
 3783              	.LBB224:
 3784              	.LBB225:
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 3785              	 .loc 1 266 0
 3786 0752 08F00F08 	 and r8,r8,#15
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 3787              	 .loc 1 267 0
 3788 0756 08F16A01 	 add r1,r8,#106
 3789 075a 5E4F     	 ldr r7,.L427
 3790 075c 57F82110 	 ldr r1,[r7,r1,lsl#2]
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 3791              	 .loc 1 269 0
 3792 0760 C76A     	 ldr r7,[r0,#44]
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 3793              	 .loc 1 267 0
 3794 0762 D1F818C0 	 ldr ip,[r1,#24]
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 3795              	 .loc 1 266 0
 3796 0766 5B49     	 ldr r1,.L427
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 3797              	 .loc 1 269 0
 3798 0768 0697     	 str r7,[sp,#24]
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 3799              	 .loc 1 266 0
 3800 076a 08F17808 	 add r8,r8,#120
 3801 076e 51F82810 	 ldr r1,[r1,r8,lsl#2]
 3802 0772 0791     	 str r1,[sp,#28]
 3803              	.LVL444:
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3804              	 .loc 1 270 0
 3805 0774 816A     	 ldr r1,[r0,#40]
 3806              	.LVL445:
 3807 0776 C91B     	 subs r1,r1,r7
 3808              	.LVL446:
 3809 0778 0591     	 str r1,[sp,#20]
 3810 077a 51D0     	 beq .L418
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 3811              	 .loc 1 277 0
 3812 077c 01F10308 	 add r8,r1,#3
 3813              	.LVL447:
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3814              	 .loc 1 278 0
 3815 0780 1FFA8CFC 	 uxth ip,ip
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 3816              	 .loc 1 277 0
 3817 0784 4FEA9808 	 lsr r8,r8,#2
 3818              	.LVL448:
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3819              	 .loc 1 278 0
 3820 0788 E045     	 cmp r8,ip
 3821 078a 44D8     	 bhi .L419
 3822              	.L282:
 3823              	.LVL449:
 3824 078c 0BFB0E41 	 mla r1,fp,lr,r4
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3825              	 .loc 1 285 0
 3826 0790 B8F1000F 	 cmp r8,#0
 3827 0794 00F09B80 	 beq .L420
 3828 0798 0691     	 str r1,[sp,#24]
 3829 079a CDF82490 	 str r9,[sp,#36]
 3830 079e 496A     	 ldr r1,[r1,#36]
 3831 07a0 DDF81CC0 	 ldr ip,[sp,#28]
 3832 07a4 029F     	 ldr r7,[sp,#8]
 3833 07a6 DDF81890 	 ldr r9,[sp,#24]
 3834 07aa CDF820E0 	 str lr,[sp,#32]
 3835 07ae 0020     	 movs r0,#0
 3836              	.LVL450:
 3837              	.L284:
 287:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 3838              	 .loc 1 287 0
 3839 07b0 0968     	 ldr r1,[r1]
 3840 07b2 CCF80010 	 str r1,[ip]
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3841              	 .loc 1 285 0
 3842 07b6 D9F82410 	 ldr r1,[r9,#36]
 288:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 3843              	 .loc 1 288 0
 3844 07ba 0130     	 adds r0,r0,#1
 3845              	.LVL451:
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3846              	 .loc 1 285 0
 3847 07bc 0431     	 adds r1,r1,#4
 3848 07be 4045     	 cmp r0,r8
 3849 07c0 C9F82410 	 str r1,[r9,#36]
 3850 07c4 F4D1     	 bne .L284
 3851 07c6 0698     	 ldr r0,[sp,#24]
 3852              	.LVL452:
 3853 07c8 DDF820E0 	 ldr lr,[sp,#32]
 3854              	.LVL453:
 3855 07cc C06A     	 ldr r0,[r0,#44]
 3856 07ce DDF82490 	 ldr r9,[sp,#36]
 3857 07d2 0297     	 str r7,[sp,#8]
 3858 07d4 0690     	 str r0,[sp,#24]
 3859 07d6 0746     	 mov r7,r0
 3860              	.LVL454:
 3861              	.L281:
 3862              	.LBE225:
 3863              	.LBE224:
 788:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 3864              	 .loc 1 788 0
 3865 07d8 BC46     	 mov ip,r7
 3866 07da 059F     	 ldr r7,[sp,#20]
 3867 07dc 0BFB0E40 	 mla r0,fp,lr,r4
 3868 07e0 BC44     	 add ip,ip,r7
 789:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 3869              	 .loc 1 789 0
 3870 07e2 3944     	 add r1,r1,r7
 788:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 3871              	 .loc 1 788 0
 3872 07e4 C0F82CC0 	 str ip,[r0,#44]
 789:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 3873              	 .loc 1 789 0
 3874 07e8 4162     	 str r1,[r0,#36]
 3875 07ea 88E5     	 b .L285
 3876              	.LVL455:
 3877              	.L295:
 3878              	.LBE223:
 3879              	.LBB228:
 3880              	.LBB219:
 498:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3881              	 .loc 1 498 0
 3882 07ec 0129     	 cmp r1,#1
 3883 07ee 7FF4F5AD 	 bne .L292
 501:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 3884              	 .loc 1 501 0
 3885 07f2 069F     	 ldr r7,[sp,#24]
 3886 07f4 DAF83430 	 ldr r3,[r10,#52]
 3887 07f8 B940     	 lsls r1,r1,r7
 3888 07fa 1943     	 orrs r1,r1,r3
 3889 07fc CAF83410 	 str r1,[r10,#52]
 3890 0800 ECE5     	 b .L292
 3891              	.LVL456:
 3892              	.L414:
 3893              	.LBE219:
 3894              	.LBE228:
 811:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 3895              	 .loc 1 811 0
 3896 0802 344B     	 ldr r3,.L427
 3897 0804 D3F8A411 	 ldr r1,[r3,#420]
 3898 0808 4B6B     	 ldr r3,[r1,#52]
 3899 080a 02FA0EF2 	 lsl r2,r2,lr
 3900 080e 23EA0202 	 bic r2,r3,r2
 810:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 3901              	 .loc 1 810 0
 3902 0812 4A63     	 str r2,[r1,#52]
 3903 0814 82E5     	 b .L289
 3904              	.LVL457:
 3905              	.L419:
 3906              	.LBB229:
 3907              	.LBB227:
 3908              	.LBB226:
 281:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 3909              	 .loc 1 281 0
 3910 0816 4FEA8C01 	 lsl r1,ip,#2
 3911              	.LVL458:
 3912 081a 0591     	 str r1,[sp,#20]
 3913              	.LVL459:
 3914 081c E046     	 mov r8,ip
 3915 081e B5E7     	 b .L282
 3916              	.LVL460:
 3917              	.L418:
 3918 0820 416A     	 ldr r1,[r0,#36]
 3919              	.LVL461:
 3920 0822 069F     	 ldr r7,[sp,#24]
 3921 0824 D8E7     	 b .L281
 3922              	.LVL462:
 3923              	.L249:
 3924              	.LBE226:
 3925              	.LBE227:
 3926              	.LBE229:
 3927              	.LBE231:
 3928              	.LBE280:
 3929              	.LBB281:
 3930              	.LBB276:
 847:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 3931              	 .loc 1 847 0
 3932 0826 02F00F07 	 and r7,r2,#15
 3933              	.LBB272:
 3934              	.LBB273:
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 3935              	 .loc 1 214 0
 3936 082a 04EB8701 	 add r1,r4,r7,lsl#2
 3937              	.LBE273:
 3938              	.LBE272:
 847:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 3939              	 .loc 1 847 0
 3940 082e C2F30A10 	 ubfx r0,r2,#4,#11
 3941              	.LVL463:
 3942              	.LBB275:
 3943              	.LBB274:
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 3944              	 .loc 1 214 0
 3945 0832 D1F8C421 	 ldr r2,[r1,#452]
 3946              	.LVL464:
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 3947              	 .loc 1 211 0
 3948 0836 D4F8E0C1 	 ldr ip,[r4,#480]
 3949              	.LVL465:
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 3950              	 .loc 1 214 0
 3951 083a 1268     	 ldr r2,[r2]
 3952              	.LVL466:
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 3953              	 .loc 1 211 0
 3954 083c 2549     	 ldr r1,.L427
 218:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3955              	 .loc 1 218 0
 3956 083e 1204     	 lsls r2,r2,#16
 3957              	.LVL467:
 3958 0840 7FF53EAF 	 bpl .L248
 222:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3959              	 .loc 1 222 0
 3960 0844 3422     	 movs r2,#52
 3961 0846 02FB071E 	 mla lr,r2,r7,r1
 3962              	.LVL468:
 3963 084a DEF82410 	 ldr r1,[lr,#36]
 3964 084e 0029     	 cmp r1,#0
 3965 0850 3FF436AF 	 beq .L248
 3966              	.LVL469:
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3967              	 .loc 1 229 0
 3968 0854 5FEA9008 	 lsrs r8,r0,#2
 3969 0858 0FD0     	 beq .L251
 3970 085a 4FEA8808 	 lsl r8,r8,#2
 3971 085e 0022     	 movs r2,#0
 3972 0860 01E0     	 b .L253
 3973              	.LVL470:
 3974              	.L421:
 3975 0862 DEF82410 	 ldr r1,[lr,#36]
 3976              	.L253:
 231:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 3977              	 .loc 1 231 0
 3978 0866 DCF80060 	 ldr r6,[ip]
 3979 086a 8E50     	 str r6,[r1,r2]
 3980 086c 0432     	 adds r2,r2,#4
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3981              	 .loc 1 229 0
 3982 086e 4245     	 cmp r2,r8
 3983 0870 F7D1     	 bne .L421
 3984 0872 3422     	 movs r2,#52
 3985 0874 02FB0742 	 mla r2,r2,r7,r4
 3986 0878 516A     	 ldr r1,[r2,#36]
 3987              	.L251:
 234:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 3988              	 .loc 1 234 0
 3989 087a 4045     	 cmp r0,r8
 3990 087c 1ED0     	 beq .L254
 236:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 3991              	 .loc 1 236 0
 3992 087e DCF800C0 	 ldr ip,[ip]
 3993              	.LVL471:
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 3994              	 .loc 1 237 0
 3995 0882 1BD9     	 bls .L254
 3996 0884 4FF0340E 	 mov lr,#52
 3997              	.LVL472:
 3998 0888 4346     	 mov r3,r8
 3999 088a 0EFB074E 	 mla lr,lr,r7,r4
 4000 088e 0026     	 movs r6,#0
 239:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 4001              	 .loc 1 239 0
 4002 0890 4FF0FF08 	 mov r8,#255
 4003 0894 01E0     	 b .L256
 4004              	.LVL473:
 4005              	.L422:
 4006 0896 DEF82410 	 ldr r1,[lr,#36]
 4007              	.LVL474:
 4008              	.L256:
 4009 089a 08FA06F2 	 lsl r2,r8,r6
 4010 089e 02EA0C02 	 and r2,r2,ip
 4011 08a2 F240     	 lsrs r2,r2,r6
 4012 08a4 CA54     	 strb r2,[r1,r3]
 4013              	.LVL475:
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 4014              	 .loc 1 237 0
 4015 08a6 0133     	 adds r3,r3,#1
 4016              	.LVL476:
 4017 08a8 9842     	 cmp r0,r3
 4018 08aa 06F10806 	 add r6,r6,#8
 4019 08ae F2D1     	 bne .L422
 4020 08b0 3422     	 movs r2,#52
 4021 08b2 02FB0742 	 mla r2,r2,r7,r4
 4022 08b6 D4F8A031 	 ldr r3,[r4,#416]
 4023              	.LVL477:
 4024 08ba 516A     	 ldr r1,[r2,#36]
 4025              	.LVL478:
 4026              	.L254:
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 4027              	 .loc 1 244 0
 4028 08bc 3422     	 movs r2,#52
 4029 08be 02FB0747 	 mla r7,r2,r7,r4
 4030              	.LVL479:
 245:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 4031              	 .loc 1 245 0
 4032 08c2 0144     	 add r1,r1,r0
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 4033              	 .loc 1 244 0
 4034 08c4 FA6A     	 ldr r2,[r7,#44]
 245:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 4035              	 .loc 1 245 0
 4036 08c6 7962     	 str r1,[r7,#36]
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 4037              	 .loc 1 244 0
 4038 08c8 0244     	 add r2,r2,r0
 4039 08ca FA62     	 str r2,[r7,#44]
 4040 08cc F8E6     	 b .L248
 4041              	.LVL480:
 4042              	.L420:
 4043 08ce 496A     	 ldr r1,[r1,#36]
 4044 08d0 069F     	 ldr r7,[sp,#24]
 4045 08d2 81E7     	 b .L281
 4046              	.L428:
 4047              	 .align 2
 4048              	.L427:
 4049 08d4 00000000 	 .word xmc_device
 4050              	.LBE274:
 4051              	.LBE275:
 4052              	.LBE276:
 4053              	.LBE281:
 4054              	 .cfi_endproc
 4055              	.LFE177:
 4057              	 .section .text.XMC_USBD_Enable,"ax",%progbits
 4058              	 .align 2
 4059              	 .global XMC_USBD_Enable
 4060              	 .thumb
 4061              	 .thumb_func
 4063              	XMC_USBD_Enable:
 4064              	.LFB178:
 942:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 4065              	 .loc 1 942 0
 4066              	 .cfi_startproc
 4067              	 
 4068              	 
 4069 0000 10B5     	 push {r4,lr}
 4070              	.LCFI31:
 4071              	 .cfi_def_cfa_offset 8
 4072              	 .cfi_offset 4,-8
 4073              	 .cfi_offset 14,-4
 944:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 4074              	 .loc 1 944 0
 4075 0002 054C     	 ldr r4,.L431
 4076 0004 2046     	 mov r0,r4
 4077 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 4078              	.LVL481:
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 4079              	 .loc 1 947 0
 4080 000a 2046     	 mov r0,r4
 4081 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 4082              	.LVL482:
 949:../Libraries/XMCLib/src/xmc_usbd.c **** 
 4083              	 .loc 1 949 0
 4084 0010 BDE81040 	 pop {r4,lr}
 4085              	.LCFI32:
 4086              	 .cfi_restore 14
 4087              	 .cfi_restore 4
 4088              	 .cfi_def_cfa_offset 0
 948:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4089              	 .loc 1 948 0
 4090 0014 FFF7FEBF 	 b XMC_SCU_POWER_EnableUsb
 4091              	.LVL483:
 4092              	.L432:
 4093              	 .align 2
 4094              	.L431:
 4095 0018 80000020 	 .word 536871040
 4096              	 .cfi_endproc
 4097              	.LFE178:
 4099              	 .section .text.XMC_USBD_Disable,"ax",%progbits
 4100              	 .align 2
 4101              	 .global XMC_USBD_Disable
 4102              	 .thumb
 4103              	 .thumb_func
 4105              	XMC_USBD_Disable:
 4106              	.LFB179:
 955:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 4107              	 .loc 1 955 0
 4108              	 .cfi_startproc
 4109              	 
 4110              	 
 4111 0000 10B5     	 push {r4,lr}
 4112              	.LCFI33:
 4113              	 .cfi_def_cfa_offset 8
 4114              	 .cfi_offset 4,-8
 4115              	 .cfi_offset 14,-4
 957:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 4116              	 .loc 1 957 0
 4117 0002 054C     	 ldr r4,.L435
 4118 0004 2046     	 mov r0,r4
 4119 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 4120              	.LVL484:
 959:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 4121              	 .loc 1 959 0
 4122 000a 2046     	 mov r0,r4
 4123 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 4124              	.LVL485:
 962:../Libraries/XMCLib/src/xmc_usbd.c **** 
 4125              	 .loc 1 962 0
 4126 0010 BDE81040 	 pop {r4,lr}
 4127              	.LCFI34:
 4128              	 .cfi_restore 14
 4129              	 .cfi_restore 4
 4130              	 .cfi_def_cfa_offset 0
 961:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4131              	 .loc 1 961 0
 4132 0014 FFF7FEBF 	 b XMC_SCU_POWER_DisableUsb
 4133              	.LVL486:
 4134              	.L436:
 4135              	 .align 2
 4136              	.L435:
 4137 0018 80000020 	 .word 536871040
 4138              	 .cfi_endproc
 4139              	.LFE179:
 4141              	 .section .text.XMC_USBD_ClearEvent,"ax",%progbits
 4142              	 .align 2
 4143              	 .global XMC_USBD_ClearEvent
 4144              	 .thumb
 4145              	 .thumb_func
 4147              	XMC_USBD_ClearEvent:
 4148              	.LFB180:
 968:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 4149              	 .loc 1 968 0
 4150              	 .cfi_startproc
 4151              	 
 4152              	 
 4153              	 
 4154              	.LVL487:
 971:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 4155              	 .loc 1 971 0
 4156 0000 0D28     	 cmp r0,#13
 4157 0002 3FD8     	 bhi .L449
 4158 0004 DFE800F0 	 tbb [pc,r0]
 4159              	.L440:
 4160 0008 29       	 .byte (.L439-.L440)/2
 4161 0009 3E       	 .byte (.L449-.L440)/2
 4162 000a 3E       	 .byte (.L449-.L440)/2
 4163 000b 3E       	 .byte (.L449-.L440)/2
 4164 000c 30       	 .byte (.L441-.L440)/2
 4165 000d 3E       	 .byte (.L449-.L440)/2
 4166 000e 37       	 .byte (.L442-.L440)/2
 4167 000f 07       	 .byte (.L444-.L440)/2
 4168 0010 07       	 .byte (.L444-.L440)/2
 4169 0011 15       	 .byte (.L445-.L440)/2
 4170 0012 1B       	 .byte (.L446-.L440)/2
 4171 0013 22       	 .byte (.L447-.L440)/2
 4172 0014 3E       	 .byte (.L449-.L440)/2
 4173 0015 0E       	 .byte (.L448-.L440)/2
 4174              	 .p2align 1
 4175              	.L444:
 986:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 4176              	 .loc 1 986 0
 4177 0016 4FF00042 	 mov r2,#-2147483648
 4178              	.L438:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4179              	 .loc 1 1003 0
 4180 001a 1B4B     	 ldr r3,.L450
 4181 001c D3F8A031 	 ldr r3,[r3,#416]
 4182 0020 5A61     	 str r2,[r3,#20]
 4183 0022 7047     	 bx lr
 4184              	.L448:
 4185 0024 184B     	 ldr r3,.L450
 4186 0026 D3F8A031 	 ldr r3,[r3,#416]
 998:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 4187              	 .loc 1 998 0
 4188 002a 4FF40022 	 mov r2,#524288
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4189              	 .loc 1 1003 0
 4190 002e 5A61     	 str r2,[r3,#20]
 4191 0030 7047     	 bx lr
 4192              	.L445:
 4193 0032 154B     	 ldr r3,.L450
 4194 0034 D3F8A031 	 ldr r3,[r3,#416]
 989:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 4195              	 .loc 1 989 0
 4196 0038 0822     	 movs r2,#8
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4197              	 .loc 1 1003 0
 4198 003a 5A61     	 str r2,[r3,#20]
 4199 003c 7047     	 bx lr
 4200              	.L446:
 4201 003e 124B     	 ldr r3,.L450
 4202 0040 D3F8A031 	 ldr r3,[r3,#416]
 992:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 4203              	 .loc 1 992 0
 4204 0044 4FF48062 	 mov r2,#1024
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4205              	 .loc 1 1003 0
 4206 0048 5A61     	 str r2,[r3,#20]
 4207 004a 7047     	 bx lr
 4208              	.L447:
 4209 004c 0E4B     	 ldr r3,.L450
 4210 004e D3F8A031 	 ldr r3,[r3,#416]
 995:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 4211              	 .loc 1 995 0
 4212 0052 4FF40052 	 mov r2,#8192
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4213              	 .loc 1 1003 0
 4214 0056 5A61     	 str r2,[r3,#20]
 4215 0058 7047     	 bx lr
 4216              	.L439:
 4217 005a 0B4B     	 ldr r3,.L450
 4218 005c D3F8A031 	 ldr r3,[r3,#416]
 974:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 4219              	 .loc 1 974 0
 4220 0060 4FF08042 	 mov r2,#1073741824
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4221              	 .loc 1 1003 0
 4222 0064 5A61     	 str r2,[r3,#20]
 4223 0066 7047     	 bx lr
 4224              	.L441:
 4225 0068 074B     	 ldr r3,.L450
 4226 006a D3F8A031 	 ldr r3,[r3,#416]
 977:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 4227              	 .loc 1 977 0
 4228 006e 4FF48052 	 mov r2,#4096
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4229              	 .loc 1 1003 0
 4230 0072 5A61     	 str r2,[r3,#20]
 4231 0074 7047     	 bx lr
 4232              	.L442:
 4233 0076 044B     	 ldr r3,.L450
 4234 0078 D3F8A031 	 ldr r3,[r3,#416]
 980:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 4235              	 .loc 1 980 0
 4236 007c 4FF40062 	 mov r2,#2048
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4237              	 .loc 1 1003 0
 4238 0080 5A61     	 str r2,[r3,#20]
 4239 0082 7047     	 bx lr
 4240              	.L449:
 971:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 4241              	 .loc 1 971 0
 4242 0084 0022     	 movs r2,#0
 4243 0086 C8E7     	 b .L438
 4244              	.L451:
 4245              	 .align 2
 4246              	.L450:
 4247 0088 00000000 	 .word xmc_device
 4248              	 .cfi_endproc
 4249              	.LFE180:
 4251              	 .section .text.XMC_USBD_ClearEventINEP,"ax",%progbits
 4252              	 .align 2
 4253              	 .global XMC_USBD_ClearEventINEP
 4254              	 .thumb
 4255              	 .thumb_func
 4257              	XMC_USBD_ClearEventINEP:
 4258              	.LFB182:
1020:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
 4259              	 .loc 1 1020 0
 4260              	 .cfi_startproc
 4261              	 
 4262              	 
 4263              	 
 4264              	.LVL488:
1023:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4265              	 .loc 1 1023 0
 4266 0000 6A31     	 adds r1,r1,#106
 4267              	.LVL489:
 4268 0002 024B     	 ldr r3,.L453
 4269 0004 53F82130 	 ldr r3,[r3,r1,lsl#2]
 4270              	.LVL490:
 4271 0008 9860     	 str r0,[r3,#8]
 4272 000a 7047     	 bx lr
 4273              	.L454:
 4274              	 .align 2
 4275              	.L453:
 4276 000c 00000000 	 .word xmc_device
 4277              	 .cfi_endproc
 4278              	.LFE182:
 4280              	 .section .text.XMC_USBD_ClearEventOUTEP,"ax",%progbits
 4281              	 .align 2
 4282              	 .global XMC_USBD_ClearEventOUTEP
 4283              	 .thumb
 4284              	 .thumb_func
 4286              	XMC_USBD_ClearEventOUTEP:
 4287              	.LFB183:
1030:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
 4288              	 .loc 1 1030 0
 4289              	 .cfi_startproc
 4290              	 
 4291              	 
 4292              	 
 4293              	.LVL491:
1033:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4294              	 .loc 1 1033 0
 4295 0000 034B     	 ldr r3,.L456
 4296 0002 03EB8101 	 add r1,r3,r1,lsl#2
 4297              	.LVL492:
 4298 0006 D1F8C431 	 ldr r3,[r1,#452]
 4299 000a 9860     	 str r0,[r3,#8]
 4300 000c 7047     	 bx lr
 4301              	.L457:
 4302 000e 00BF     	 .align 2
 4303              	.L456:
 4304 0010 00000000 	 .word xmc_device
 4305              	 .cfi_endproc
 4306              	.LFE183:
 4308              	 .section .text.XMC_USBD_EnableEventOUTEP,"ax",%progbits
 4309              	 .align 2
 4310              	 .global XMC_USBD_EnableEventOUTEP
 4311              	 .thumb
 4312              	 .thumb_func
 4314              	XMC_USBD_EnableEventOUTEP:
 4315              	.LFB184:
1040:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint_data_t doepint;
 4316              	 .loc 1 1040 0
 4317              	 .cfi_startproc
 4318              	 
 4319              	 
 4320              	 
 4321              	.LVL493:
1043:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4322              	 .loc 1 1043 0
 4323 0000 034B     	 ldr r3,.L459
 4324 0002 D3F8A421 	 ldr r2,[r3,#420]
 4325 0006 5369     	 ldr r3,[r2,#20]
 4326 0008 1843     	 orrs r0,r0,r3
 4327              	.LVL494:
 4328 000a 5061     	 str r0,[r2,#20]
 4329 000c 7047     	 bx lr
 4330              	.L460:
 4331 000e 00BF     	 .align 2
 4332              	.L459:
 4333 0010 00000000 	 .word xmc_device
 4334              	 .cfi_endproc
 4335              	.LFE184:
 4337              	 .section .text.XMC_USBD_EnableEventINEP,"ax",%progbits
 4338              	 .align 2
 4339              	 .global XMC_USBD_EnableEventINEP
 4340              	 .thumb
 4341              	 .thumb_func
 4343              	XMC_USBD_EnableEventINEP:
 4344              	.LFB185:
1050:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint_data_t diepint;
 4345              	 .loc 1 1050 0
 4346              	 .cfi_startproc
 4347              	 
 4348              	 
 4349              	 
 4350              	.LVL495:
1053:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4351              	 .loc 1 1053 0
 4352 0000 034B     	 ldr r3,.L462
 4353 0002 D3F8A421 	 ldr r2,[r3,#420]
 4354 0006 1369     	 ldr r3,[r2,#16]
 4355 0008 1843     	 orrs r0,r0,r3
 4356              	.LVL496:
 4357 000a 1061     	 str r0,[r2,#16]
 4358 000c 7047     	 bx lr
 4359              	.L463:
 4360 000e 00BF     	 .align 2
 4361              	.L462:
 4362 0010 00000000 	 .word xmc_device
 4363              	 .cfi_endproc
 4364              	.LFE185:
 4366              	 .global Driver_USBD0
 4367              	 .comm usbd_init,4,4
 4368              	 .comm xmc_device,520,4
 4369              	 .global XMC_USBD_EP_IN_BUFFERSIZE
 4370              	 .global XMC_USBD_EP_OUT_BUFFERSIZE
 4371              	 .section .rodata.Driver_USBD0,"a",%progbits
 4372              	 .align 2
 4375              	Driver_USBD0:
 4376 0000 00000000 	 .word XMC_USBD_GetCapabilities
 4377 0004 00000000 	 .word XMC_USBD_Init
 4378 0008 00000000 	 .word XMC_USBD_Uninitialize
 4379 000c 00000000 	 .word XMC_USBD_DeviceConnect
 4380 0010 00000000 	 .word XMC_USBD_DeviceDisconnect
 4381 0014 00000000 	 .word XMC_USBD_DeviceGetState
 4382 0018 00000000 	 .word XMC_USBD_DeviceSetAddress
 4383 001c 00000000 	 .word XMC_USBD_EndpointConfigure
 4384 0020 00000000 	 .word XMC_USBD_EndpointUnconfigure
 4385 0024 00000000 	 .word XMC_USBD_EndpointStall
 4386 0028 00000000 	 .word XMC_USBD_EndpointReadStart
 4387 002c 00000000 	 .word XMC_USBD_EndpointRead
 4388 0030 00000000 	 .word XMC_USBD_EndpointWrite
 4389 0034 00000000 	 .word XMC_USBD_EndpointAbort
 4390 0038 00000000 	 .word XMC_USBD_GetFrameNumber
 4391 003c 00000000 	 .word XMC_USBD_IsEnumDone
 4392              	 .section USB_RAM,"aw",%progbits
 4393              	 .align 2
 4394              	 .set .LANCHOR0,.+0
 4397              	XMC_USBD_EP_IN_BUFFER:
 4398 0000 00000000 	 .space 1792
 4398      00000000 
 4398      00000000 
 4398      00000000 
 4398      00000000 
 4401              	XMC_USBD_EP_OUT_BUFFER:
 4402 0700 00000000 	 .space 1792
 4402      00000000 
 4402      00000000 
 4402      00000000 
 4402      00000000 
 4403              	 .section .bss.XMC_USBD_EP_OUT_BUFFERSIZE,"aw",%nobits
 4404              	 .align 2
 4405              	 .set .LANCHOR2,.+0
 4408              	XMC_USBD_EP_OUT_BUFFERSIZE:
 4409 0000 00000000 	 .space 28
 4409      00000000 
 4409      00000000 
 4409      00000000 
 4409      00000000 
 4410              	 .section .bss.XMC_USBD_EP_IN_BUFFERSIZE,"aw",%nobits
 4411              	 .align 2
 4412              	 .set .LANCHOR1,.+0
 4415              	XMC_USBD_EP_IN_BUFFERSIZE:
 4416 0000 00000000 	 .space 28
 4416      00000000 
 4416      00000000 
 4416      00000000 
 4416      00000000 
 4417              	 .text
 4418              	.Letext0:
 4419              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4420              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4421              	 .file 4 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 4422              	 .file 5 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 4423              	 .file 6 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc4_scu.h"
 4424              	 .file 7 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_usbd.h"
 4425              	 .file 8 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Include/core_cm4.h"
 4426              	 .file 9 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 4427              	 .file 10 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_scu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbd.c
    {standard input}:20     .text.XMC_USBD_GetCapabilities:00000000 $t
    {standard input}:25     .text.XMC_USBD_GetCapabilities:00000000 XMC_USBD_GetCapabilities
    {standard input}:48     .text.XMC_USBD_DeviceConnect:00000000 $t
    {standard input}:53     .text.XMC_USBD_DeviceConnect:00000000 XMC_USBD_DeviceConnect
    {standard input}:75     .text.XMC_USBD_DeviceConnect:00000014 $d
                            *COM*:00000208 xmc_device
    {standard input}:80     .text.XMC_USBD_DeviceDisconnect:00000000 $t
    {standard input}:85     .text.XMC_USBD_DeviceDisconnect:00000000 XMC_USBD_DeviceDisconnect
    {standard input}:107    .text.XMC_USBD_DeviceDisconnect:00000014 $d
    {standard input}:112    .text.XMC_USBD_DeviceGetState:00000000 $t
    {standard input}:117    .text.XMC_USBD_DeviceGetState:00000000 XMC_USBD_DeviceGetState
    {standard input}:341    .text.XMC_USBD_DeviceGetState:00000114 $d
    {standard input}:348    .text.XMC_USBD_DeviceSetAddress:00000000 $t
    {standard input}:353    .text.XMC_USBD_DeviceSetAddress:00000000 XMC_USBD_DeviceSetAddress
    {standard input}:380    .text.XMC_USBD_DeviceSetAddress:00000014 $d
    {standard input}:385    .text.XMC_USBD_EndpointStall:00000000 $t
    {standard input}:390    .text.XMC_USBD_EndpointStall:00000000 XMC_USBD_EndpointStall
    {standard input}:501    .text.XMC_USBD_EndpointStall:00000088 $d
    {standard input}:506    .text.XMC_USBD_EndpointAbort:00000000 $t
    {standard input}:511    .text.XMC_USBD_EndpointAbort:00000000 XMC_USBD_EndpointAbort
    {standard input}:565    .text.XMC_USBD_EndpointAbort:00000040 $d
    {standard input}:570    .text.XMC_USBD_EndpointUnconfigure:00000000 $t
    {standard input}:575    .text.XMC_USBD_EndpointUnconfigure:00000000 XMC_USBD_EndpointUnconfigure
    {standard input}:760    .text.XMC_USBD_EndpointUnconfigure:000000f8 $d
                            *COM*:00000004 usbd_init
    {standard input}:766    .text.XMC_USBD_GetFrameNumber:00000000 $t
    {standard input}:771    .text.XMC_USBD_GetFrameNumber:00000000 XMC_USBD_GetFrameNumber
    {standard input}:790    .text.XMC_USBD_GetFrameNumber:00000010 $d
    {standard input}:795    .text.XMC_USBD_IsEnumDone:00000000 $t
    {standard input}:800    .text.XMC_USBD_IsEnumDone:00000000 XMC_USBD_IsEnumDone
    {standard input}:819    .text.XMC_USBD_IsEnumDone:00000018 $d
    {standard input}:824    .text.XMC_USBD_Uninitialize:00000000 $t
    {standard input}:829    .text.XMC_USBD_Uninitialize:00000000 XMC_USBD_Uninitialize
    {standard input}:862    .text.XMC_USBD_Uninitialize:00000020 $d
    {standard input}:867    .text.XMC_USBD_EndpointConfigure:00000000 $t
    {standard input}:872    .text.XMC_USBD_EndpointConfigure:00000000 XMC_USBD_EndpointConfigure
    {standard input}:1316   .text.XMC_USBD_EndpointConfigure:00000270 $d
    {standard input}:1327   .text.XMC_USBD_EndpointRead:00000000 $t
    {standard input}:1332   .text.XMC_USBD_EndpointRead:00000000 XMC_USBD_EndpointRead
    {standard input}:1391   .text.XMC_USBD_EndpointRead:0000003c $d
    {standard input}:1396   .text.XMC_USBD_Init:00000000 $t
    {standard input}:1401   .text.XMC_USBD_Init:00000000 XMC_USBD_Init
    {standard input}:1715   .text.XMC_USBD_Init:000001b0 $d
    {standard input}:1726   .text.XMC_USBD_EndpointReadStart:00000000 $t
    {standard input}:1731   .text.XMC_USBD_EndpointReadStart:00000000 XMC_USBD_EndpointReadStart
    {standard input}:1950   .text.XMC_USBD_EndpointReadStart:000000d8 $d
    {standard input}:1958   .text.XMC_USBD_EndpointWrite:00000000 $t
    {standard input}:1963   .text.XMC_USBD_EndpointWrite:00000000 XMC_USBD_EndpointWrite
    {standard input}:2151   .text.XMC_USBD_EndpointWrite:000000f0 $d
    {standard input}:2159   .text.XMC_USBD_lDeviceActive:00000000 $t
    {standard input}:2164   .text.XMC_USBD_lDeviceActive:00000000 XMC_USBD_lDeviceActive
    {standard input}:2331   .text.XMC_USBD_lDeviceActive:000000ec $d
    {standard input}:2336   .text.XMC_USBD_IRQHandler:00000000 $t
    {standard input}:2341   .text.XMC_USBD_IRQHandler:00000000 XMC_USBD_IRQHandler
    {standard input}:2919   .text.XMC_USBD_IRQHandler:000002ec $d
    {standard input}:2924   .text.XMC_USBD_IRQHandler:000002f4 $t
    {standard input}:3677   .text.XMC_USBD_IRQHandler:000006c8 $d
    {standard input}:3692   .text.XMC_USBD_IRQHandler:000006e8 $t
    {standard input}:4049   .text.XMC_USBD_IRQHandler:000008d4 $d
    {standard input}:4058   .text.XMC_USBD_Enable:00000000 $t
    {standard input}:4063   .text.XMC_USBD_Enable:00000000 XMC_USBD_Enable
    {standard input}:4095   .text.XMC_USBD_Enable:00000018 $d
    {standard input}:4100   .text.XMC_USBD_Disable:00000000 $t
    {standard input}:4105   .text.XMC_USBD_Disable:00000000 XMC_USBD_Disable
    {standard input}:4137   .text.XMC_USBD_Disable:00000018 $d
    {standard input}:4142   .text.XMC_USBD_ClearEvent:00000000 $t
    {standard input}:4147   .text.XMC_USBD_ClearEvent:00000000 XMC_USBD_ClearEvent
    {standard input}:4160   .text.XMC_USBD_ClearEvent:00000008 $d
    {standard input}:4174   .text.XMC_USBD_ClearEvent:00000016 $t
    {standard input}:4247   .text.XMC_USBD_ClearEvent:00000088 $d
    {standard input}:4252   .text.XMC_USBD_ClearEventINEP:00000000 $t
    {standard input}:4257   .text.XMC_USBD_ClearEventINEP:00000000 XMC_USBD_ClearEventINEP
    {standard input}:4276   .text.XMC_USBD_ClearEventINEP:0000000c $d
    {standard input}:4281   .text.XMC_USBD_ClearEventOUTEP:00000000 $t
    {standard input}:4286   .text.XMC_USBD_ClearEventOUTEP:00000000 XMC_USBD_ClearEventOUTEP
    {standard input}:4304   .text.XMC_USBD_ClearEventOUTEP:00000010 $d
    {standard input}:4309   .text.XMC_USBD_EnableEventOUTEP:00000000 $t
    {standard input}:4314   .text.XMC_USBD_EnableEventOUTEP:00000000 XMC_USBD_EnableEventOUTEP
    {standard input}:4333   .text.XMC_USBD_EnableEventOUTEP:00000010 $d
    {standard input}:4338   .text.XMC_USBD_EnableEventINEP:00000000 $t
    {standard input}:4343   .text.XMC_USBD_EnableEventINEP:00000000 XMC_USBD_EnableEventINEP
    {standard input}:4362   .text.XMC_USBD_EnableEventINEP:00000010 $d
    {standard input}:4375   .rodata.Driver_USBD0:00000000 Driver_USBD0
    {standard input}:4415   .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 XMC_USBD_EP_IN_BUFFERSIZE
    {standard input}:4408   .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 XMC_USBD_EP_OUT_BUFFERSIZE
    {standard input}:4372   .rodata.Driver_USBD0:00000000 $d
    {standard input}:4393   USB_RAM:00000000 $d
    {standard input}:4397   USB_RAM:00000000 XMC_USBD_EP_IN_BUFFER
    {standard input}:4401   USB_RAM:00000700 XMC_USBD_EP_OUT_BUFFER
    {standard input}:4404   .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 $d
    {standard input}:4411   .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
memcpy
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_POWER_DisableUsb
