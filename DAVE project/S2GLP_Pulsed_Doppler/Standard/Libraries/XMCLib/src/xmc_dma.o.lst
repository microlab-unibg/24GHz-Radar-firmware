   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_dma.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_DMA_Init,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_DMA_Init
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_DMA_Init:
  26              	.LFB173:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_dma.c"
   1:../Libraries/XMCLib/src/xmc_dma.c **** 
   2:../Libraries/XMCLib/src/xmc_dma.c **** /**
   3:../Libraries/XMCLib/src/xmc_dma.c ****  * @file xmc_dma.c
   4:../Libraries/XMCLib/src/xmc_dma.c ****  * @date 2016-04-08
   5:../Libraries/XMCLib/src/xmc_dma.c ****  *
   6:../Libraries/XMCLib/src/xmc_dma.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_dma.c ****  **************************************************************************************************
   8:../Libraries/XMCLib/src/xmc_dma.c ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   9:../Libraries/XMCLib/src/xmc_dma.c ****  *
  10:../Libraries/XMCLib/src/xmc_dma.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_dma.c ****  * All rights reserved.                        
  12:../Libraries/XMCLib/src/xmc_dma.c ****  *                                             
  13:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:../Libraries/XMCLib/src/xmc_dma.c ****  * following conditions are met:   
  15:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  16:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:../Libraries/XMCLib/src/xmc_dma.c ****  * disclaimer.                        
  18:../Libraries/XMCLib/src/xmc_dma.c ****  * 
  19:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:../Libraries/XMCLib/src/xmc_dma.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:../Libraries/XMCLib/src/xmc_dma.c ****  * 
  22:../Libraries/XMCLib/src/xmc_dma.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:../Libraries/XMCLib/src/xmc_dma.c ****  * products derived from this software without specific prior written permission.                  
  24:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  25:../Libraries/XMCLib/src/xmc_dma.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:../Libraries/XMCLib/src/xmc_dma.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:../Libraries/XMCLib/src/xmc_dma.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:../Libraries/XMCLib/src/xmc_dma.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:../Libraries/XMCLib/src/xmc_dma.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:../Libraries/XMCLib/src/xmc_dma.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:../Libraries/XMCLib/src/xmc_dma.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  33:../Libraries/XMCLib/src/xmc_dma.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:../Libraries/XMCLib/src/xmc_dma.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:../Libraries/XMCLib/src/xmc_dma.c ****  **************************************************************************************************
  36:../Libraries/XMCLib/src/xmc_dma.c ****  *
  37:../Libraries/XMCLib/src/xmc_dma.c ****  * Change History
  38:../Libraries/XMCLib/src/xmc_dma.c ****  * --------------
  39:../Libraries/XMCLib/src/xmc_dma.c ****  *
  40:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-02-20:
  41:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Initial <br>
  42:../Libraries/XMCLib/src/xmc_dma.c ****  *
  43:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-05-20:
  44:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Add the declarations for the following APIs: <br>
  45:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  46:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  47:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  48:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Remove PRIOARRAY <br>
  49:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Documentation updates <br>
  50:../Libraries/XMCLib/src/xmc_dma.c ****  *
  51:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Removed GetDriverVersion API <br>
  53:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Init() to support scatter/gather functionality (only
  54:../Libraries/XMCLib/src/xmc_dma.c ****  *       on advanced DMA channels) <br>
  55:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Disable() <br>
  56:../Libraries/XMCLib/src/xmc_dma.c ****  *
  57:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-03-09:
  58:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Optimize write only registers
  59:../Libraries/XMCLib/src/xmc_dma.c ****  *
  60:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-04-08:
  61:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Update XMC_DMA_CH_EnableEvent and XMC_DMA_CH_DisableEvent.
  62:../Libraries/XMCLib/src/xmc_dma.c ****  *       Write optimization of MASKCHEV 
  63:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fix XMC_DMA_IRQHandler, clear channel event status before processing the event handler.
  64:../Libraries/XMCLib/src/xmc_dma.c ****  *       It corrects event losses if the DMA triggered in the event handler finished before returni
  65:../Libraries/XMCLib/src/xmc_dma.c ****  *
  66:../Libraries/XMCLib/src/xmc_dma.c ****  * @endcond
  67:../Libraries/XMCLib/src/xmc_dma.c ****  */
  68:../Libraries/XMCLib/src/xmc_dma.c **** 
  69:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  70:../Libraries/XMCLib/src/xmc_dma.c ****  * HEADER FILES
  71:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  72:../Libraries/XMCLib/src/xmc_dma.c **** 
  73:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_dma.h"
  74:../Libraries/XMCLib/src/xmc_dma.c **** 
  75:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  76:../Libraries/XMCLib/src/xmc_dma.c **** 
  77:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_scu.h"
  78:../Libraries/XMCLib/src/xmc_dma.c **** 
  79:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  80:../Libraries/XMCLib/src/xmc_dma.c ****  * MACROS
  81:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  82:../Libraries/XMCLib/src/xmc_dma.c **** 
  83:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_MSK (0xfUL)
  84:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_BITSIZE (4UL)
  85:../Libraries/XMCLib/src/xmc_dma.c **** #define DMA_EVENT_MAX (5UL)
  86:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_DEST_PER_Pos GPDMA0_CH_CFGH_DEST_PER_Pos
  87:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_SRC_PER_Pos GPDMA0_CH_CFGH_SRC_PER_Pos
  88:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA0_CH_CFGH_PER_Msk (0x7U)
  89:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA1_CH_CFGH_PER_Msk (0x3U)
  90:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_PER_BITSIZE (4U)
  91:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CTLL_INT_EN_Msk GPDMA0_CH_CTLL_INT_EN_Msk
  92:../Libraries/XMCLib/src/xmc_dma.c **** 
  93:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  94:../Libraries/XMCLib/src/xmc_dma.c ****  * LOCAL DATA
  95:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  96:../Libraries/XMCLib/src/xmc_dma.c **** 
  97:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  98:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_EVENT_HANDLER_t dma0_event_handlers[XMC_DMA0_NUM_CHANNELS];
  99:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 100:../Libraries/XMCLib/src/xmc_dma.c **** 
 101:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA1)
 102:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_EVENT_HANDLER_t dma1_event_handlers[XMC_DMA1_NUM_CHANNELS];
 103:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 104:../Libraries/XMCLib/src/xmc_dma.c ****  
 105:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
 106:../Libraries/XMCLib/src/xmc_dma.c ****  * API IMPLEMENTATION
 107:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
 108:../Libraries/XMCLib/src/xmc_dma.c **** 
 109:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize GPDMA */
 110:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Init(XMC_DMA_t *const dma)
 111:../Libraries/XMCLib/src/xmc_dma.c **** {
  28              	 .loc 1 111 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33              	.LBB30:
  34              	.LBB31:
 112:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_Enable(dma);
 113:../Libraries/XMCLib/src/xmc_dma.c **** }
 114:../Libraries/XMCLib/src/xmc_dma.c **** 
 115:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA module */
 116:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Enable(XMC_DMA_t *const dma)
 117:../Libraries/XMCLib/src/xmc_dma.c **** {
 118:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 119:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
  35              	 .loc 1 119 0
  36 0000 0C4B     	 ldr r3,.L7
  37 0002 9842     	 cmp r0,r3
  38              	.LBE31:
  39              	.LBE30:
 111:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_Enable(dma);
  40              	 .loc 1 111 0
  41 0004 10B5     	 push {r4,lr}
  42              	.LCFI0:
  43              	 .cfi_def_cfa_offset 8
  44              	 .cfi_offset 4,-8
  45              	 .cfi_offset 14,-4
 111:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_Enable(dma);
  46              	 .loc 1 111 0
  47 0006 0446     	 mov r4,r0
  48              	.LVL1:
  49              	.LBB33:
  50              	.LBB32:
  51              	 .loc 1 119 0
  52 0008 09D0     	 beq .L6
 120:../Libraries/XMCLib/src/xmc_dma.c ****   {
 121:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 122:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 123:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 124:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 125:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 126:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 127:../Libraries/XMCLib/src/xmc_dma.c ****   }
 128:../Libraries/XMCLib/src/xmc_dma.c ****   else
 129:../Libraries/XMCLib/src/xmc_dma.c ****   {
 130:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 131:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
  53              	 .loc 1 131 0
  54 000a 0B48     	 ldr r0,.L7+4
  55              	.LVL2:
  56 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  57              	.LVL3:
 132:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 133:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
  58              	 .loc 1 133 0
  59 0010 0948     	 ldr r0,.L7+4
  60 0012 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  61              	.LVL4:
 134:../Libraries/XMCLib/src/xmc_dma.c ****   }
 135:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 136:../Libraries/XMCLib/src/xmc_dma.c **** 
 137:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x1U;
  62              	 .loc 1 137 0
  63 0016 0123     	 movs r3,#1
  64 0018 C4F89833 	 str r3,[r4,#920]
  65 001c 10BD     	 pop {r4,pc}
  66              	.LVL5:
  67              	.L6:
 123:../Libraries/XMCLib/src/xmc_dma.c **** #endif
  68              	 .loc 1 123 0
  69 001e 0748     	 ldr r0,.L7+8
  70              	.LVL6:
  71 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  72              	.LVL7:
 125:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
  73              	 .loc 1 125 0
  74 0024 0548     	 ldr r0,.L7+8
  75 0026 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  76              	.LVL8:
  77              	 .loc 1 137 0
  78 002a 0123     	 movs r3,#1
  79 002c C4F89833 	 str r3,[r4,#920]
  80 0030 10BD     	 pop {r4,pc}
  81              	.LVL9:
  82              	.L8:
  83 0032 00BF     	 .align 2
  84              	.L7:
  85 0034 00400150 	 .word 1342259200
  86 0038 20000020 	 .word 536870944
  87 003c 10000020 	 .word 536870928
  88              	.LBE32:
  89              	.LBE33:
  90              	 .cfi_endproc
  91              	.LFE173:
  93              	 .section .text.XMC_DMA_Enable,"ax",%progbits
  94              	 .align 2
  95              	 .global XMC_DMA_Enable
  96              	 .thumb
  97              	 .thumb_func
  99              	XMC_DMA_Enable:
 100              	.LFB174:
 117:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 101              	 .loc 1 117 0
 102              	 .cfi_startproc
 103              	 
 104              	 
 105              	.LVL10:
 119:../Libraries/XMCLib/src/xmc_dma.c ****   {
 106              	 .loc 1 119 0
 107 0000 0C4B     	 ldr r3,.L14
 108 0002 9842     	 cmp r0,r3
 117:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 109              	 .loc 1 117 0
 110 0004 10B5     	 push {r4,lr}
 111              	.LCFI1:
 112              	 .cfi_def_cfa_offset 8
 113              	 .cfi_offset 4,-8
 114              	 .cfi_offset 14,-4
 117:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 115              	 .loc 1 117 0
 116 0006 0446     	 mov r4,r0
 119:../Libraries/XMCLib/src/xmc_dma.c ****   {
 117              	 .loc 1 119 0
 118 0008 09D0     	 beq .L13
 131:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 119              	 .loc 1 131 0
 120 000a 0B48     	 ldr r0,.L14+4
 121              	.LVL11:
 122 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 123              	.LVL12:
 133:../Libraries/XMCLib/src/xmc_dma.c ****   }
 124              	 .loc 1 133 0
 125 0010 0948     	 ldr r0,.L14+4
 126 0012 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 127              	.LVL13:
 128              	 .loc 1 137 0
 129 0016 0123     	 movs r3,#1
 130 0018 C4F89833 	 str r3,[r4,#920]
 131 001c 10BD     	 pop {r4,pc}
 132              	.LVL14:
 133              	.L13:
 123:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 134              	 .loc 1 123 0
 135 001e 0748     	 ldr r0,.L14+8
 136              	.LVL15:
 137 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 138              	.LVL16:
 125:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 139              	 .loc 1 125 0
 140 0024 0548     	 ldr r0,.L14+8
 141 0026 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 142              	.LVL17:
 143              	 .loc 1 137 0
 144 002a 0123     	 movs r3,#1
 145 002c C4F89833 	 str r3,[r4,#920]
 146 0030 10BD     	 pop {r4,pc}
 147              	.LVL18:
 148              	.L15:
 149 0032 00BF     	 .align 2
 150              	.L14:
 151 0034 00400150 	 .word 1342259200
 152 0038 20000020 	 .word 536870944
 153 003c 10000020 	 .word 536870928
 154              	 .cfi_endproc
 155              	.LFE174:
 157              	 .section .text.XMC_DMA_Disable,"ax",%progbits
 158              	 .align 2
 159              	 .global XMC_DMA_Disable
 160              	 .thumb
 161              	 .thumb_func
 163              	XMC_DMA_Disable:
 164              	.LFB175:
 138:../Libraries/XMCLib/src/xmc_dma.c **** }
 139:../Libraries/XMCLib/src/xmc_dma.c **** 
 140:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA module */
 141:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Disable(XMC_DMA_t *const dma)
 142:../Libraries/XMCLib/src/xmc_dma.c **** {
 165              	 .loc 1 142 0
 166              	 .cfi_startproc
 167              	 
 168              	 
 169              	.LVL19:
 170 0000 08B5     	 push {r3,lr}
 171              	.LCFI2:
 172              	 .cfi_def_cfa_offset 8
 173              	 .cfi_offset 3,-8
 174              	 .cfi_offset 14,-4
 143:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x0U;
 144:../Libraries/XMCLib/src/xmc_dma.c **** 
 145:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 146:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 175              	 .loc 1 146 0
 176 0002 0B4B     	 ldr r3,.L20
 143:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x0U;
 177              	 .loc 1 143 0
 178 0004 0022     	 movs r2,#0
 179              	 .loc 1 146 0
 180 0006 9842     	 cmp r0,r3
 143:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x0U;
 181              	 .loc 1 143 0
 182 0008 C0F89823 	 str r2,[r0,#920]
 183              	 .loc 1 146 0
 184 000c 07D0     	 beq .L19
 147:../Libraries/XMCLib/src/xmc_dma.c ****   {
 148:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 149:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 150:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 151:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 152:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 153:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 154:../Libraries/XMCLib/src/xmc_dma.c ****   }
 155:../Libraries/XMCLib/src/xmc_dma.c ****   else
 156:../Libraries/XMCLib/src/xmc_dma.c ****   {
 157:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 185              	 .loc 1 157 0
 186 000e 0948     	 ldr r0,.L20+4
 187              	.LVL20:
 188 0010 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 189              	.LVL21:
 158:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 159:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 190              	 .loc 1 159 0
 191 0014 0748     	 ldr r0,.L20+4
 160:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 161:../Libraries/XMCLib/src/xmc_dma.c ****   }
 162:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 163:../Libraries/XMCLib/src/xmc_dma.c **** }
 192              	 .loc 1 163 0
 193 0016 BDE80840 	 pop {r3,lr}
 194              	.LCFI3:
 195              	 .cfi_remember_state
 196              	 .cfi_restore 14
 197              	 .cfi_restore 3
 198              	 .cfi_def_cfa_offset 0
 159:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 199              	 .loc 1 159 0
 200 001a FFF7FEBF 	 b XMC_SCU_CLOCK_GatePeripheralClock
 201              	.LVL22:
 202              	.L19:
 203              	.LCFI4:
 204              	 .cfi_restore_state
 149:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 205              	 .loc 1 149 0
 206 001e 0648     	 ldr r0,.L20+8
 207              	.LVL23:
 208 0020 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 209              	.LVL24:
 151:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 210              	 .loc 1 151 0
 211 0024 0448     	 ldr r0,.L20+8
 212              	 .loc 1 163 0
 213 0026 BDE80840 	 pop {r3,lr}
 214              	.LCFI5:
 215              	 .cfi_restore 14
 216              	 .cfi_restore 3
 217              	 .cfi_def_cfa_offset 0
 151:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 218              	 .loc 1 151 0
 219 002a FFF7FEBF 	 b XMC_SCU_CLOCK_GatePeripheralClock
 220              	.LVL25:
 221              	.L21:
 222 002e 00BF     	 .align 2
 223              	.L20:
 224 0030 00400150 	 .word 1342259200
 225 0034 20000020 	 .word 536870944
 226 0038 10000020 	 .word 536870928
 227              	 .cfi_endproc
 228              	.LFE175:
 230              	 .section .text.XMC_DMA_IsEnabled,"ax",%progbits
 231              	 .align 2
 232              	 .global XMC_DMA_IsEnabled
 233              	 .thumb
 234              	 .thumb_func
 236              	XMC_DMA_IsEnabled:
 237              	.LFB176:
 164:../Libraries/XMCLib/src/xmc_dma.c **** 
 165:../Libraries/XMCLib/src/xmc_dma.c **** /* Check is the GPDMA peripheral is enabled */
 166:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma)
 167:../Libraries/XMCLib/src/xmc_dma.c **** {
 238              	 .loc 1 167 0
 239              	 .cfi_startproc
 240              	 
 241              	 
 242              	.LVL26:
 168:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 169:../Libraries/XMCLib/src/xmc_dma.c **** 
 170:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 171:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 243              	 .loc 1 171 0
 244 0000 124B     	 ldr r3,.L36
 245 0002 9842     	 cmp r0,r3
 167:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 246              	 .loc 1 167 0
 247 0004 10B5     	 push {r4,lr}
 248              	.LCFI6:
 249              	 .cfi_def_cfa_offset 8
 250              	 .cfi_offset 4,-8
 251              	 .cfi_offset 14,-4
 167:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 252              	 .loc 1 167 0
 253 0006 0446     	 mov r4,r0
 254              	 .loc 1 171 0
 255 0008 13D0     	 beq .L33
 172:../Libraries/XMCLib/src/xmc_dma.c ****   {
 173:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 174:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 175:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 176:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 177:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 178:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 179:../Libraries/XMCLib/src/xmc_dma.c ****   }
 180:../Libraries/XMCLib/src/xmc_dma.c ****   else
 181:../Libraries/XMCLib/src/xmc_dma.c ****   {
 182:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 256              	 .loc 1 182 0
 257 000a 1148     	 ldr r0,.L36+4
 258              	.LVL27:
 259 000c FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 260              	.LVL28:
 183:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 184:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 261              	 .loc 1 184 0
 262 0010 08B1     	 cbz r0,.L34
 263              	.LVL29:
 264              	.L30:
 265 0012 0020     	 movs r0,#0
 266              	.LVL30:
 267 0014 10BD     	 pop {r4,pc}
 268              	.LVL31:
 269              	.L34:
 270              	 .loc 1 184 0 is_stmt 0 discriminator 1
 271 0016 0E48     	 ldr r0,.L36+4
 272              	.LVL32:
 273 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 274              	.LVL33:
 275 001c 80F00100 	 eor r0,r0,#1
 276 0020 C0B2     	 uxtb r0,r0
 277              	.L25:
 278              	.LVL34:
 185:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 186:../Libraries/XMCLib/src/xmc_dma.c ****   }
 187:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 188:../Libraries/XMCLib/src/xmc_dma.c **** 
 189:../Libraries/XMCLib/src/xmc_dma.c ****   /* DMA reset is not asserted and peripheral clock is not gated */
 190:../Libraries/XMCLib/src/xmc_dma.c ****   if (status == true)
 279              	 .loc 1 190 0 is_stmt 1
 280 0022 28B1     	 cbz r0,.L35
 191:../Libraries/XMCLib/src/xmc_dma.c ****   {
 192:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && (dma->DMACFGREG != 0U);
 281              	 .loc 1 192 0 discriminator 1
 282 0024 D4F89803 	 ldr r0,[r4,#920]
 283              	.LVL35:
 284 0028 0030     	 adds r0,r0,#0
 285 002a 18BF     	 it ne
 286 002c 0120     	 movne r0,#1
 287              	.LVL36:
 288 002e 10BD     	 pop {r4,pc}
 289              	.LVL37:
 290              	.L35:
 193:../Libraries/XMCLib/src/xmc_dma.c ****   }
 194:../Libraries/XMCLib/src/xmc_dma.c **** 
 195:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 196:../Libraries/XMCLib/src/xmc_dma.c **** }
 291              	 .loc 1 196 0
 292 0030 10BD     	 pop {r4,pc}
 293              	.LVL38:
 294              	.L33:
 174:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 295              	 .loc 1 174 0
 296 0032 0848     	 ldr r0,.L36+8
 297              	.LVL39:
 298 0034 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 299              	.LVL40:
 176:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 300              	 .loc 1 176 0
 301 0038 0028     	 cmp r0,#0
 302 003a EAD1     	 bne .L30
 176:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 303              	 .loc 1 176 0 is_stmt 0 discriminator 1
 304 003c 0548     	 ldr r0,.L36+8
 305              	.LVL41:
 306 003e FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 307              	.LVL42:
 308 0042 80F00100 	 eor r0,r0,#1
 309 0046 C0B2     	 uxtb r0,r0
 310 0048 EBE7     	 b .L25
 311              	.L37:
 312 004a 00BF     	 .align 2
 313              	.L36:
 314 004c 00400150 	 .word 1342259200
 315 0050 20000020 	 .word 536870944
 316 0054 10000020 	 .word 536870928
 317              	 .cfi_endproc
 318              	.LFE176:
 320              	 .section .text.XMC_DMA_EnableRequestLine,"ax",%progbits
 321              	 .align 2
 322              	 .global XMC_DMA_EnableRequestLine
 323              	 .thumb
 324              	 .thumb_func
 326              	XMC_DMA_EnableRequestLine:
 327              	.LFB177:
 197:../Libraries/XMCLib/src/xmc_dma.c **** 
 198:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable request line */
 199:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_EnableRequestLine(XMC_DMA_t *const dma, uint8_t line, uint8_t peripheral)
 200:../Libraries/XMCLib/src/xmc_dma.c **** {
 328              	 .loc 1 200 0 is_stmt 1
 329              	 .cfi_startproc
 330              	 
 331              	 
 332              	 
 333              	.LVL43:
 201:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 202:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 334              	 .loc 1 202 0
 335 0000 144B     	 ldr r3,.L43
 336 0002 9842     	 cmp r0,r3
 200:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 337              	 .loc 1 200 0
 338 0004 30B4     	 push {r4,r5}
 339              	.LCFI7:
 340              	 .cfi_def_cfa_offset 8
 341              	 .cfi_offset 4,-8
 342              	 .cfi_offset 5,-4
 343              	 .loc 1 202 0
 344 0006 11D0     	 beq .L42
 203:../Libraries/XMCLib/src/xmc_dma.c ****   {
 204:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 205:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL0 = ((DLR->SRSEL0 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 206:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 207:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 208:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 209:../Libraries/XMCLib/src/xmc_dma.c ****   }
 210:../Libraries/XMCLib/src/xmc_dma.c ****   else
 211:../Libraries/XMCLib/src/xmc_dma.c ****   {
 212:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL1 = ((DLR->SRSEL1 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 345              	 .loc 1 212 0
 346 0008 134B     	 ldr r3,.L43+4
 347 000a 8D00     	 lsls r5,r1,#2
 348 000c DC68     	 ldr r4,[r3,#12]
 349 000e 0F20     	 movs r0,#15
 350              	.LVL44:
 351 0010 A840     	 lsls r0,r0,r5
 352 0012 24EA0000 	 bic r0,r4,r0
 213:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 353              	 .loc 1 213 0
 354 0016 AA40     	 lsls r2,r2,r5
 355              	.LVL45:
 212:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 356              	 .loc 1 212 0
 357 0018 0243     	 orrs r2,r2,r0
 358 001a DA60     	 str r2,[r3,#12]
 214:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 359              	 .loc 1 214 0
 360 001c 1869     	 ldr r0,[r3,#16]
 361 001e 4FF48072 	 mov r2,#256
 362 0022 8A40     	 lsls r2,r2,r1
 363 0024 0243     	 orrs r2,r2,r0
 364 0026 1A61     	 str r2,[r3,#16]
 215:../Libraries/XMCLib/src/xmc_dma.c ****   }
 216:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 217:../Libraries/XMCLib/src/xmc_dma.c **** }
 365              	 .loc 1 217 0
 366 0028 30BC     	 pop {r4,r5}
 367              	.LCFI8:
 368              	 .cfi_remember_state
 369              	 .cfi_restore 5
 370              	 .cfi_restore 4
 371              	 .cfi_def_cfa_offset 0
 372 002a 7047     	 bx lr
 373              	.LVL46:
 374              	.L42:
 375              	.LCFI9:
 376              	 .cfi_restore_state
 377              	.LBB36:
 378              	.LBB37:
 205:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 379              	 .loc 1 205 0
 380 002c A3F57743 	 sub r3,r3,#63232
 381 0030 8D00     	 lsls r5,r1,#2
 382 0032 9C68     	 ldr r4,[r3,#8]
 383 0034 0F20     	 movs r0,#15
 384              	.LVL47:
 385 0036 A840     	 lsls r0,r0,r5
 386 0038 24EA0000 	 bic r0,r4,r0
 206:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 387              	 .loc 1 206 0
 388 003c AA40     	 lsls r2,r2,r5
 389              	.LVL48:
 205:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 390              	 .loc 1 205 0
 391 003e 0243     	 orrs r2,r2,r0
 392 0040 9A60     	 str r2,[r3,#8]
 207:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 393              	 .loc 1 207 0
 394 0042 1869     	 ldr r0,[r3,#16]
 395 0044 01F00701 	 and r1,r1,#7
 396              	.LVL49:
 397 0048 0122     	 movs r2,#1
 398 004a 8A40     	 lsls r2,r2,r1
 399 004c 0243     	 orrs r2,r2,r0
 400 004e 1A61     	 str r2,[r3,#16]
 401              	.LBE37:
 402              	.LBE36:
 403              	 .loc 1 217 0
 404 0050 30BC     	 pop {r4,r5}
 405              	.LCFI10:
 406              	 .cfi_restore 4
 407              	 .cfi_restore 5
 408              	 .cfi_def_cfa_offset 0
 409 0052 7047     	 bx lr
 410              	.L44:
 411              	 .align 2
 412              	.L43:
 413 0054 00400150 	 .word 1342259200
 414 0058 00490050 	 .word 1342195968
 415              	 .cfi_endproc
 416              	.LFE177:
 418              	 .section .text.XMC_DMA_DisableRequestLine,"ax",%progbits
 419              	 .align 2
 420              	 .global XMC_DMA_DisableRequestLine
 421              	 .thumb
 422              	 .thumb_func
 424              	XMC_DMA_DisableRequestLine:
 425              	.LFB178:
 218:../Libraries/XMCLib/src/xmc_dma.c **** 
 219:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_DisableRequestLine(XMC_DMA_t *const dma, uint8_t line)
 220:../Libraries/XMCLib/src/xmc_dma.c **** {
 426              	 .loc 1 220 0
 427              	 .cfi_startproc
 428              	 
 429              	 
 430              	 
 431              	.LVL50:
 221:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 222:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 432              	 .loc 1 222 0
 433 0000 064B     	 ldr r3,.L48
 434 0002 9842     	 cmp r0,r3
 223:../Libraries/XMCLib/src/xmc_dma.c ****   {
 224:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 225:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 435              	 .loc 1 225 0
 436 0004 0648     	 ldr r0,.L48+4
 437              	.LVL51:
 438 0006 08BF     	 it eq
 439 0008 0123     	 moveq r3,#1
 226:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 227:../Libraries/XMCLib/src/xmc_dma.c ****   }
 228:../Libraries/XMCLib/src/xmc_dma.c ****   else
 229:../Libraries/XMCLib/src/xmc_dma.c ****   {
 230:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 440              	 .loc 1 230 0
 441 000a 0269     	 ldr r2,[r0,#16]
 442 000c 18BF     	 it ne
 443 000e 4FF48073 	 movne r3,#256
 444 0012 8B40     	 lsls r3,r3,r1
 445 0014 22EA0303 	 bic r3,r2,r3
 446 0018 0361     	 str r3,[r0,#16]
 447 001a 7047     	 bx lr
 448              	.L49:
 449              	 .align 2
 450              	.L48:
 451 001c 00400150 	 .word 1342259200
 452 0020 00490050 	 .word 1342195968
 453              	 .cfi_endproc
 454              	.LFE178:
 456              	 .section .text.XMC_DMA_ClearRequestLine,"ax",%progbits
 457              	 .align 2
 458              	 .global XMC_DMA_ClearRequestLine
 459              	 .thumb
 460              	 .thumb_func
 462              	XMC_DMA_ClearRequestLine:
 463              	.LFB179:
 231:../Libraries/XMCLib/src/xmc_dma.c ****   }
 232:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 233:../Libraries/XMCLib/src/xmc_dma.c **** }
 234:../Libraries/XMCLib/src/xmc_dma.c **** 
 235:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearRequestLine(XMC_DMA_t *const dma, uint8_t line)
 236:../Libraries/XMCLib/src/xmc_dma.c **** {
 464              	 .loc 1 236 0
 465              	 .cfi_startproc
 466              	 
 467              	 
 468              	 
 469              	.LVL52:
 237:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 238:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 470              	 .loc 1 238 0
 471 0000 094B     	 ldr r3,.L54
 472 0002 9842     	 cmp r0,r3
 473              	.LBB40:
 474              	.LBB41:
 239:../Libraries/XMCLib/src/xmc_dma.c ****   {
 240:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 241:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 475              	 .loc 1 241 0
 476 0004 0ABF     	 itet eq
 477 0006 A3F57743 	 subeq r3,r3,#63232
 478              	.LBE41:
 479              	.LBE40:
 242:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x1UL << line;
 243:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 244:../Libraries/XMCLib/src/xmc_dma.c ****   }
 245:../Libraries/XMCLib/src/xmc_dma.c ****   else
 246:../Libraries/XMCLib/src/xmc_dma.c ****   {
 247:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 480              	 .loc 1 247 0
 481 000a 084B     	 ldrne r3,.L54+4
 482              	.LBB43:
 483              	.LBB42:
 241:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x1UL << line;
 484              	 .loc 1 241 0
 485 000c 0122     	 moveq r2,#1
 486              	.LBE42:
 487              	.LBE43:
 488              	 .loc 1 247 0
 489 000e 1869     	 ldr r0,[r3,#16]
 490              	.LVL53:
 491 0010 18BF     	 it ne
 492 0012 4FF48072 	 movne r2,#256
 493 0016 8A40     	 lsls r2,r2,r1
 494 0018 20EA0201 	 bic r1,r0,r2
 495              	.LVL54:
 496 001c 1961     	 str r1,[r3,#16]
 248:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x100UL << line;
 497              	 .loc 1 248 0
 498 001e 1969     	 ldr r1,[r3,#16]
 499 0020 0A43     	 orrs r2,r2,r1
 500 0022 1A61     	 str r2,[r3,#16]
 501 0024 7047     	 bx lr
 502              	.L55:
 503 0026 00BF     	 .align 2
 504              	.L54:
 505 0028 00400150 	 .word 1342259200
 506 002c 00490050 	 .word 1342195968
 507              	 .cfi_endproc
 508              	.LFE179:
 510              	 .section .text.XMC_DMA_GetOverrunStatus,"ax",%progbits
 511              	 .align 2
 512              	 .global XMC_DMA_GetOverrunStatus
 513              	 .thumb
 514              	 .thumb_func
 516              	XMC_DMA_GetOverrunStatus:
 517              	.LFB180:
 249:../Libraries/XMCLib/src/xmc_dma.c ****   }
 250:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 251:../Libraries/XMCLib/src/xmc_dma.c **** }
 252:../Libraries/XMCLib/src/xmc_dma.c **** 
 253:../Libraries/XMCLib/src/xmc_dma.c **** /* Get DMA DLR overrun status */
 254:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_GetOverrunStatus(XMC_DMA_t *const dma, uint8_t line)
 255:../Libraries/XMCLib/src/xmc_dma.c **** {
 518              	 .loc 1 255 0
 519              	 .cfi_startproc
 520              	 
 521              	 
 522              	 
 523              	.LVL55:
 256:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 257:../Libraries/XMCLib/src/xmc_dma.c **** 
 258:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 259:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 524              	 .loc 1 259 0
 525 0000 094B     	 ldr r3,.L60
 526 0002 9842     	 cmp r0,r3
 527 0004 09D0     	 beq .L59
 260:../Libraries/XMCLib/src/xmc_dma.c ****   {
 261:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 262:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x1UL << line));
 263:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 264:../Libraries/XMCLib/src/xmc_dma.c ****   }
 265:../Libraries/XMCLib/src/xmc_dma.c ****   else
 266:../Libraries/XMCLib/src/xmc_dma.c ****   {
 267:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x100UL << line));
 528              	 .loc 1 267 0
 529 0006 094A     	 ldr r2,.L60+4
 530 0008 4FF48073 	 mov r3,#256
 531 000c 1268     	 ldr r2,[r2]
 532 000e 8B40     	 lsls r3,r3,r1
 533 0010 1342     	 tst r3,r2
 534 0012 14BF     	 ite ne
 535 0014 0120     	 movne r0,#1
 536              	.LVL56:
 537 0016 0020     	 moveq r0,#0
 538              	.LVL57:
 268:../Libraries/XMCLib/src/xmc_dma.c ****   }
 269:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 270:../Libraries/XMCLib/src/xmc_dma.c **** 
 271:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 272:../Libraries/XMCLib/src/xmc_dma.c **** }
 539              	 .loc 1 272 0
 540 0018 7047     	 bx lr
 541              	.LVL58:
 542              	.L59:
 262:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 543              	 .loc 1 262 0
 544 001a A3F57743 	 sub r3,r3,#63232
 545 001e 1868     	 ldr r0,[r3]
 546              	.LVL59:
 547 0020 C840     	 lsrs r0,r0,r1
 548 0022 00F00100 	 and r0,r0,#1
 549              	.LVL60:
 550 0026 7047     	 bx lr
 551              	.L61:
 552              	 .align 2
 553              	.L60:
 554 0028 00400150 	 .word 1342259200
 555 002c 00490050 	 .word 1342195968
 556              	 .cfi_endproc
 557              	.LFE180:
 559              	 .section .text.XMC_DMA_ClearOverrunStatus,"ax",%progbits
 560              	 .align 2
 561              	 .global XMC_DMA_ClearOverrunStatus
 562              	 .thumb
 563              	 .thumb_func
 565              	XMC_DMA_ClearOverrunStatus:
 566              	.LFB181:
 273:../Libraries/XMCLib/src/xmc_dma.c **** 
 274:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear DMA DLR overrun status */
 275:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearOverrunStatus(XMC_DMA_t *const dma, const uint8_t line)
 276:../Libraries/XMCLib/src/xmc_dma.c **** {
 567              	 .loc 1 276 0
 568              	 .cfi_startproc
 569              	 
 570              	 
 571              	 
 572              	.LVL61:
 277:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 278:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 573              	 .loc 1 278 0
 574 0000 044B     	 ldr r3,.L65
 279:../Libraries/XMCLib/src/xmc_dma.c ****   {
 280:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 281:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x1UL << line);
 282:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 283:../Libraries/XMCLib/src/xmc_dma.c ****   }
 284:../Libraries/XMCLib/src/xmc_dma.c ****   else
 285:../Libraries/XMCLib/src/xmc_dma.c ****   {
 286:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x100UL << line);
 575              	 .loc 1 286 0
 576 0002 054A     	 ldr r2,.L65+4
 278:../Libraries/XMCLib/src/xmc_dma.c ****   {
 577              	 .loc 1 278 0
 578 0004 9842     	 cmp r0,r3
 281:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 579              	 .loc 1 281 0
 580 0006 0CBF     	 ite eq
 581 0008 0123     	 moveq r3,#1
 582              	 .loc 1 286 0
 583 000a 4FF48073 	 movne r3,#256
 584 000e 8B40     	 lsls r3,r3,r1
 585 0010 5360     	 str r3,[r2,#4]
 586 0012 7047     	 bx lr
 587              	.L66:
 588              	 .align 2
 589              	.L65:
 590 0014 00400150 	 .word 1342259200
 591 0018 00490050 	 .word 1342195968
 592              	 .cfi_endproc
 593              	.LFE181:
 595              	 .section .text.XMC_DMA_CH_Disable,"ax",%progbits
 596              	 .align 2
 597              	 .global XMC_DMA_CH_Disable
 598              	 .thumb
 599              	 .thumb_func
 601              	XMC_DMA_CH_Disable:
 602              	.LFB182:
 287:../Libraries/XMCLib/src/xmc_dma.c ****   }
 288:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 289:../Libraries/XMCLib/src/xmc_dma.c **** }
 290:../Libraries/XMCLib/src/xmc_dma.c **** 
 291:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable DMA channel */
 292:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Disable(XMC_DMA_t *const dma, const uint8_t channel)
 293:../Libraries/XMCLib/src/xmc_dma.c **** {
 603              	 .loc 1 293 0
 604              	 .cfi_startproc
 605              	 
 606              	 
 607              	 
 608              	.LVL62:
 294:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CHENREG = (uint32_t)(0x100UL << channel);
 609              	 .loc 1 294 0
 610 0000 4FF48073 	 mov r3,#256
 611 0004 8B40     	 lsls r3,r3,r1
 612 0006 0122     	 movs r2,#1
 613 0008 C0F8A033 	 str r3,[r0,#928]
 614 000c 8A40     	 lsls r2,r2,r1
 615              	.L68:
 295:../Libraries/XMCLib/src/xmc_dma.c ****   while((dma->CHENREG & (uint32_t)(0x1UL << channel)) != 0U)
 616              	 .loc 1 295 0 discriminator 1
 617 000e D0F8A033 	 ldr r3,[r0,#928]
 618 0012 1A42     	 tst r2,r3
 619 0014 FBD1     	 bne .L68
 296:../Libraries/XMCLib/src/xmc_dma.c ****   {
 297:../Libraries/XMCLib/src/xmc_dma.c ****     /* wait until channel is disabled */
 298:../Libraries/XMCLib/src/xmc_dma.c ****   }
 299:../Libraries/XMCLib/src/xmc_dma.c **** }
 620              	 .loc 1 299 0
 621 0016 7047     	 bx lr
 622              	 .cfi_endproc
 623              	.LFE182:
 625              	 .section .text.XMC_DMA_CH_IsEnabled,"ax",%progbits
 626              	 .align 2
 627              	 .global XMC_DMA_CH_IsEnabled
 628              	 .thumb
 629              	 .thumb_func
 631              	XMC_DMA_CH_IsEnabled:
 632              	.LFB183:
 300:../Libraries/XMCLib/src/xmc_dma.c **** 
 301:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is enabled */
 302:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsEnabled(XMC_DMA_t *const dma, const uint8_t channel)
 303:../Libraries/XMCLib/src/xmc_dma.c **** {
 633              	 .loc 1 303 0
 634              	 .cfi_startproc
 635              	 
 636              	 
 637              	 
 638              	.LVL63:
 304:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CHENREG & ((uint32_t)1U << channel));
 639              	 .loc 1 304 0
 640 0000 D0F8A003 	 ldr r0,[r0,#928]
 641              	.LVL64:
 642 0004 C840     	 lsrs r0,r0,r1
 305:../Libraries/XMCLib/src/xmc_dma.c **** }
 643              	 .loc 1 305 0
 644 0006 00F00100 	 and r0,r0,#1
 645 000a 7047     	 bx lr
 646              	 .cfi_endproc
 647              	.LFE183:
 649              	 .section .text.XMC_DMA_CH_Init,"ax",%progbits
 650              	 .align 2
 651              	 .global XMC_DMA_CH_Init
 652              	 .thumb
 653              	 .thumb_func
 655              	XMC_DMA_CH_Init:
 656              	.LFB184:
 306:../Libraries/XMCLib/src/xmc_dma.c **** 
 307:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize DMA channel */
 308:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_STATUS_t XMC_DMA_CH_Init(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_C
 309:../Libraries/XMCLib/src/xmc_dma.c **** {
 657              	 .loc 1 309 0
 658              	 .cfi_startproc
 659              	 
 660              	 
 661              	.LVL65:
 662 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 663              	.LCFI11:
 664              	 .cfi_def_cfa_offset 24
 665              	 .cfi_offset 3,-24
 666              	 .cfi_offset 4,-20
 667              	 .cfi_offset 5,-16
 668              	 .cfi_offset 6,-12
 669              	 .cfi_offset 7,-8
 670              	 .cfi_offset 14,-4
 671              	.LBB58:
 672              	.LBB59:
 171:../Libraries/XMCLib/src/xmc_dma.c ****   {
 673              	 .loc 1 171 0
 674 0002 A14B     	 ldr r3,.L110
 675 0004 9842     	 cmp r0,r3
 676              	.LBE59:
 677              	.LBE58:
 678              	 .loc 1 309 0
 679 0006 0446     	 mov r4,r0
 680              	.LVL66:
 681 0008 0E46     	 mov r6,r1
 682 000a 1546     	 mov r5,r2
 683              	.LBB63:
 684              	.LBB60:
 171:../Libraries/XMCLib/src/xmc_dma.c ****   {
 685              	 .loc 1 171 0
 686 000c 53D0     	 beq .L102
 182:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 687              	 .loc 1 182 0
 688 000e 9F48     	 ldr r0,.L110+4
 689              	.LVL67:
 690 0010 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 691              	.LVL68:
 184:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 692              	 .loc 1 184 0
 693 0014 08B1     	 cbz r0,.L103
 694              	.LVL69:
 695              	.L99:
 696              	.LBE60:
 697              	.LBE63:
 310:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_STATUS_t status;
 311:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t line;
 312:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t peripheral;
 313:../Libraries/XMCLib/src/xmc_dma.c **** 
 314:../Libraries/XMCLib/src/xmc_dma.c ****   if (XMC_DMA_IsEnabled(dma) == true)
 315:../Libraries/XMCLib/src/xmc_dma.c ****   {
 316:../Libraries/XMCLib/src/xmc_dma.c ****     if (XMC_DMA_CH_IsEnabled(dma, channel) == false)
 317:../Libraries/XMCLib/src/xmc_dma.c ****     {
 318:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].SAR = config->src_addr;
 319:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].DAR = config->dst_addr;
 320:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].LLP = (uint32_t)config->linked_list_pointer;
 321:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLH = (uint32_t)config->block_size;
 322:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLL = config->control;
 323:../Libraries/XMCLib/src/xmc_dma.c **** 
 324:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CFGL = (uint32_t)((uint32_t)config->priority |
 325:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_SRC_Msk |
 326:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_DST_Msk);
 327:../Libraries/XMCLib/src/xmc_dma.c **** 
 328:../Libraries/XMCLib/src/xmc_dma.c ****       if ((dma == XMC_DMA0) && (channel < (uint8_t)2))
 329:../Libraries/XMCLib/src/xmc_dma.c ****       {
 330:../Libraries/XMCLib/src/xmc_dma.c ****         /* Configure scatter and gather */
 331:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].SGR = config->src_gather_control;
 332:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].DSR = config->dst_scatter_control;
 333:../Libraries/XMCLib/src/xmc_dma.c ****       }
 334:../Libraries/XMCLib/src/xmc_dma.c **** 
 335:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->dst_handshaking == XMC_DMA_CH_DST_HANDSHAKING_HARDWARE)
 336:../Libraries/XMCLib/src/xmc_dma.c ****       {
 337:../Libraries/XMCLib/src/xmc_dma.c ****         /* Hardware handshaking interface configuration */
 338:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA) ||
 339:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 340:../Libraries/XMCLib/src/xmc_dma.c ****         {
 341:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 342:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 343:../Libraries/XMCLib/src/xmc_dma.c ****           {
 344:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 345:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 346:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 347:../Libraries/XMCLib/src/xmc_dma.c ****           }
 348:../Libraries/XMCLib/src/xmc_dma.c ****           else
 349:../Libraries/XMCLib/src/xmc_dma.c ****           {
 350:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 351:../Libraries/XMCLib/src/xmc_dma.c ****           }
 352:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 353:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->dst_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 354:../Libraries/XMCLib/src/xmc_dma.c **** 
 355:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_DEST_PER_Pos);
 356:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 357:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_DST_Msk;
 358:../Libraries/XMCLib/src/xmc_dma.c ****         }
 359:../Libraries/XMCLib/src/xmc_dma.c ****       }
 360:../Libraries/XMCLib/src/xmc_dma.c **** 
 361:../Libraries/XMCLib/src/xmc_dma.c **** 
 362:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->src_handshaking == XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE)
 363:../Libraries/XMCLib/src/xmc_dma.c ****       {
 364:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA) ||
 365:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 366:../Libraries/XMCLib/src/xmc_dma.c ****         {
 367:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 368:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 369:../Libraries/XMCLib/src/xmc_dma.c ****           {
 370:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 371:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 372:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 373:../Libraries/XMCLib/src/xmc_dma.c ****           }
 374:../Libraries/XMCLib/src/xmc_dma.c ****           else
 375:../Libraries/XMCLib/src/xmc_dma.c ****           {
 376:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 377:../Libraries/XMCLib/src/xmc_dma.c ****           }
 378:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 379:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->src_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 380:../Libraries/XMCLib/src/xmc_dma.c **** 
 381:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_SRC_PER_Pos);
 382:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 383:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_SRC_Msk;
 384:../Libraries/XMCLib/src/xmc_dma.c ****         }
 385:../Libraries/XMCLib/src/xmc_dma.c ****       }
 386:../Libraries/XMCLib/src/xmc_dma.c ****       
 387:../Libraries/XMCLib/src/xmc_dma.c ****       XMC_DMA_CH_ClearEventStatus(dma, channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMP
 388:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFE
 389:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 390:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 391:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_ERROR));
 392:../Libraries/XMCLib/src/xmc_dma.c **** 
 393:../Libraries/XMCLib/src/xmc_dma.c ****       switch (config->transfer_type)
 394:../Libraries/XMCLib/src/xmc_dma.c ****       {
 395:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK:
 396:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 397:../Libraries/XMCLib/src/xmc_dma.c **** 
 398:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD:
 399:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 400:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 401:../Libraries/XMCLib/src/xmc_dma.c **** 
 402:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS:
 403:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 404:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 405:../Libraries/XMCLib/src/xmc_dma.c **** 
 406:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD:
 407:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)((uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk |
 408:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk);
 409:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 410:../Libraries/XMCLib/src/xmc_dma.c **** 
 411:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED:
 412:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 413:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 414:../Libraries/XMCLib/src/xmc_dma.c **** 
 415:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED:
 416:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 417:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 418:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 419:../Libraries/XMCLib/src/xmc_dma.c **** 
 420:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS:
 421:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 422:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 423:../Libraries/XMCLib/src/xmc_dma.c **** 
 424:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD:
 425:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 426:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 427:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 428:../Libraries/XMCLib/src/xmc_dma.c **** 
 429:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED:
 430:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)((uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk |
 431:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk);
 432:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 433:../Libraries/XMCLib/src/xmc_dma.c **** 
 434:../Libraries/XMCLib/src/xmc_dma.c ****         default:
 435:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 436:../Libraries/XMCLib/src/xmc_dma.c ****       }
 437:../Libraries/XMCLib/src/xmc_dma.c **** 
 438:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_OK;
 439:../Libraries/XMCLib/src/xmc_dma.c **** 
 440:../Libraries/XMCLib/src/xmc_dma.c ****     }
 441:../Libraries/XMCLib/src/xmc_dma.c ****     else
 442:../Libraries/XMCLib/src/xmc_dma.c ****     {
 443:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_BUSY;
 444:../Libraries/XMCLib/src/xmc_dma.c ****     }
 445:../Libraries/XMCLib/src/xmc_dma.c ****   }
 446:../Libraries/XMCLib/src/xmc_dma.c ****   else 
 447:../Libraries/XMCLib/src/xmc_dma.c ****   {
 448:../Libraries/XMCLib/src/xmc_dma.c ****     status = XMC_DMA_CH_STATUS_ERROR;
 698              	 .loc 1 448 0
 699 0016 0120     	 movs r0,#1
 700              	.LVL70:
 701 0018 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 702              	.LVL71:
 703              	.L103:
 704              	.LBB64:
 705              	.LBB61:
 184:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 706              	 .loc 1 184 0
 707 001a 9C48     	 ldr r0,.L110+4
 708              	.LVL72:
 709 001c FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 710              	.LVL73:
 711 0020 80F00100 	 eor r0,r0,#1
 712 0024 C0B2     	 uxtb r0,r0
 713              	.L74:
 714              	.LVL74:
 190:../Libraries/XMCLib/src/xmc_dma.c ****   {
 715              	 .loc 1 190 0
 716 0026 0028     	 cmp r0,#0
 717 0028 F5D0     	 beq .L99
 192:../Libraries/XMCLib/src/xmc_dma.c ****   }
 718              	 .loc 1 192 0
 719 002a D4F89833 	 ldr r3,[r4,#920]
 720              	.LVL75:
 721              	.LBE61:
 722              	.LBE64:
 314:../Libraries/XMCLib/src/xmc_dma.c ****   {
 723              	 .loc 1 314 0
 724 002e 002B     	 cmp r3,#0
 725 0030 F1D0     	 beq .L99
 726              	.LVL76:
 727              	.LBB65:
 728              	.LBB66:
 304:../Libraries/XMCLib/src/xmc_dma.c **** }
 729              	 .loc 1 304 0
 730 0032 D4F8A033 	 ldr r3,[r4,#928]
 731              	.LVL77:
 732 0036 F340     	 lsrs r3,r3,r6
 733              	.LBE66:
 734              	.LBE65:
 316:../Libraries/XMCLib/src/xmc_dma.c ****     {
 735              	 .loc 1 316 0
 736 0038 DB07     	 lsls r3,r3,#31
 737 003a 01D5     	 bpl .L104
 443:../Libraries/XMCLib/src/xmc_dma.c ****     }
 738              	 .loc 1 443 0
 739 003c 0220     	 movs r0,#2
 740 003e F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 741              	.LVL78:
 742              	.L104:
 318:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].DAR = config->dst_addr;
 743              	 .loc 1 318 0
 744 0040 5822     	 movs r2,#88
 745 0042 02FB06F2 	 mul r2,r2,r6
 746 0046 6968     	 ldr r1,[r5,#4]
 747 0048 A150     	 str r1,[r4,r2]
 748 004a A318     	 adds r3,r4,r2
 319:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].LLP = (uint32_t)config->linked_list_pointer;
 749              	 .loc 1 319 0
 750 004c A968     	 ldr r1,[r5,#8]
 324:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_SRC_Msk |
 751              	 .loc 1 324 0
 752 004e EA7E     	 ldrb r2,[r5,#27]
 320:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLH = (uint32_t)config->block_size;
 753              	 .loc 1 320 0
 754 0050 D5F80CE0 	 ldr lr,[r5,#12]
 321:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLL = config->control;
 755              	 .loc 1 321 0
 756 0054 2F8B     	 ldrh r7,[r5,#24]
 319:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].LLP = (uint32_t)config->linked_list_pointer;
 757              	 .loc 1 319 0
 758 0056 9960     	 str r1,[r3,#8]
 328:../Libraries/XMCLib/src/xmc_dma.c ****       {
 759              	 .loc 1 328 0
 760 0058 8B49     	 ldr r1,.L110
 320:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLH = (uint32_t)config->block_size;
 761              	 .loc 1 320 0
 762 005a C3F810E0 	 str lr,[r3,#16]
 321:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLL = config->control;
 763              	 .loc 1 321 0
 764 005e DF61     	 str r7,[r3,#28]
 322:../Libraries/XMCLib/src/xmc_dma.c **** 
 765              	 .loc 1 322 0
 766 0060 2868     	 ldr r0,[r5]
 767 0062 9861     	 str r0,[r3,#24]
 324:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_SRC_Msk |
 768              	 .loc 1 324 0
 769 0064 42F44062 	 orr r2,r2,#3072
 328:../Libraries/XMCLib/src/xmc_dma.c ****       {
 770              	 .loc 1 328 0
 771 0068 8C42     	 cmp r4,r1
 324:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_SRC_Msk |
 772              	 .loc 1 324 0
 773 006a 1A64     	 str r2,[r3,#64]
 328:../Libraries/XMCLib/src/xmc_dma.c ****       {
 774              	 .loc 1 328 0
 775 006c 2FD0     	 beq .L105
 776              	.L77:
 335:../Libraries/XMCLib/src/xmc_dma.c ****       {
 777              	 .loc 1 335 0
 778 006e 2B8C     	 ldrh r3,[r5,#32]
 779 0070 23B9     	 cbnz r3,.L78
 338:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 780              	 .loc 1 338 0
 781 0072 AB78     	 ldrb r3,[r5,#2]
 782 0074 03F05003 	 and r3,r3,#80
 783 0078 102B     	 cmp r3,#16
 784 007a 2FD0     	 beq .L106
 785              	.L78:
 362:../Libraries/XMCLib/src/xmc_dma.c ****       {
 786              	 .loc 1 362 0
 787 007c AB8B     	 ldrh r3,[r5,#28]
 788 007e 23B9     	 cbnz r3,.L81
 364:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 789              	 .loc 1 364 0
 790 0080 AB78     	 ldrb r3,[r5,#2]
 791 0082 03F06003 	 and r3,r3,#96
 792 0086 202B     	 cmp r3,#32
 793 0088 53D0     	 beq .L107
 794              	.L81:
 795              	.LVL79:
 393:../Libraries/XMCLib/src/xmc_dma.c ****       {
 796              	 .loc 1 393 0
 797 008a AA7E     	 ldrb r2,[r5,#26]
 798              	.LBB67:
 799              	.LBB68:
 449:../Libraries/XMCLib/src/xmc_dma.c ****   }
 450:../Libraries/XMCLib/src/xmc_dma.c ****   
 451:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 452:../Libraries/XMCLib/src/xmc_dma.c **** }
 453:../Libraries/XMCLib/src/xmc_dma.c **** 
 454:../Libraries/XMCLib/src/xmc_dma.c **** /* Suspend DMA channel transfer */
 455:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Suspend(XMC_DMA_t *const dma, const uint8_t channel)
 456:../Libraries/XMCLib/src/xmc_dma.c **** {
 457:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk;
 458:../Libraries/XMCLib/src/xmc_dma.c **** }
 459:../Libraries/XMCLib/src/xmc_dma.c **** 
 460:../Libraries/XMCLib/src/xmc_dma.c **** /* Resume DMA channel transfer */
 461:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Resume(XMC_DMA_t *const dma, const uint8_t channel)
 462:../Libraries/XMCLib/src/xmc_dma.c **** {
 463:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_CH_SUSP_Msk;
 464:../Libraries/XMCLib/src/xmc_dma.c **** }
 465:../Libraries/XMCLib/src/xmc_dma.c **** 
 466:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is suspended */
 467:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsSuspended(XMC_DMA_t *const dma, const uint8_t channel)
 468:../Libraries/XMCLib/src/xmc_dma.c **** {
 469:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CH[channel].CFGL & (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk);
 470:../Libraries/XMCLib/src/xmc_dma.c **** }
 471:../Libraries/XMCLib/src/xmc_dma.c **** 
 472:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA event */
 473:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 474:../Libraries/XMCLib/src/xmc_dma.c **** {
 475:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 476:../Libraries/XMCLib/src/xmc_dma.c **** 
 477:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 478:../Libraries/XMCLib/src/xmc_dma.c ****   {
 479:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 480:../Libraries/XMCLib/src/xmc_dma.c ****     {
 481:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x101UL << channel);
 482:../Libraries/XMCLib/src/xmc_dma.c ****     }
 483:../Libraries/XMCLib/src/xmc_dma.c ****   }
 484:../Libraries/XMCLib/src/xmc_dma.c **** }
 485:../Libraries/XMCLib/src/xmc_dma.c **** 
 486:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA event */
 487:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 488:../Libraries/XMCLib/src/xmc_dma.c **** {
 489:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 490:../Libraries/XMCLib/src/xmc_dma.c **** 
 491:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 492:../Libraries/XMCLib/src/xmc_dma.c ****   {
 493:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 494:../Libraries/XMCLib/src/xmc_dma.c ****     {
 495:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x100UL << channel);
 496:../Libraries/XMCLib/src/xmc_dma.c ****     }
 497:../Libraries/XMCLib/src/xmc_dma.c ****   }
 498:../Libraries/XMCLib/src/xmc_dma.c **** }
 499:../Libraries/XMCLib/src/xmc_dma.c **** 
 500:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear GPDMA event */
 501:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearEventStatus(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 502:../Libraries/XMCLib/src/xmc_dma.c **** {
 503:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 504:../Libraries/XMCLib/src/xmc_dma.c **** 
 505:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 506:../Libraries/XMCLib/src/xmc_dma.c ****   {
 507:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & (uint32_t)((uint32_t)0x1UL << event_idx))
 508:../Libraries/XMCLib/src/xmc_dma.c ****     {
 509:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CLEARCHEV[event_idx * 2UL] = ((uint32_t)0x1UL << channel);
 800              	 .loc 1 509 0
 801 008c 0123     	 movs r3,#1
 802 008e B340     	 lsls r3,r3,r6
 803              	.LBE68:
 804              	.LBE67:
 393:../Libraries/XMCLib/src/xmc_dma.c ****       {
 805              	 .loc 1 393 0
 806 0090 013A     	 subs r2,r2,#1
 807              	.LBB70:
 808              	.LBB69:
 809              	 .loc 1 509 0
 810 0092 C4F83833 	 str r3,[r4,#824]
 811              	.LVL80:
 812 0096 C4F84033 	 str r3,[r4,#832]
 813              	.LVL81:
 814 009a C4F84833 	 str r3,[r4,#840]
 815              	.LVL82:
 816 009e C4F85033 	 str r3,[r4,#848]
 817              	.LVL83:
 818 00a2 C4F85833 	 str r3,[r4,#856]
 819              	.LVL84:
 820              	.LBE69:
 821              	.LBE70:
 393:../Libraries/XMCLib/src/xmc_dma.c ****       {
 822              	 .loc 1 393 0
 823 00a6 072A     	 cmp r2,#7
 824 00a8 6CD8     	 bhi .L98
 825 00aa DFE802F0 	 tbb [pc,r2]
 826              	.L93:
 827 00ae 95       	 .byte (.L84-.L93)/2
 828 00af 9E       	 .byte (.L85-.L93)/2
 829 00b0 6D       	 .byte (.L86-.L93)/2
 830 00b1 76       	 .byte (.L87-.L93)/2
 831 00b2 7F       	 .byte (.L88-.L93)/2
 832 00b3 8C       	 .byte (.L89-.L93)/2
 833 00b4 A7       	 .byte (.L90-.L93)/2
 834 00b5 B4       	 .byte (.L91-.L93)/2
 835              	.LVL85:
 836              	 .p2align 1
 837              	.L102:
 838              	.LBB71:
 839              	.LBB62:
 174:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 840              	 .loc 1 174 0
 841 00b6 7648     	 ldr r0,.L110+8
 842              	.LVL86:
 843 00b8 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 844              	.LVL87:
 176:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 845              	 .loc 1 176 0
 846 00bc 0028     	 cmp r0,#0
 847 00be AAD1     	 bne .L99
 848 00c0 7348     	 ldr r0,.L110+8
 849              	.LVL88:
 850 00c2 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 851              	.LVL89:
 852 00c6 80F00100 	 eor r0,r0,#1
 853 00ca C0B2     	 uxtb r0,r0
 854 00cc ABE7     	 b .L74
 855              	.LVL90:
 856              	.L105:
 857              	.LBE62:
 858              	.LBE71:
 328:../Libraries/XMCLib/src/xmc_dma.c ****       {
 859              	 .loc 1 328 0 discriminator 1
 860 00ce 012E     	 cmp r6,#1
 861 00d0 CDD8     	 bhi .L77
 331:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].DSR = config->dst_scatter_control;
 862              	 .loc 1 331 0
 863 00d2 2A69     	 ldr r2,[r5,#16]
 864 00d4 9A64     	 str r2,[r3,#72]
 332:../Libraries/XMCLib/src/xmc_dma.c ****       }
 865              	 .loc 1 332 0
 866 00d6 6A69     	 ldr r2,[r5,#20]
 867 00d8 1A65     	 str r2,[r3,#80]
 868 00da C8E7     	 b .L77
 869              	.L106:
 342:../Libraries/XMCLib/src/xmc_dma.c ****           {
 870              	 .loc 1 342 0
 871 00dc 6A4B     	 ldr r3,.L110
 872              	.LBB72:
 873              	.LBB73:
 874              	.LBB74:
 875              	.LBB75:
 205:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 876              	 .loc 1 205 0
 877 00de 6D49     	 ldr r1,.L110+12
 878              	.LBE75:
 879              	.LBE74:
 880              	.LBE73:
 881              	.LBE72:
 355:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 882              	 .loc 1 355 0
 883 00e0 5822     	 movs r2,#88
 884 00e2 02FB0642 	 mla r2,r2,r6,r4
 342:../Libraries/XMCLib/src/xmc_dma.c ****           {
 885              	 .loc 1 342 0
 886 00e6 9C42     	 cmp r4,r3
 355:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 887              	 .loc 1 355 0
 888 00e8 576C     	 ldr r7,[r2,#68]
 345:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 889              	 .loc 1 345 0
 890 00ea 95F82230 	 ldrb r3,[r5,#34]
 342:../Libraries/XMCLib/src/xmc_dma.c ****           {
 891              	 .loc 1 342 0
 892 00ee 00F0B380 	 beq .L108
 350:../Libraries/XMCLib/src/xmc_dma.c ****           }
 893              	 .loc 1 350 0
 894 00f2 03F00300 	 and r0,r3,#3
 895              	.LVL91:
 355:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 896              	 .loc 1 355 0
 897 00f6 47EAC027 	 orr r7,r7,r0,lsl#11
 898 00fa 5764     	 str r7,[r2,#68]
 899              	.LVL92:
 900              	.LBB80:
 901              	.LBB78:
 212:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 902              	 .loc 1 212 0
 903 00fc CF68     	 ldr r7,[r1,#12]
 904 00fe 4FEA800E 	 lsl lr,r0,#2
 905 0102 0F22     	 movs r2,#15
 213:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 906              	 .loc 1 213 0
 907 0104 1B09     	 lsrs r3,r3,#4
 908              	.LVL93:
 212:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 909              	 .loc 1 212 0
 910 0106 02FA0EF2 	 lsl r2,r2,lr
 911 010a 27EA0202 	 bic r2,r7,r2
 213:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 912              	 .loc 1 213 0
 913 010e 03FA0EF3 	 lsl r3,r3,lr
 212:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 914              	 .loc 1 212 0
 915 0112 1343     	 orrs r3,r3,r2
 916 0114 CB60     	 str r3,[r1,#12]
 214:../Libraries/XMCLib/src/xmc_dma.c ****   }
 917              	 .loc 1 214 0
 918 0116 0A69     	 ldr r2,[r1,#16]
 919 0118 4FF48073 	 mov r3,#256
 920 011c 8340     	 lsls r3,r3,r0
 921 011e 1343     	 orrs r3,r3,r2
 922 0120 0B61     	 str r3,[r1,#16]
 923              	.LVL94:
 924              	.L80:
 925              	.LBE78:
 926              	.LBE80:
 357:../Libraries/XMCLib/src/xmc_dma.c ****         }
 927              	 .loc 1 357 0
 928 0122 5823     	 movs r3,#88
 929 0124 03FB0643 	 mla r3,r3,r6,r4
 930 0128 1A6C     	 ldr r2,[r3,#64]
 931 012a 22F48062 	 bic r2,r2,#1024
 932 012e 1A64     	 str r2,[r3,#64]
 933 0130 A4E7     	 b .L78
 934              	.LVL95:
 935              	.L107:
 368:../Libraries/XMCLib/src/xmc_dma.c ****           {
 936              	 .loc 1 368 0
 937 0132 554B     	 ldr r3,.L110
 938              	.LBB81:
 939              	.LBB82:
 940              	.LBB83:
 941              	.LBB84:
 205:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 942              	 .loc 1 205 0
 943 0134 5749     	 ldr r1,.L110+12
 944              	.LBE84:
 945              	.LBE83:
 946              	.LBE82:
 947              	.LBE81:
 381:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 948              	 .loc 1 381 0
 949 0136 5822     	 movs r2,#88
 950 0138 02FB0642 	 mla r2,r2,r6,r4
 368:../Libraries/XMCLib/src/xmc_dma.c ****           {
 951              	 .loc 1 368 0
 952 013c 9C42     	 cmp r4,r3
 381:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 953              	 .loc 1 381 0
 954 013e 576C     	 ldr r7,[r2,#68]
 371:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 955              	 .loc 1 371 0
 956 0140 AB7F     	 ldrb r3,[r5,#30]
 368:../Libraries/XMCLib/src/xmc_dma.c ****           {
 957              	 .loc 1 368 0
 958 0142 71D0     	 beq .L109
 376:../Libraries/XMCLib/src/xmc_dma.c ****           }
 959              	 .loc 1 376 0
 960 0144 03F00300 	 and r0,r3,#3
 961              	.LVL96:
 381:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 962              	 .loc 1 381 0
 963 0148 47EAC017 	 orr r7,r7,r0,lsl#7
 964 014c 5764     	 str r7,[r2,#68]
 965              	.LVL97:
 966              	.LBB89:
 967              	.LBB87:
 212:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 968              	 .loc 1 212 0
 969 014e CF68     	 ldr r7,[r1,#12]
 970 0150 4FEA800E 	 lsl lr,r0,#2
 971 0154 0F22     	 movs r2,#15
 213:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 972              	 .loc 1 213 0
 973 0156 1B09     	 lsrs r3,r3,#4
 974              	.LVL98:
 212:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 975              	 .loc 1 212 0
 976 0158 02FA0EF2 	 lsl r2,r2,lr
 977 015c 27EA0202 	 bic r2,r7,r2
 213:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 978              	 .loc 1 213 0
 979 0160 03FA0EF3 	 lsl r3,r3,lr
 212:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 980              	 .loc 1 212 0
 981 0164 1343     	 orrs r3,r3,r2
 982 0166 CB60     	 str r3,[r1,#12]
 214:../Libraries/XMCLib/src/xmc_dma.c ****   }
 983              	 .loc 1 214 0
 984 0168 0A69     	 ldr r2,[r1,#16]
 985 016a 4FF48073 	 mov r3,#256
 986 016e 8340     	 lsls r3,r3,r0
 987 0170 1343     	 orrs r3,r3,r2
 988 0172 0B61     	 str r3,[r1,#16]
 989              	.LVL99:
 990              	.L83:
 991              	.LBE87:
 992              	.LBE89:
 383:../Libraries/XMCLib/src/xmc_dma.c ****         }
 993              	 .loc 1 383 0
 994 0174 5823     	 movs r3,#88
 995 0176 03FB0643 	 mla r3,r3,r6,r4
 996 017a 1A6C     	 ldr r2,[r3,#64]
 997 017c 22F40062 	 bic r2,r2,#2048
 998 0180 1A64     	 str r2,[r3,#64]
 999 0182 82E7     	 b .L81
 1000              	.LVL100:
 1001              	.L98:
 438:../Libraries/XMCLib/src/xmc_dma.c **** 
 1002              	 .loc 1 438 0
 1003 0184 0020     	 movs r0,#0
 1004 0186 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1005              	.LVL101:
 1006              	.L86:
 407:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk);
 1007              	 .loc 1 407 0
 1008 0188 5821     	 movs r1,#88
 1009 018a 01FB0644 	 mla r4,r1,r6,r4
 1010              	.LVL102:
 438:../Libraries/XMCLib/src/xmc_dma.c **** 
 1011              	 .loc 1 438 0
 1012 018e 0020     	 movs r0,#0
 407:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk);
 1013              	 .loc 1 407 0
 1014 0190 236C     	 ldr r3,[r4,#64]
 1015 0192 43F04043 	 orr r3,r3,#-1073741824
 1016 0196 2364     	 str r3,[r4,#64]
 409:../Libraries/XMCLib/src/xmc_dma.c **** 
 1017              	 .loc 1 409 0
 1018 0198 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1019              	.LVL103:
 1020              	.L87:
 412:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1021              	 .loc 1 412 0
 1022 019a 5821     	 movs r1,#88
 1023 019c 01FB0644 	 mla r4,r1,r6,r4
 1024              	.LVL104:
 438:../Libraries/XMCLib/src/xmc_dma.c **** 
 1025              	 .loc 1 438 0
 1026 01a0 0020     	 movs r0,#0
 412:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1027              	 .loc 1 412 0
 1028 01a2 A369     	 ldr r3,[r4,#24]
 1029 01a4 43F00063 	 orr r3,r3,#134217728
 1030 01a8 A361     	 str r3,[r4,#24]
 413:../Libraries/XMCLib/src/xmc_dma.c **** 
 1031              	 .loc 1 413 0
 1032 01aa F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1033              	.LVL105:
 1034              	.L88:
 416:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1035              	 .loc 1 416 0
 1036 01ac 5821     	 movs r1,#88
 1037 01ae 01FB0644 	 mla r4,r1,r6,r4
 1038              	.LVL106:
 438:../Libraries/XMCLib/src/xmc_dma.c **** 
 1039              	 .loc 1 438 0
 1040 01b2 0020     	 movs r0,#0
 416:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1041              	 .loc 1 416 0
 1042 01b4 236C     	 ldr r3,[r4,#64]
 1043 01b6 43F08043 	 orr r3,r3,#1073741824
 1044 01ba 2364     	 str r3,[r4,#64]
 417:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1045              	 .loc 1 417 0
 1046 01bc A369     	 ldr r3,[r4,#24]
 1047 01be 43F00063 	 orr r3,r3,#134217728
 1048 01c2 A361     	 str r3,[r4,#24]
 418:../Libraries/XMCLib/src/xmc_dma.c **** 
 1049              	 .loc 1 418 0
 1050 01c4 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1051              	.LVL107:
 1052              	.L89:
 421:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1053              	 .loc 1 421 0
 1054 01c6 5821     	 movs r1,#88
 1055 01c8 01FB0644 	 mla r4,r1,r6,r4
 1056              	.LVL108:
 438:../Libraries/XMCLib/src/xmc_dma.c **** 
 1057              	 .loc 1 438 0
 1058 01cc 0020     	 movs r0,#0
 421:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1059              	 .loc 1 421 0
 1060 01ce A369     	 ldr r3,[r4,#24]
 1061 01d0 43F08053 	 orr r3,r3,#268435456
 1062 01d4 A361     	 str r3,[r4,#24]
 422:../Libraries/XMCLib/src/xmc_dma.c **** 
 1063              	 .loc 1 422 0
 1064 01d6 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1065              	.LVL109:
 1066              	.L84:
 399:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1067              	 .loc 1 399 0
 1068 01d8 5821     	 movs r1,#88
 1069 01da 01FB0644 	 mla r4,r1,r6,r4
 1070              	.LVL110:
 438:../Libraries/XMCLib/src/xmc_dma.c **** 
 1071              	 .loc 1 438 0
 1072 01de 0020     	 movs r0,#0
 399:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1073              	 .loc 1 399 0
 1074 01e0 236C     	 ldr r3,[r4,#64]
 1075 01e2 43F00043 	 orr r3,r3,#-2147483648
 1076 01e6 2364     	 str r3,[r4,#64]
 400:../Libraries/XMCLib/src/xmc_dma.c **** 
 1077              	 .loc 1 400 0
 1078 01e8 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1079              	.LVL111:
 1080              	.L85:
 403:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1081              	 .loc 1 403 0
 1082 01ea 5821     	 movs r1,#88
 1083 01ec 01FB0644 	 mla r4,r1,r6,r4
 1084              	.LVL112:
 438:../Libraries/XMCLib/src/xmc_dma.c **** 
 1085              	 .loc 1 438 0
 1086 01f0 0020     	 movs r0,#0
 403:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1087              	 .loc 1 403 0
 1088 01f2 236C     	 ldr r3,[r4,#64]
 1089 01f4 43F08043 	 orr r3,r3,#1073741824
 1090 01f8 2364     	 str r3,[r4,#64]
 404:../Libraries/XMCLib/src/xmc_dma.c **** 
 1091              	 .loc 1 404 0
 1092 01fa F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1093              	.LVL113:
 1094              	.L90:
 425:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1095              	 .loc 1 425 0
 1096 01fc 5821     	 movs r1,#88
 1097 01fe 01FB0644 	 mla r4,r1,r6,r4
 1098              	.LVL114:
 438:../Libraries/XMCLib/src/xmc_dma.c **** 
 1099              	 .loc 1 438 0
 1100 0202 0020     	 movs r0,#0
 425:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1101              	 .loc 1 425 0
 1102 0204 236C     	 ldr r3,[r4,#64]
 1103 0206 43F00043 	 orr r3,r3,#-2147483648
 1104 020a 2364     	 str r3,[r4,#64]
 426:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1105              	 .loc 1 426 0
 1106 020c A369     	 ldr r3,[r4,#24]
 1107 020e 43F08053 	 orr r3,r3,#268435456
 1108 0212 A361     	 str r3,[r4,#24]
 427:../Libraries/XMCLib/src/xmc_dma.c **** 
 1109              	 .loc 1 427 0
 1110 0214 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1111              	.LVL115:
 1112              	.L91:
 430:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk);
 1113              	 .loc 1 430 0
 1114 0216 5821     	 movs r1,#88
 1115 0218 01FB0644 	 mla r4,r1,r6,r4
 1116              	.LVL116:
 438:../Libraries/XMCLib/src/xmc_dma.c **** 
 1117              	 .loc 1 438 0
 1118 021c 0020     	 movs r0,#0
 430:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk);
 1119              	 .loc 1 430 0
 1120 021e A369     	 ldr r3,[r4,#24]
 1121 0220 43F0C053 	 orr r3,r3,#402653184
 1122 0224 A361     	 str r3,[r4,#24]
 432:../Libraries/XMCLib/src/xmc_dma.c **** 
 1123              	 .loc 1 432 0
 1124 0226 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1125              	.LVL117:
 1126              	.L109:
 371:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 1127              	 .loc 1 371 0
 1128 0228 03F00700 	 and r0,r3,#7
 1129              	.LVL118:
 381:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1130              	 .loc 1 381 0
 1131 022c 47EAC017 	 orr r7,r7,r0,lsl#7
 1132 0230 5764     	 str r7,[r2,#68]
 1133              	.LVL119:
 1134              	.LBB90:
 1135              	.LBB88:
 1136              	.LBB86:
 1137              	.LBB85:
 205:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 1138              	 .loc 1 205 0
 1139 0232 8F68     	 ldr r7,[r1,#8]
 1140 0234 4FEA800E 	 lsl lr,r0,#2
 1141 0238 0F22     	 movs r2,#15
 206:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 1142              	 .loc 1 206 0
 1143 023a 1B09     	 lsrs r3,r3,#4
 1144              	.LVL120:
 205:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 1145              	 .loc 1 205 0
 1146 023c 02FA0EF2 	 lsl r2,r2,lr
 1147 0240 27EA0202 	 bic r2,r7,r2
 206:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 1148              	 .loc 1 206 0
 1149 0244 03FA0EF3 	 lsl r3,r3,lr
 205:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 1150              	 .loc 1 205 0
 1151 0248 1343     	 orrs r3,r3,r2
 1152 024a 8B60     	 str r3,[r1,#8]
 207:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 1153              	 .loc 1 207 0
 1154 024c 0A69     	 ldr r2,[r1,#16]
 1155 024e 0123     	 movs r3,#1
 1156 0250 8340     	 lsls r3,r3,r0
 1157 0252 1343     	 orrs r3,r3,r2
 1158 0254 0B61     	 str r3,[r1,#16]
 1159 0256 8DE7     	 b .L83
 1160              	.LVL121:
 1161              	.L108:
 1162              	.LBE85:
 1163              	.LBE86:
 1164              	.LBE88:
 1165              	.LBE90:
 345:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 1166              	 .loc 1 345 0
 1167 0258 03F00700 	 and r0,r3,#7
 1168              	.LVL122:
 355:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1169              	 .loc 1 355 0
 1170 025c 47EAC027 	 orr r7,r7,r0,lsl#11
 1171 0260 5764     	 str r7,[r2,#68]
 1172              	.LVL123:
 1173              	.LBB91:
 1174              	.LBB79:
 1175              	.LBB77:
 1176              	.LBB76:
 205:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 1177              	 .loc 1 205 0
 1178 0262 8F68     	 ldr r7,[r1,#8]
 1179 0264 4FEA800E 	 lsl lr,r0,#2
 1180 0268 0F22     	 movs r2,#15
 206:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 1181              	 .loc 1 206 0
 1182 026a 1B09     	 lsrs r3,r3,#4
 1183              	.LVL124:
 205:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 1184              	 .loc 1 205 0
 1185 026c 02FA0EF2 	 lsl r2,r2,lr
 1186 0270 27EA0202 	 bic r2,r7,r2
 206:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 1187              	 .loc 1 206 0
 1188 0274 03FA0EF3 	 lsl r3,r3,lr
 205:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 1189              	 .loc 1 205 0
 1190 0278 1343     	 orrs r3,r3,r2
 1191 027a 8B60     	 str r3,[r1,#8]
 207:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 1192              	 .loc 1 207 0
 1193 027c 0A69     	 ldr r2,[r1,#16]
 1194 027e 0123     	 movs r3,#1
 1195 0280 8340     	 lsls r3,r3,r0
 1196 0282 1343     	 orrs r3,r3,r2
 1197 0284 0B61     	 str r3,[r1,#16]
 1198 0286 4CE7     	 b .L80
 1199              	.L111:
 1200              	 .align 2
 1201              	.L110:
 1202 0288 00400150 	 .word 1342259200
 1203 028c 20000020 	 .word 536870944
 1204 0290 10000020 	 .word 536870928
 1205 0294 00490050 	 .word 1342195968
 1206              	.LBE76:
 1207              	.LBE77:
 1208              	.LBE79:
 1209              	.LBE91:
 1210              	 .cfi_endproc
 1211              	.LFE184:
 1213              	 .section .text.XMC_DMA_CH_Suspend,"ax",%progbits
 1214              	 .align 2
 1215              	 .global XMC_DMA_CH_Suspend
 1216              	 .thumb
 1217              	 .thumb_func
 1219              	XMC_DMA_CH_Suspend:
 1220              	.LFB185:
 456:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1221              	 .loc 1 456 0
 1222              	 .cfi_startproc
 1223              	 
 1224              	 
 1225              	 
 1226              	.LVL125:
 457:../Libraries/XMCLib/src/xmc_dma.c **** }
 1227              	 .loc 1 457 0
 1228 0000 5823     	 movs r3,#88
 1229 0002 03FB0101 	 mla r1,r3,r1,r0
 1230              	.LVL126:
 1231 0006 0B6C     	 ldr r3,[r1,#64]
 1232 0008 43F48073 	 orr r3,r3,#256
 1233 000c 0B64     	 str r3,[r1,#64]
 1234 000e 7047     	 bx lr
 1235              	 .cfi_endproc
 1236              	.LFE185:
 1238              	 .section .text.XMC_DMA_CH_Resume,"ax",%progbits
 1239              	 .align 2
 1240              	 .global XMC_DMA_CH_Resume
 1241              	 .thumb
 1242              	 .thumb_func
 1244              	XMC_DMA_CH_Resume:
 1245              	.LFB186:
 462:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1246              	 .loc 1 462 0
 1247              	 .cfi_startproc
 1248              	 
 1249              	 
 1250              	 
 1251              	.LVL127:
 463:../Libraries/XMCLib/src/xmc_dma.c **** }
 1252              	 .loc 1 463 0
 1253 0000 5823     	 movs r3,#88
 1254 0002 03FB0101 	 mla r1,r3,r1,r0
 1255              	.LVL128:
 1256 0006 0B6C     	 ldr r3,[r1,#64]
 1257 0008 23F48073 	 bic r3,r3,#256
 1258 000c 0B64     	 str r3,[r1,#64]
 1259 000e 7047     	 bx lr
 1260              	 .cfi_endproc
 1261              	.LFE186:
 1263              	 .section .text.XMC_DMA_CH_IsSuspended,"ax",%progbits
 1264              	 .align 2
 1265              	 .global XMC_DMA_CH_IsSuspended
 1266              	 .thumb
 1267              	 .thumb_func
 1269              	XMC_DMA_CH_IsSuspended:
 1270              	.LFB187:
 468:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CH[channel].CFGL & (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk);
 1271              	 .loc 1 468 0
 1272              	 .cfi_startproc
 1273              	 
 1274              	 
 1275              	 
 1276              	.LVL129:
 469:../Libraries/XMCLib/src/xmc_dma.c **** }
 1277              	 .loc 1 469 0
 1278 0000 5823     	 movs r3,#88
 1279 0002 03FB0101 	 mla r1,r3,r1,r0
 1280              	.LVL130:
 1281 0006 086C     	 ldr r0,[r1,#64]
 1282              	.LVL131:
 470:../Libraries/XMCLib/src/xmc_dma.c **** 
 1283              	 .loc 1 470 0
 1284 0008 C0F30020 	 ubfx r0,r0,#8,#1
 1285 000c 7047     	 bx lr
 1286              	 .cfi_endproc
 1287              	.LFE187:
 1289 000e 00BF     	 .section .text.XMC_DMA_CH_EnableEvent,"ax",%progbits
 1290              	 .align 2
 1291              	 .global XMC_DMA_CH_EnableEvent
 1292              	 .thumb
 1293              	 .thumb_func
 1295              	XMC_DMA_CH_EnableEvent:
 1296              	.LFB188:
 474:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 1297              	 .loc 1 474 0
 1298              	 .cfi_startproc
 1299              	 
 1300              	 
 1301              	 
 1302              	.LVL132:
 481:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1303              	 .loc 1 481 0
 1304 0000 40F20113 	 movw r3,#257
 1305 0004 8B40     	 lsls r3,r3,r1
 1306              	.LVL133:
 479:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1307              	 .loc 1 479 0
 1308 0006 D107     	 lsls r1,r2,#31
 1309              	.LVL134:
 481:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1310              	 .loc 1 481 0
 1311 0008 48BF     	 it mi
 1312 000a C0F81033 	 strmi r3,[r0,#784]
 479:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1313              	 .loc 1 479 0
 1314 000e 9107     	 lsls r1,r2,#30
 481:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1315              	 .loc 1 481 0
 1316 0010 48BF     	 it mi
 1317 0012 C0F81833 	 strmi r3,[r0,#792]
 479:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1318              	 .loc 1 479 0
 1319 0016 5107     	 lsls r1,r2,#29
 481:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1320              	 .loc 1 481 0
 1321 0018 48BF     	 it mi
 1322 001a C0F82033 	 strmi r3,[r0,#800]
 479:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1323              	 .loc 1 479 0
 1324 001e 1107     	 lsls r1,r2,#28
 481:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1325              	 .loc 1 481 0
 1326 0020 48BF     	 it mi
 1327 0022 C0F82833 	 strmi r3,[r0,#808]
 479:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1328              	 .loc 1 479 0
 1329 0026 D206     	 lsls r2,r2,#27
 1330              	.LVL135:
 481:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1331              	 .loc 1 481 0
 1332 0028 48BF     	 it mi
 1333 002a C0F83033 	 strmi r3,[r0,#816]
 1334              	.LVL136:
 1335 002e 7047     	 bx lr
 1336              	 .cfi_endproc
 1337              	.LFE188:
 1339              	 .section .text.XMC_DMA_CH_DisableEvent,"ax",%progbits
 1340              	 .align 2
 1341              	 .global XMC_DMA_CH_DisableEvent
 1342              	 .thumb
 1343              	 .thumb_func
 1345              	XMC_DMA_CH_DisableEvent:
 1346              	.LFB189:
 488:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 1347              	 .loc 1 488 0
 1348              	 .cfi_startproc
 1349              	 
 1350              	 
 1351              	 
 1352              	.LVL137:
 495:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1353              	 .loc 1 495 0
 1354 0000 4FF48073 	 mov r3,#256
 1355 0004 8B40     	 lsls r3,r3,r1
 1356              	.LVL138:
 493:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1357              	 .loc 1 493 0
 1358 0006 D107     	 lsls r1,r2,#31
 1359              	.LVL139:
 495:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1360              	 .loc 1 495 0
 1361 0008 48BF     	 it mi
 1362 000a C0F81033 	 strmi r3,[r0,#784]
 493:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1363              	 .loc 1 493 0
 1364 000e 9107     	 lsls r1,r2,#30
 495:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1365              	 .loc 1 495 0
 1366 0010 48BF     	 it mi
 1367 0012 C0F81833 	 strmi r3,[r0,#792]
 493:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1368              	 .loc 1 493 0
 1369 0016 5107     	 lsls r1,r2,#29
 495:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1370              	 .loc 1 495 0
 1371 0018 48BF     	 it mi
 1372 001a C0F82033 	 strmi r3,[r0,#800]
 493:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1373              	 .loc 1 493 0
 1374 001e 1107     	 lsls r1,r2,#28
 495:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1375              	 .loc 1 495 0
 1376 0020 48BF     	 it mi
 1377 0022 C0F82833 	 strmi r3,[r0,#808]
 493:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1378              	 .loc 1 493 0
 1379 0026 D206     	 lsls r2,r2,#27
 1380              	.LVL140:
 495:../Libraries/XMCLib/src/xmc_dma.c ****     }
 1381              	 .loc 1 495 0
 1382 0028 48BF     	 it mi
 1383 002a C0F83033 	 strmi r3,[r0,#816]
 1384              	.LVL141:
 1385 002e 7047     	 bx lr
 1386              	 .cfi_endproc
 1387              	.LFE189:
 1389              	 .section .text.XMC_DMA_CH_ClearEventStatus,"ax",%progbits
 1390              	 .align 2
 1391              	 .global XMC_DMA_CH_ClearEventStatus
 1392              	 .thumb
 1393              	 .thumb_func
 1395              	XMC_DMA_CH_ClearEventStatus:
 1396              	.LFB190:
 502:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 1397              	 .loc 1 502 0
 1398              	 .cfi_startproc
 1399              	 
 1400              	 
 1401              	 
 1402              	.LVL142:
 1403              	 .loc 1 509 0
 1404 0000 0123     	 movs r3,#1
 1405 0002 8B40     	 lsls r3,r3,r1
 1406              	.LVL143:
 507:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1407              	 .loc 1 507 0
 1408 0004 D107     	 lsls r1,r2,#31
 1409              	.LVL144:
 1410              	 .loc 1 509 0
 1411 0006 48BF     	 it mi
 1412 0008 C0F83833 	 strmi r3,[r0,#824]
 507:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1413              	 .loc 1 507 0
 1414 000c 9107     	 lsls r1,r2,#30
 1415              	 .loc 1 509 0
 1416 000e 48BF     	 it mi
 1417 0010 C0F84033 	 strmi r3,[r0,#832]
 507:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1418              	 .loc 1 507 0
 1419 0014 5107     	 lsls r1,r2,#29
 1420              	 .loc 1 509 0
 1421 0016 48BF     	 it mi
 1422 0018 C0F84833 	 strmi r3,[r0,#840]
 507:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1423              	 .loc 1 507 0
 1424 001c 1107     	 lsls r1,r2,#28
 1425              	 .loc 1 509 0
 1426 001e 48BF     	 it mi
 1427 0020 C0F85033 	 strmi r3,[r0,#848]
 507:../Libraries/XMCLib/src/xmc_dma.c ****     {
 1428              	 .loc 1 507 0
 1429 0024 D206     	 lsls r2,r2,#27
 1430              	.LVL145:
 1431              	 .loc 1 509 0
 1432 0026 48BF     	 it mi
 1433 0028 C0F85833 	 strmi r3,[r0,#856]
 1434              	.LVL146:
 1435 002c 7047     	 bx lr
 1436              	 .cfi_endproc
 1437              	.LFE190:
 1439 002e 00BF     	 .section .text.XMC_DMA_CH_GetEventStatus,"ax",%progbits
 1440              	 .align 2
 1441              	 .global XMC_DMA_CH_GetEventStatus
 1442              	 .thumb
 1443              	 .thumb_func
 1445              	XMC_DMA_CH_GetEventStatus:
 1446              	.LFB191:
 510:../Libraries/XMCLib/src/xmc_dma.c ****     }
 511:../Libraries/XMCLib/src/xmc_dma.c ****   }
 512:../Libraries/XMCLib/src/xmc_dma.c **** 
 513:../Libraries/XMCLib/src/xmc_dma.c **** }
 514:../Libraries/XMCLib/src/xmc_dma.c **** 
 515:../Libraries/XMCLib/src/xmc_dma.c **** /* Get GPDMA event status */
 516:../Libraries/XMCLib/src/xmc_dma.c **** uint32_t XMC_DMA_CH_GetEventStatus(XMC_DMA_t *const dma, const uint8_t channel)
 517:../Libraries/XMCLib/src/xmc_dma.c **** {
 1447              	 .loc 1 517 0
 1448              	 .cfi_startproc
 1449              	 
 1450              	 
 1451              	 
 1452              	.LVL147:
 1453 0000 F0B4     	 push {r4,r5,r6,r7}
 1454              	.LCFI12:
 1455              	 .cfi_def_cfa_offset 16
 1456              	 .cfi_offset 4,-16
 1457              	 .cfi_offset 5,-12
 1458              	 .cfi_offset 6,-8
 1459              	 .cfi_offset 7,-4
 1460 0002 0123     	 movs r3,#1
 518:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 519:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t status = 0UL;
 520:../Libraries/XMCLib/src/xmc_dma.c **** 
 521:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 522:../Libraries/XMCLib/src/xmc_dma.c ****   {
 523:../Libraries/XMCLib/src/xmc_dma.c ****     status |= (uint32_t)((dma->STATUSCHEV[event_idx * 2UL] & (uint32_t)((uint32_t)0x1UL << (uint32_
 1461              	 .loc 1 523 0
 1462 0004 D0F8E872 	 ldr r7,[r0,#744]
 1463 0008 D0F8F022 	 ldr r2,[r0,#752]
 1464 000c D0F8F862 	 ldr r6,[r0,#760]
 1465 0010 D0F80053 	 ldr r5,[r0,#768]
 1466 0014 D0F80843 	 ldr r4,[r0,#776]
 1467 0018 8B40     	 lsls r3,r3,r1
 1468              	.LVL148:
 1469 001a 3B42     	 tst r3,r7
 1470 001c 14BF     	 ite ne
 1471 001e 0120     	 movne r0,#1
 1472              	.LVL149:
 1473 0020 0020     	 moveq r0,#0
 1474 0022 1342     	 tst r3,r2
 1475 0024 14BF     	 ite ne
 1476 0026 0222     	 movne r2,#2
 1477 0028 0022     	 moveq r2,#0
 1478 002a 3342     	 tst r3,r6
 1479 002c 40EA0200 	 orr r0,r0,r2
 1480 0030 14BF     	 ite ne
 1481 0032 0422     	 movne r2,#4
 1482 0034 0022     	 moveq r2,#0
 1483 0036 1D42     	 tst r5,r3
 1484 0038 40EA0200 	 orr r0,r0,r2
 1485 003c 14BF     	 ite ne
 1486 003e 0822     	 movne r2,#8
 1487 0040 0022     	 moveq r2,#0
 1488 0042 1C42     	 tst r4,r3
 1489 0044 40EA0203 	 orr r3,r0,r2
 1490              	.LVL150:
 1491 0048 14BF     	 ite ne
 1492 004a 1020     	 movne r0,#16
 1493 004c 0020     	 moveq r0,#0
 524:../Libraries/XMCLib/src/xmc_dma.c ****                          ((uint32_t)0x1UL << event_idx) : (uint32_t)0UL);
 525:../Libraries/XMCLib/src/xmc_dma.c ****   }
 526:../Libraries/XMCLib/src/xmc_dma.c **** 
 527:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 528:../Libraries/XMCLib/src/xmc_dma.c **** }
 1494              	 .loc 1 528 0
 1495 004e 1843     	 orrs r0,r0,r3
 1496 0050 F0BC     	 pop {r4,r5,r6,r7}
 1497              	.LCFI13:
 1498              	 .cfi_restore 7
 1499              	 .cfi_restore 6
 1500              	 .cfi_restore 5
 1501              	 .cfi_restore 4
 1502              	 .cfi_def_cfa_offset 0
 1503              	.LVL151:
 1504 0052 7047     	 bx lr
 1505              	 .cfi_endproc
 1506              	.LFE191:
 1508              	 .section .text.XMC_DMA_CH_EnableSourceGather,"ax",%progbits
 1509              	 .align 2
 1510              	 .global XMC_DMA_CH_EnableSourceGather
 1511              	 .thumb
 1512              	 .thumb_func
 1514              	XMC_DMA_CH_EnableSourceGather:
 1515              	.LFB192:
 529:../Libraries/XMCLib/src/xmc_dma.c **** 
 530:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source gather */
 531:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceGather(XMC_DMA_t *const dma, const uint8_t channel, uint32_t interval, 
 532:../Libraries/XMCLib/src/xmc_dma.c **** {
 1516              	 .loc 1 532 0
 1517              	 .cfi_startproc
 1518              	 
 1519              	 
 1520              	 
 1521              	.LVL152:
 1522 0000 10B4     	 push {r4}
 1523              	.LCFI14:
 1524              	 .cfi_def_cfa_offset 4
 1525              	 .cfi_offset 4,-4
 533:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 1526              	 .loc 1 533 0
 1527 0002 5824     	 movs r4,#88
 1528 0004 04FB0101 	 mla r1,r4,r1,r0
 1529              	.LVL153:
 534:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].SGR = ((uint32_t)interval << GPDMA0_CH_SGR_SGI_Pos) | ((uint32_t)count << GPDMA0
 1530              	 .loc 1 534 0
 1531 0008 42EA0353 	 orr r3,r2,r3,lsl#20
 1532              	.LVL154:
 533:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 1533              	 .loc 1 533 0
 1534 000c 8869     	 ldr r0,[r1,#24]
 1535              	.LVL155:
 535:../Libraries/XMCLib/src/xmc_dma.c **** }
 1536              	 .loc 1 535 0
 1537 000e 5DF8044B 	 ldr r4,[sp],#4
 1538              	.LCFI15:
 1539              	 .cfi_restore 4
 1540              	 .cfi_def_cfa_offset 0
 533:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 1541              	 .loc 1 533 0
 1542 0012 40F40030 	 orr r0,r0,#131072
 1543 0016 8861     	 str r0,[r1,#24]
 534:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].SGR = ((uint32_t)interval << GPDMA0_CH_SGR_SGI_Pos) | ((uint32_t)count << GPDMA0
 1544              	 .loc 1 534 0
 1545 0018 8B64     	 str r3,[r1,#72]
 1546              	 .loc 1 535 0
 1547 001a 7047     	 bx lr
 1548              	 .cfi_endproc
 1549              	.LFE192:
 1551              	 .section .text.XMC_DMA_CH_DisableSourceGather,"ax",%progbits
 1552              	 .align 2
 1553              	 .global XMC_DMA_CH_DisableSourceGather
 1554              	 .thumb
 1555              	 .thumb_func
 1557              	XMC_DMA_CH_DisableSourceGather:
 1558              	.LFB193:
 536:../Libraries/XMCLib/src/xmc_dma.c **** 
 537:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source gather */
 538:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceGather(XMC_DMA_t *const dma, const uint8_t channel)
 539:../Libraries/XMCLib/src/xmc_dma.c **** {
 1559              	 .loc 1 539 0
 1560              	 .cfi_startproc
 1561              	 
 1562              	 
 1563              	 
 1564              	.LVL156:
 540:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 1565              	 .loc 1 540 0
 1566 0000 5823     	 movs r3,#88
 1567 0002 03FB0101 	 mla r1,r3,r1,r0
 1568              	.LVL157:
 1569 0006 8B69     	 ldr r3,[r1,#24]
 1570 0008 23F40033 	 bic r3,r3,#131072
 1571 000c 8B61     	 str r3,[r1,#24]
 1572 000e 7047     	 bx lr
 1573              	 .cfi_endproc
 1574              	.LFE193:
 1576              	 .section .text.XMC_DMA_CH_EnableDestinationScatter,"ax",%progbits
 1577              	 .align 2
 1578              	 .global XMC_DMA_CH_EnableDestinationScatter
 1579              	 .thumb
 1580              	 .thumb_func
 1582              	XMC_DMA_CH_EnableDestinationScatter:
 1583              	.LFB194:
 541:../Libraries/XMCLib/src/xmc_dma.c **** }
 542:../Libraries/XMCLib/src/xmc_dma.c **** 
 543:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination scatter */
 544:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel, uint32_t inte
 545:../Libraries/XMCLib/src/xmc_dma.c **** {
 1584              	 .loc 1 545 0
 1585              	 .cfi_startproc
 1586              	 
 1587              	 
 1588              	 
 1589              	.LVL158:
 1590 0000 10B4     	 push {r4}
 1591              	.LCFI16:
 1592              	 .cfi_def_cfa_offset 4
 1593              	 .cfi_offset 4,-4
 546:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 1594              	 .loc 1 546 0
 1595 0002 5824     	 movs r4,#88
 1596 0004 04FB0101 	 mla r1,r4,r1,r0
 1597              	.LVL159:
 547:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].DSR = ((uint32_t)interval << GPDMA0_CH_DSR_DSI_Pos) | ((uint32_t)count << GPDMA0
 1598              	 .loc 1 547 0
 1599 0008 42EA0353 	 orr r3,r2,r3,lsl#20
 1600              	.LVL160:
 546:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 1601              	 .loc 1 546 0
 1602 000c 8869     	 ldr r0,[r1,#24]
 1603              	.LVL161:
 548:../Libraries/XMCLib/src/xmc_dma.c **** }
 1604              	 .loc 1 548 0
 1605 000e 5DF8044B 	 ldr r4,[sp],#4
 1606              	.LCFI17:
 1607              	 .cfi_restore 4
 1608              	 .cfi_def_cfa_offset 0
 546:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 1609              	 .loc 1 546 0
 1610 0012 40F48020 	 orr r0,r0,#262144
 1611 0016 8861     	 str r0,[r1,#24]
 547:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].DSR = ((uint32_t)interval << GPDMA0_CH_DSR_DSI_Pos) | ((uint32_t)count << GPDMA0
 1612              	 .loc 1 547 0
 1613 0018 0B65     	 str r3,[r1,#80]
 1614              	 .loc 1 548 0
 1615 001a 7047     	 bx lr
 1616              	 .cfi_endproc
 1617              	.LFE194:
 1619              	 .section .text.XMC_DMA_CH_DisableDestinationScatter,"ax",%progbits
 1620              	 .align 2
 1621              	 .global XMC_DMA_CH_DisableDestinationScatter
 1622              	 .thumb
 1623              	 .thumb_func
 1625              	XMC_DMA_CH_DisableDestinationScatter:
 1626              	.LFB195:
 549:../Libraries/XMCLib/src/xmc_dma.c **** 
 550:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination scatter */
 551:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel)
 552:../Libraries/XMCLib/src/xmc_dma.c **** {
 1627              	 .loc 1 552 0
 1628              	 .cfi_startproc
 1629              	 
 1630              	 
 1631              	 
 1632              	.LVL162:
 553:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 1633              	 .loc 1 553 0
 1634 0000 5823     	 movs r3,#88
 1635 0002 03FB0101 	 mla r1,r3,r1,r0
 1636              	.LVL163:
 1637 0006 8B69     	 ldr r3,[r1,#24]
 1638 0008 23F48023 	 bic r3,r3,#262144
 1639 000c 8B61     	 str r3,[r1,#24]
 1640 000e 7047     	 bx lr
 1641              	 .cfi_endproc
 1642              	.LFE195:
 1644              	 .section .text.XMC_DMA_CH_TriggerSourceRequest,"ax",%progbits
 1645              	 .align 2
 1646              	 .global XMC_DMA_CH_TriggerSourceRequest
 1647              	 .thumb
 1648              	 .thumb_func
 1650              	XMC_DMA_CH_TriggerSourceRequest:
 1651              	.LFB196:
 554:../Libraries/XMCLib/src/xmc_dma.c **** }
 555:../Libraries/XMCLib/src/xmc_dma.c **** 
 556:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger source request */
 557:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerSourceRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_
 558:../Libraries/XMCLib/src/xmc_dma.c **** {
 1652              	 .loc 1 558 0
 1653              	 .cfi_startproc
 1654              	 
 1655              	 
 1656              	 
 1657              	.LVL164:
 559:../Libraries/XMCLib/src/xmc_dma.c ****   if ((uint32_t)type == (uint32_t)XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 1658              	 .loc 1 559 0
 1659 0000 42B1     	 cbz r2,.L187
 1660 0002 40F20112 	 movw r2,#257
 1661              	.LVL165:
 1662 0006 8A40     	 lsls r2,r2,r1
 1663              	.L188:
 560:../Libraries/XMCLib/src/xmc_dma.c ****   {  
 561:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQSRCREG = ((uint32_t)0x101UL << channel);
 562:../Libraries/XMCLib/src/xmc_dma.c ****   }
 563:../Libraries/XMCLib/src/xmc_dma.c **** 
 564:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 1664              	 .loc 1 564 0
 1665 0008 0BB1     	 cbz r3,.L189
 565:../Libraries/XMCLib/src/xmc_dma.c ****   {
 566:../Libraries/XMCLib/src/xmc_dma.c ****   dma->LSTSRCREG = (uint32_t)0x101UL << channel;
 1666              	 .loc 1 566 0
 1667 000a C0F88823 	 str r2,[r0,#904]
 1668              	.L189:
 567:../Libraries/XMCLib/src/xmc_dma.c ****   }
 568:../Libraries/XMCLib/src/xmc_dma.c ****   
 569:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQSRCREG = (uint32_t)0x101UL << channel;
 1669              	 .loc 1 569 0
 1670 000e C0F86823 	 str r2,[r0,#872]
 1671 0012 7047     	 bx lr
 1672              	.LVL166:
 1673              	.L187:
 561:../Libraries/XMCLib/src/xmc_dma.c ****   }
 1674              	 .loc 1 561 0
 1675 0014 40F20112 	 movw r2,#257
 1676              	.LVL167:
 1677 0018 8A40     	 lsls r2,r2,r1
 1678 001a C0F87823 	 str r2,[r0,#888]
 1679 001e F3E7     	 b .L188
 1680              	 .cfi_endproc
 1681              	.LFE196:
 1683              	 .section .text.XMC_DMA_CH_TriggerDestinationRequest,"ax",%progbits
 1684              	 .align 2
 1685              	 .global XMC_DMA_CH_TriggerDestinationRequest
 1686              	 .thumb
 1687              	 .thumb_func
 1689              	XMC_DMA_CH_TriggerDestinationRequest:
 1690              	.LFB197:
 570:../Libraries/XMCLib/src/xmc_dma.c **** }
 571:../Libraries/XMCLib/src/xmc_dma.c **** 
 572:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger destination request */
 573:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerDestinationRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DM
 574:../Libraries/XMCLib/src/xmc_dma.c **** {
 1691              	 .loc 1 574 0
 1692              	 .cfi_startproc
 1693              	 
 1694              	 
 1695              	 
 1696              	.LVL168:
 575:../Libraries/XMCLib/src/xmc_dma.c ****   if(type == XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 1697              	 .loc 1 575 0
 1698 0000 42B1     	 cbz r2,.L194
 1699 0002 40F20112 	 movw r2,#257
 1700              	.LVL169:
 1701 0006 8A40     	 lsls r2,r2,r1
 1702              	.L195:
 576:../Libraries/XMCLib/src/xmc_dma.c ****   {  
 577:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQDSTREG = (uint32_t)0x101UL << channel;
 578:../Libraries/XMCLib/src/xmc_dma.c ****   }
 579:../Libraries/XMCLib/src/xmc_dma.c **** 
 580:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 1703              	 .loc 1 580 0
 1704 0008 0BB1     	 cbz r3,.L196
 581:../Libraries/XMCLib/src/xmc_dma.c ****   {
 582:../Libraries/XMCLib/src/xmc_dma.c ****     dma->LSTDSTREG = (uint32_t)0x101UL << channel;
 1705              	 .loc 1 582 0
 1706 000a C0F89023 	 str r2,[r0,#912]
 1707              	.L196:
 583:../Libraries/XMCLib/src/xmc_dma.c ****   }
 584:../Libraries/XMCLib/src/xmc_dma.c **** 
 585:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQDSTREG = (uint32_t)0x101UL << channel;
 1708              	 .loc 1 585 0
 1709 000e C0F87023 	 str r2,[r0,#880]
 1710 0012 7047     	 bx lr
 1711              	.LVL170:
 1712              	.L194:
 577:../Libraries/XMCLib/src/xmc_dma.c ****   }
 1713              	 .loc 1 577 0
 1714 0014 40F20112 	 movw r2,#257
 1715              	.LVL171:
 1716 0018 8A40     	 lsls r2,r2,r1
 1717 001a C0F88023 	 str r2,[r0,#896]
 1718 001e F3E7     	 b .L195
 1719              	 .cfi_endproc
 1720              	.LFE197:
 1722              	 .section .text.XMC_DMA_CH_EnableSourceAddressReload,"ax",%progbits
 1723              	 .align 2
 1724              	 .global XMC_DMA_CH_EnableSourceAddressReload
 1725              	 .thumb
 1726              	 .thumb_func
 1728              	XMC_DMA_CH_EnableSourceAddressReload:
 1729              	.LFB198:
 586:../Libraries/XMCLib/src/xmc_dma.c **** }
 587:../Libraries/XMCLib/src/xmc_dma.c **** 
 588:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source address reload */
 589:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 590:../Libraries/XMCLib/src/xmc_dma.c **** {
 1730              	 .loc 1 590 0
 1731              	 .cfi_startproc
 1732              	 
 1733              	 
 1734              	 
 1735              	.LVL172:
 591:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1736              	 .loc 1 591 0
 1737 0000 5823     	 movs r3,#88
 1738 0002 03FB0101 	 mla r1,r3,r1,r0
 1739              	.LVL173:
 1740 0006 0B6C     	 ldr r3,[r1,#64]
 1741 0008 43F08043 	 orr r3,r3,#1073741824
 1742 000c 0B64     	 str r3,[r1,#64]
 1743 000e 7047     	 bx lr
 1744              	 .cfi_endproc
 1745              	.LFE198:
 1747              	 .section .text.XMC_DMA_CH_DisableSourceAddressReload,"ax",%progbits
 1748              	 .align 2
 1749              	 .global XMC_DMA_CH_DisableSourceAddressReload
 1750              	 .thumb
 1751              	 .thumb_func
 1753              	XMC_DMA_CH_DisableSourceAddressReload:
 1754              	.LFB199:
 592:../Libraries/XMCLib/src/xmc_dma.c **** }
 593:../Libraries/XMCLib/src/xmc_dma.c **** 
 594:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source address reload */
 595:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 596:../Libraries/XMCLib/src/xmc_dma.c **** {
 1755              	 .loc 1 596 0
 1756              	 .cfi_startproc
 1757              	 
 1758              	 
 1759              	 
 1760              	.LVL174:
 597:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1761              	 .loc 1 597 0
 1762 0000 5823     	 movs r3,#88
 1763 0002 03FB0101 	 mla r1,r3,r1,r0
 1764              	.LVL175:
 1765 0006 0B6C     	 ldr r3,[r1,#64]
 1766 0008 23F08043 	 bic r3,r3,#1073741824
 1767 000c 0B64     	 str r3,[r1,#64]
 1768 000e 7047     	 bx lr
 1769              	 .cfi_endproc
 1770              	.LFE199:
 1772              	 .section .text.XMC_DMA_CH_EnableDestinationAddressReload,"ax",%progbits
 1773              	 .align 2
 1774              	 .global XMC_DMA_CH_EnableDestinationAddressReload
 1775              	 .thumb
 1776              	 .thumb_func
 1778              	XMC_DMA_CH_EnableDestinationAddressReload:
 1779              	.LFB200:
 598:../Libraries/XMCLib/src/xmc_dma.c **** }
 599:../Libraries/XMCLib/src/xmc_dma.c **** 
 600:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination address reload */
 601:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 602:../Libraries/XMCLib/src/xmc_dma.c **** {
 1780              	 .loc 1 602 0
 1781              	 .cfi_startproc
 1782              	 
 1783              	 
 1784              	 
 1785              	.LVL176:
 603:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1786              	 .loc 1 603 0
 1787 0000 5823     	 movs r3,#88
 1788 0002 03FB0101 	 mla r1,r3,r1,r0
 1789              	.LVL177:
 1790 0006 0B6C     	 ldr r3,[r1,#64]
 1791 0008 43F00043 	 orr r3,r3,#-2147483648
 1792 000c 0B64     	 str r3,[r1,#64]
 1793 000e 7047     	 bx lr
 1794              	 .cfi_endproc
 1795              	.LFE200:
 1797              	 .section .text.XMC_DMA_CH_DisableDestinationAddressReload,"ax",%progbits
 1798              	 .align 2
 1799              	 .global XMC_DMA_CH_DisableDestinationAddressReload
 1800              	 .thumb
 1801              	 .thumb_func
 1803              	XMC_DMA_CH_DisableDestinationAddressReload:
 1804              	.LFB201:
 604:../Libraries/XMCLib/src/xmc_dma.c **** }
 605:../Libraries/XMCLib/src/xmc_dma.c **** 
 606:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination address reload */
 607:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 608:../Libraries/XMCLib/src/xmc_dma.c **** {
 1805              	 .loc 1 608 0
 1806              	 .cfi_startproc
 1807              	 
 1808              	 
 1809              	 
 1810              	.LVL178:
 609:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1811              	 .loc 1 609 0
 1812 0000 5823     	 movs r3,#88
 1813 0002 03FB0101 	 mla r1,r3,r1,r0
 1814              	.LVL179:
 1815 0006 0B6C     	 ldr r3,[r1,#64]
 1816 0008 23F00043 	 bic r3,r3,#-2147483648
 1817 000c 0B64     	 str r3,[r1,#64]
 1818 000e 7047     	 bx lr
 1819              	 .cfi_endproc
 1820              	.LFE201:
 1822              	 .section .text.XMC_DMA_CH_RequestLastMultiblockTransfer,"ax",%progbits
 1823              	 .align 2
 1824              	 .global XMC_DMA_CH_RequestLastMultiblockTransfer
 1825              	 .thumb
 1826              	 .thumb_func
 1828              	XMC_DMA_CH_RequestLastMultiblockTransfer:
 1829              	.LFB202:
 610:../Libraries/XMCLib/src/xmc_dma.c **** }
 611:../Libraries/XMCLib/src/xmc_dma.c **** 
 612:../Libraries/XMCLib/src/xmc_dma.c **** /* Request last multi-block transfer */
 613:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_RequestLastMultiblockTransfer(XMC_DMA_t *const dma, const uint8_t channel)
 614:../Libraries/XMCLib/src/xmc_dma.c **** {
 1830              	 .loc 1 614 0
 1831              	 .cfi_startproc
 1832              	 
 1833              	 
 1834              	 
 1835              	.LVL180:
 615:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~(GPDMA0_CH_CFGL_RELOAD_SRC_Msk | GPDMA0_CH_CFGL_RELOAD_DST_Ms
 1836              	 .loc 1 615 0
 1837 0000 5823     	 movs r3,#88
 1838 0002 03FB0101 	 mla r1,r3,r1,r0
 1839              	.LVL181:
 1840 0006 0B6C     	 ldr r3,[r1,#64]
 1841 0008 23F04043 	 bic r3,r3,#-1073741824
 1842 000c 0B64     	 str r3,[r1,#64]
 1843 000e 7047     	 bx lr
 1844              	 .cfi_endproc
 1845              	.LFE202:
 1847              	 .section .text.XMC_DMA_CH_SetEventHandler,"ax",%progbits
 1848              	 .align 2
 1849              	 .global XMC_DMA_CH_SetEventHandler
 1850              	 .thumb
 1851              	 .thumb_func
 1853              	XMC_DMA_CH_SetEventHandler:
 1854              	.LFB203:
 616:../Libraries/XMCLib/src/xmc_dma.c **** }
 617:../Libraries/XMCLib/src/xmc_dma.c **** 
 618:../Libraries/XMCLib/src/xmc_dma.c **** /* Set event handler */
 619:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_SetEventHandler(XMC_DMA_t *const dma, const uint8_t channel, XMC_DMA_CH_EVENT_HANDL
 620:../Libraries/XMCLib/src/xmc_dma.c **** {
 1855              	 .loc 1 620 0
 1856              	 .cfi_startproc
 1857              	 
 1858              	 
 1859              	 
 1860              	.LVL182:
 621:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 622:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 1861              	 .loc 1 622 0
 1862 0000 034B     	 ldr r3,.L208
 1863 0002 9842     	 cmp r0,r3
 623:../Libraries/XMCLib/src/xmc_dma.c ****   {
 624:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 625:../Libraries/XMCLib/src/xmc_dma.c ****     dma0_event_handlers[channel] = event_handler;
 1864              	 .loc 1 625 0
 1865 0004 0CBF     	 ite eq
 1866 0006 034B     	 ldreq r3,.L208+4
 626:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 627:../Libraries/XMCLib/src/xmc_dma.c ****   }
 628:../Libraries/XMCLib/src/xmc_dma.c ****   else
 629:../Libraries/XMCLib/src/xmc_dma.c ****   {
 630:../Libraries/XMCLib/src/xmc_dma.c ****     dma1_event_handlers[channel] = event_handler;
 1867              	 .loc 1 630 0
 1868 0008 034B     	 ldrne r3,.L208+8
 1869 000a 43F82120 	 str r2,[r3,r1,lsl#2]
 1870 000e 7047     	 bx lr
 1871              	.L209:
 1872              	 .align 2
 1873              	.L208:
 1874 0010 00400150 	 .word 1342259200
 1875 0014 00000000 	 .word dma0_event_handlers
 1876 0018 00000000 	 .word dma1_event_handlers
 1877              	 .cfi_endproc
 1878              	.LFE203:
 1880              	 .section .text.XMC_DMA_CH_ClearSourcePeripheralRequest,"ax",%progbits
 1881              	 .align 2
 1882              	 .global XMC_DMA_CH_ClearSourcePeripheralRequest
 1883              	 .thumb
 1884              	 .thumb_func
 1886              	XMC_DMA_CH_ClearSourcePeripheralRequest:
 1887              	.LFB204:
 631:../Libraries/XMCLib/src/xmc_dma.c ****   }
 632:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 633:../Libraries/XMCLib/src/xmc_dma.c **** }
 634:../Libraries/XMCLib/src/xmc_dma.c **** 
 635:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearSourcePeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 636:../Libraries/XMCLib/src/xmc_dma.c **** {
 1888              	 .loc 1 636 0
 1889              	 .cfi_startproc
 1890              	 
 1891              	 
 1892              	 
 1893              	.LVL183:
 637:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 638:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_SRC_PER_Msk) >> GPDMA0_CH_CFGH_SRC_PER_Pos;
 1894              	 .loc 1 638 0
 1895 0000 5823     	 movs r3,#88
 1896 0002 03FB0101 	 mla r1,r3,r1,r0
 1897              	.LVL184:
 1898              	.LBB96:
 1899              	.LBB97:
 238:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1900              	 .loc 1 238 0
 1901 0006 0A4A     	 ldr r2,.L214
 1902              	.LBE97:
 1903              	.LBE96:
 1904              	 .loc 1 638 0
 1905 0008 4B6C     	 ldr r3,[r1,#68]
 1906 000a C3F3C311 	 ubfx r1,r3,#7,#4
 1907              	.LVL185:
 1908              	.LBB103:
 1909              	.LBB102:
 1910              	.LBB98:
 1911              	.LBB99:
 241:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x1UL << line;
 1912              	 .loc 1 241 0
 1913 000e 094B     	 ldr r3,.L214+4
 1914              	.LBE99:
 1915              	.LBE98:
 238:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1916              	 .loc 1 238 0
 1917 0010 9042     	 cmp r0,r2
 1918              	.LBB101:
 1919              	.LBB100:
 241:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x1UL << line;
 1920              	 .loc 1 241 0
 1921 0012 08BF     	 it eq
 1922 0014 0122     	 moveq r2,#1
 1923              	.LBE100:
 1924              	.LBE101:
 247:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x100UL << line;
 1925              	 .loc 1 247 0
 1926 0016 1869     	 ldr r0,[r3,#16]
 1927              	.LVL186:
 1928 0018 18BF     	 it ne
 1929 001a 4FF48072 	 movne r2,#256
 1930 001e 8A40     	 lsls r2,r2,r1
 1931 0020 20EA0201 	 bic r1,r0,r2
 1932              	.LVL187:
 1933 0024 1961     	 str r1,[r3,#16]
 248:../Libraries/XMCLib/src/xmc_dma.c ****   }
 1934              	 .loc 1 248 0
 1935 0026 1969     	 ldr r1,[r3,#16]
 1936 0028 0A43     	 orrs r2,r2,r1
 1937 002a 1A61     	 str r2,[r3,#16]
 1938 002c 7047     	 bx lr
 1939              	.L215:
 1940 002e 00BF     	 .align 2
 1941              	.L214:
 1942 0030 00400150 	 .word 1342259200
 1943 0034 00490050 	 .word 1342195968
 1944              	.LBE102:
 1945              	.LBE103:
 1946              	 .cfi_endproc
 1947              	.LFE204:
 1949              	 .section .text.XMC_DMA_CH_ClearDestinationPeripheralRequest,"ax",%progbits
 1950              	 .align 2
 1951              	 .global XMC_DMA_CH_ClearDestinationPeripheralRequest
 1952              	 .thumb
 1953              	 .thumb_func
 1955              	XMC_DMA_CH_ClearDestinationPeripheralRequest:
 1956              	.LFB205:
 639:../Libraries/XMCLib/src/xmc_dma.c **** 
 640:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 641:../Libraries/XMCLib/src/xmc_dma.c **** }
 642:../Libraries/XMCLib/src/xmc_dma.c **** 
 643:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearDestinationPeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 644:../Libraries/XMCLib/src/xmc_dma.c **** {
 1957              	 .loc 1 644 0
 1958              	 .cfi_startproc
 1959              	 
 1960              	 
 1961              	 
 1962              	.LVL188:
 645:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 646:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_DEST_PER_Msk) >> GPDMA0_CH_CFGH_DEST_PER_Pos;
 1963              	 .loc 1 646 0
 1964 0000 5823     	 movs r3,#88
 1965 0002 03FB0101 	 mla r1,r3,r1,r0
 1966              	.LVL189:
 1967              	.LBB108:
 1968              	.LBB109:
 238:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1969              	 .loc 1 238 0
 1970 0006 0A4A     	 ldr r2,.L220
 1971              	.LBE109:
 1972              	.LBE108:
 1973              	 .loc 1 646 0
 1974 0008 4B6C     	 ldr r3,[r1,#68]
 1975 000a C3F3C321 	 ubfx r1,r3,#11,#4
 1976              	.LVL190:
 1977              	.LBB115:
 1978              	.LBB114:
 1979              	.LBB110:
 1980              	.LBB111:
 241:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x1UL << line;
 1981              	 .loc 1 241 0
 1982 000e 094B     	 ldr r3,.L220+4
 1983              	.LBE111:
 1984              	.LBE110:
 238:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1985              	 .loc 1 238 0
 1986 0010 9042     	 cmp r0,r2
 1987              	.LBB113:
 1988              	.LBB112:
 241:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x1UL << line;
 1989              	 .loc 1 241 0
 1990 0012 08BF     	 it eq
 1991 0014 0122     	 moveq r2,#1
 1992              	.LBE112:
 1993              	.LBE113:
 247:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x100UL << line;
 1994              	 .loc 1 247 0
 1995 0016 1869     	 ldr r0,[r3,#16]
 1996              	.LVL191:
 1997 0018 18BF     	 it ne
 1998 001a 4FF48072 	 movne r2,#256
 1999 001e 8A40     	 lsls r2,r2,r1
 2000 0020 20EA0201 	 bic r1,r0,r2
 2001              	.LVL192:
 2002 0024 1961     	 str r1,[r3,#16]
 248:../Libraries/XMCLib/src/xmc_dma.c ****   }
 2003              	 .loc 1 248 0
 2004 0026 1969     	 ldr r1,[r3,#16]
 2005 0028 0A43     	 orrs r2,r2,r1
 2006 002a 1A61     	 str r2,[r3,#16]
 2007 002c 7047     	 bx lr
 2008              	.L221:
 2009 002e 00BF     	 .align 2
 2010              	.L220:
 2011 0030 00400150 	 .word 1342259200
 2012 0034 00490050 	 .word 1342195968
 2013              	.LBE114:
 2014              	.LBE115:
 2015              	 .cfi_endproc
 2016              	.LFE205:
 2018              	 .section .text.XMC_DMA_IRQHandler,"ax",%progbits
 2019              	 .align 2
 2020              	 .global XMC_DMA_IRQHandler
 2021              	 .thumb
 2022              	 .thumb_func
 2024              	XMC_DMA_IRQHandler:
 2025              	.LFB206:
 647:../Libraries/XMCLib/src/xmc_dma.c **** 
 648:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 649:../Libraries/XMCLib/src/xmc_dma.c **** }
 650:../Libraries/XMCLib/src/xmc_dma.c **** 
 651:../Libraries/XMCLib/src/xmc_dma.c **** /* Default DMA IRQ handler */
 652:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_IRQHandler(XMC_DMA_t *const dma)
 653:../Libraries/XMCLib/src/xmc_dma.c **** {
 2026              	 .loc 1 653 0
 2027              	 .cfi_startproc
 2028              	 
 2029              	 
 2030              	 
 2031              	.LVL193:
 654:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event;
 655:../Libraries/XMCLib/src/xmc_dma.c ****   int32_t channel;
 656:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t mask;
 657:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t *dma_event_handlers;
 658:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t event_handler;
 659:../Libraries/XMCLib/src/xmc_dma.c **** 
 660:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 661:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 662:../Libraries/XMCLib/src/xmc_dma.c ****   {
 663:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 664:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma0_event_handlers;
 665:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 666:../Libraries/XMCLib/src/xmc_dma.c ****   }
 667:../Libraries/XMCLib/src/xmc_dma.c ****   else
 668:../Libraries/XMCLib/src/xmc_dma.c ****   {
 669:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma1_event_handlers;
 2032              	 .loc 1 669 0
 2033 0000 5A4A     	 ldr r2,.L275
 2034 0002 5B49     	 ldr r1,.L275+4
 2035              	.LBB116:
 2036              	.LBB117:
 2037              	 .file 2 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_dma.h"
   1:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
   2:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
   3:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @file xmc_dma.h
   4:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @date 2016-10-28
   5:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
   6:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @cond
   7:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  **************************************************************************************************
   8:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   9:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
  10:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  11:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * All rights reserved.                        
  12:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *                                             
  13:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * following conditions are met:   
  15:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  16:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * disclaimer.                        
  18:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * 
  19:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * 
  22:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * products derived from this software without specific prior written permission.                  
  24:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  25:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  33:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  **************************************************************************************************
  36:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
  37:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Change History
  38:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * --------------
  39:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
  40:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-02-20:
  41:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Initial <br>
  42:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
  43:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-06-20:
  44:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Add the declarations for the following APIs: <br>
  45:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  46:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  47:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  48:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Documentation updates <br>
  49:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
  51:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * 2016-10-28:
  52:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Fix documentation on maximum block size
  53:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
  54:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @endcond
  55:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
  56:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
  57:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #ifndef XMC_DMA_H
  58:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA_H
  59:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
  60:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  61:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * HEADER FILES
  62:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  63:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
  64:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_common.h"
  65:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
  66:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  67:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
  68:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_dma_map.h"
  69:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
  70:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
  71:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  73:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
  74:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
  75:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
  76:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup DMA
  77:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @brief General purpose DMA (GPDMA) driver for the XMC4000 microcontroller family
  78:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
  79:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The GPDMA is a highly configurable DMA controller that allows high-speed data transfers
  80:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * between peripherals and memories. Complex data transfers can be done with minimal
  81:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * intervention of the processor, making CPU available for other operations.
  82:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
  83:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA provides extensive support for XMC microcontroller peripherals like A/D, D/A
  84:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * converters and timers. Data transfers through communication interfaces (USIC) using the
  85:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA increase efficiency and parallelism for real-time applications.
  86:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
  87:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The DMA low level driver provides functions to configure and initialize the GPDMA
  88:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * hardware peripheral.
  89:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  90:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
  91:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
  92:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  93:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * MACROS
  94:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  95:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
  96:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  97:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0 ((XMC_DMA_t *)GPDMA0_CH0_BASE) /**< DMA module 0 */
  98:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0_NUM_CHANNELS 8
  99:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 100:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 101:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA1)
 102:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1 ((XMC_DMA_t *)GPDMA1_CH0_BASE) /**< DMA module 1, only available in XMC45xx series
 103:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1_NUM_CHANNELS 4
 104:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 105:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 106:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 107:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * ENUMS
 108:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 109:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 110:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 111:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer types
 112:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 113:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_TYPE
 114:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 115:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK,                                /**< Single block */
 116:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD, /**< Multi-block: src addre
 117:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 118:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD,     /**< Multi-block: src addre
 119:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED, /**< Multi-block: src addre
 120:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED,     /**< Multi-block: src addre
 121:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 122:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD,     /**< Multi-block: src addre
 123:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED      /**< Multi-block: src addre
 124:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_TYPE_t;
 125:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 126:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 127:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer flow modes
 128:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 129:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_FLOW
 130:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 131:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA    = 0x0UL, /**< Memory to memory (DMA flow controller) */
 132:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA    = 0x1UL, /**< Memory to peripheral (DMA flow controller) */
 133:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA    = 0x2UL, /**< Peripheral to memory (DMA flow controller) */
 134:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA    = 0x3UL, /**< Peripheral to peripheral (DMA flow controller) 
 135:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_PER    = 0x4UL, /**< Peripheral to memory (Peripheral flow controlle
 136:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_SRCPER = 0x5UL, /**< Peripheral to peripheral (Source peripheral flo
 137:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_PER    = 0x6UL, /**< Memory to peripheral (Peripheral flow controlle
 138:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DSTPER = 0x7UL  /**< Peripheral to peripheral (Destination periphera
 139:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_FLOW_t;
 140:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 141:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 142:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid burst length values
 143:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 144:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_BURST_LENGTH
 145:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 146:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_1 = 0x0UL, /**< Burst length: 1 word */
 147:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_4 = 0x1UL, /**< Burst length: 4 words */
 148:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_8 = 0x2UL  /**< Burst length: 8 words */
 149:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_BURST_LENGTH_t;
 150:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 151:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 152:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid transfer width values
 153:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 154:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_WIDTH
 155:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 156:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_8  = 0x0UL, /**< 8-bit transfer width */
 157:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_16 = 0x1UL, /**< 16-bit transfer width */
 158:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_32 = 0x2UL  /**< 32-bit transfer width */
 159:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_WIDTH_t;
 160:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 161:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 162:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA address count mode
 163:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 164:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_ADDRESS_COUNT_MODE
 165:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 166:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT = 0x0UL, /**< Address count mode: increment */
 167:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_DECREMENT = 0x1UL, /**< Address count mode: decrement */
 168:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE = 0x2UL  /**< Address count mode: no change */
 169:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_ADDRESS_COUNT_MODE_t;
 170:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 171:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 172:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel priorities
 173:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 174:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_PRIORITY
 175:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 176:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_0 = 0x0UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 0 (low) *
 177:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_1 = 0x1UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 1 */
 178:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_2 = 0x2UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 2 */
 179:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_3 = 0x3UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 3 */
 180:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_4 = 0x4UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 4 */
 181:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_5 = 0x5UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 5 */
 182:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_6 = 0x6UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 6 */
 183:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_7 = 0x7UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos  /**< DMA channel priority 7 (high) 
 184:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_PRIORITY_t;
 185:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 186:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 187:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Source handshake interface
 188:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 189:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_SRC_HANDSHAKING
 190:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 191:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos, /**< Source: hardwa
 192:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos  /**< Source: softwa
 193:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_SRC_HANDSHAKING_t;
 194:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 195:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 196:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination handshake interface
 197:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 198:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_DST_HANDSHAKING
 199:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 200:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos, /**< Destination: h
 201:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos  /**< Destination: s
 202:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_DST_HANDSHAKING_t;
 203:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 204:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 205:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA hardware handshaking interface
 206:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Hardware handshaking available only if DMA is flow controller
 207:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 208:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_HARDWARE_HANDSHAKING_IF
 209:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 210:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_0 = 0x0UL, /**< Hardware handshaking interface 0 */
 211:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_1 = 0x1UL, /**< Hardware handshaking interface 1 */
 212:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_2 = 0x2UL, /**< Hardware handshaking interface 2 */
 213:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_3 = 0x3UL, /**< Hardware handshaking interface 3 */
 214:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_4 = 0x4UL, /**< Hardware handshaking interface 4 */
 215:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_5 = 0x5UL, /**< Hardware handshaking interface 5 */
 216:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_6 = 0x6UL, /**< Hardware handshaking interface 6 */
 217:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_7 = 0x7UL  /**< Hardware handshaking interface 7 */
 218:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_t;
 219:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 220:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 221:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA events
 222:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 223:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_EVENT
 224:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 225:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_TRANSFER_COMPLETE        = 0x1UL, /**< Transfer complete event */
 226:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE  = 0x2UL, /**< Block transfer complete event */
 227:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE = 0x4UL, /**< Source transaction complete event */
 228:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE = 0x8UL, /**< Destination transaction complete event */
 229:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_ERROR                    = 0x10UL /**< DMA error event */
 230:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_EVENT_t;
 231:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 232:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 233:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Transaction types
 234:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 235:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSACTION_TYPE
 236:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 237:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, /**< Single DMA transaction */
 238:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_BURST   /**< Burst transaction */
 239:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSACTION_TYPE_t;
 240:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 241:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 242:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel status values
 243:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 244:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_STATUS
 245:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 246:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_OK,    /**< DMA status OK */
 247:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_ERROR, /**< DMA status error */
 248:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_BUSY   /**< DMA is busy */
 249:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_STATUS_t;
 250:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 251:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 252:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DATA STRUCTURES
 253:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 254:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 255:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 256:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure <br>
 257:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 258:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 259:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the DMA channel. It is contained within the ::XMC_DMA_t
 260:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * structure. It's registers can be used to configure DMA transfer details
 261:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * like source address, destination address, block size, incrementation
 262:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * modes and the like.
 263:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 264:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  
 265:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct {
 266:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SAR;
 267:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED0;
 268:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DAR;
 269:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED1;
 270:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LLP;
 271:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED2;
 272:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLL;
 273:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLH;
 274:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTAT;
 275:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED3;
 276:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTAT;
 277:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED4;
 278:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTATAR;
 279:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED5;
 280:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTATAR;
 281:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED6;
 282:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGL;
 283:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGH;
 284:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGR;
 285:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED7;
 286:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSR;
 287:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED8;
 288:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } GPDMA_CH_t;
 289:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 290:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 291:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA device structure <br>
 292:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 293:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 294:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the GPDMA peripheral on the XMC4000 series of microcontrollers.
 295:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The registers can be accessed with ::XMC_DMA0 and ::XMC_DMA1.
 296:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 297:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct {
 298:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   GPDMA_CH_t CH[8];
 299:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 300:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  RAWCHEV[10];
 301:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSCHEV[10];
 302:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  MASKCHEV[10];
 303:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __O  uint32_t  CLEARCHEV[10];
 304:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSGLEV;
 305:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED20;
 306:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQSRCREG;
 307:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED21;
 308:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQDSTREG;
 309:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED22;
 310:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQSRCREG;
 311:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED23;
 312:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQDSTREG;
 313:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED24;
 314:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTSRCREG;
 315:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED25;
 316:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTDSTREG;
 317:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED26;
 318:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DMACFGREG;
 319:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED27;
 320:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CHENREG;
 321:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED28;
 322:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  ID;
 323:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED29[19];
 324:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  TYPE;
 325:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  VERSION;
 326:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_t;
 327:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 328:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard start */
 329:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 330:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma push
 331:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma anon_unions
 332:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 333:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma warning 586
 334:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 335:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 336:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 337:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel linked list item.
 338:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Note: Needs to be word aligned
 339:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 340:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_LLI
 341:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 342:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 343:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 344:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   struct XMC_DMA_LLI *llp;                      /**< Linked list pointer of type XMC_DMA_LLI_t */
 345:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   union
 346:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   {
 347:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 348:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     {
 349:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 350:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width */
 351:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width */
 352:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode */
 353:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode */
 354:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length */
 355:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length */
 356:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 357:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 358:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             /**< Reserved bits */
 359:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow */
 360:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 4;                             /**< Reserved bits */
 361:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_linked_list: 1;       /**< Enable destination linked list? */
 362:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_linked_list: 1;       /**< Enable source linked list? */
 363:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 3;                             /**< Reserved bits */
 364:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     };
 365:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 366:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   };
 367:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t block_size;                          /**< Transfer block size */
 368:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_status;                          /**< Source status */
 369:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_status;                          /**< Destination status */
 370:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_LLI_t;
 371:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 372:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef XMC_DMA_LLI_t **XMC_DMA_LIST_t;         /**< Type definition for a linked list pointer */
 373:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 374:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 375:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure
 376:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 377:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_CH_CONFIG
 378:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 379:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   union
 380:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   {
 381:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 382:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 383:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     {
 384:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 385:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width */
 386:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width */
 387:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode */
 388:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode */
 389:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length */
 390:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length */
 391:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 392:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 393:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             
 394:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow */
 395:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 9;                             
 396:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     };
 397:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   };
 398:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 399:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 400:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 401:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_LLI_t *linked_list_pointer;           /**< Linked list pointer */
 402:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   
 403:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   union
 404:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   {
 405:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t src_gather_control;
 406:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 407:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     {
 408:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_interval: 20;         /**< Source gather interval */
 409:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_count: 12;            /**< Source gather count */
 410:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     };
 411:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   };
 412:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 413:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   union
 414:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   {
 415:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t dst_scatter_control;
 416:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 417:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     {
 418:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_interval: 20;        /**< Destination scatter interval */
 419:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_count: 12;           /**< Destination scatter count */
 420:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****     };
 421:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   };
 422:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   
 423:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   uint16_t block_size;                          /**< Block size for DMA controlled transfers [max. 
 424:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_t transfer_type;     /**< DMA transfer type */
 425:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_t priority;               /**< DMA channel priority */
 426:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_t src_handshaking; /**< DMA source handshaking interface */
 427:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t src_peripheral_request;               /**< Source peripheral request */
 428:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_t dst_handshaking; /**< DMA destination handshaking interface */
 429:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t dst_peripheral_request;               /**< Destination peripheral request */
 430:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_CONFIG_t;
 431:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 432:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard end */
 433:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 434:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma pop
 435:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 436:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma warning restore
 437:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 438:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 439:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 440:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel event handler
 441:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 442:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** typedef void (*XMC_DMA_CH_EVENT_HANDLER_t)(XMC_DMA_CH_EVENT_t event);
 443:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 444:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 445:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * API PROTOTYPES
 446:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 447:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 448:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #ifdef __cplusplus
 449:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** extern "C" {
 450:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 451:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 452:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 453:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 454:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 455:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 456:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 457:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Initialize the GPDMA peripheral <br>
 458:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 459:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 460:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The function initializes a prioritized list of DMA channels and enables the GPDMA
 461:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral.
 462:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 463:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Init(XMC_DMA_t *const dma);
 464:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 465:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 466:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 467:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 468:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 469:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 470:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Enable the GPDMA peripheral <br>
 471:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 472:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 473:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The function de-asserts the GPDMA peripheral reset. In addition, it un-gates the
 474:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA0 peripheral clock for all XMC4000 series of microcontrollers with an exception
 475:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * of the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 476:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 477:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Enable(XMC_DMA_t *const dma);
 478:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 479:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 480:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 481:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 482:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 483:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 484:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Disable the GPDMA peripheral <br>
 485:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 486:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 487:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The function asserts the GPDMA peripheral reset. In addition, it gates the GPDMA0
 488:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral clock for all XMC4000 series of microcontrollers with an exception of
 489:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 490:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 491:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Disable(XMC_DMA_t *const dma);
 492:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 493:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 494:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 495:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @return bool
 496:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 497:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 498:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Check if the GPDMA peripheral is enabled <br>
 499:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 500:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 501:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * For the XMC4500 microcontroller, the function checks if the GPDMA module is asserted
 502:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * and returns "false" if it is. In addition, it also checks if the clock is gated
 503:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * for the other XMC4000 series of microcontrollers. It returns "true" if the peripheral
 504:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * is enabled.
 505:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 506:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma);
 507:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 508:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 509:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 510:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 511:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 512:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 513:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA event status <br>
 514:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 515:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 516:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the collective (global) status of GPDMA events. The following
 517:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * lists the various DMA events and their corresponding enumeration. The return value
 518:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * of this function may then be masked with any one of the following enumerations to
 519:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * obtain the status of individual DMA events. <br>
 520:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 521:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 522:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Transfer complete -> ::XMC_DMA_CH_EVENT_TRANSFER_COMPLETE                       <br>
 523:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Block transfer complete -> ::XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE           <br>
 524:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Source transaction complete -> ::XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE      <br>
 525:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination transaction complete -> ::XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE <br>
 526:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA error event -> ::XMC_DMA_CH_EVENT_ERROR                                     <br>
 527:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 528:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetEventStatus(XMC_DMA_t *const dma)
 529:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 530:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSGLEV);
 2038              	 .loc 2 530 0
 2039 0004 D0F86033 	 ldr r3,[r0,#864]
 2040              	.LBE117:
 2041              	.LBE116:
 653:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event;
 2042              	 .loc 1 653 0
 2043 0008 30B4     	 push {r4,r5}
 2044              	.LCFI18:
 2045              	 .cfi_def_cfa_offset 8
 2046              	 .cfi_offset 4,-8
 2047              	 .cfi_offset 5,-4
 661:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2048              	 .loc 1 661 0
 2049 000a 5A4D     	 ldr r5,.L275+8
 2050              	 .loc 1 669 0
 2051 000c A842     	 cmp r0,r5
 2052 000e 0CBF     	 ite eq
 2053 0010 0D46     	 moveq r5,r1
 2054 0012 1546     	 movne r5,r2
 2055              	.LVL194:
 670:../Libraries/XMCLib/src/xmc_dma.c ****   }
 671:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 672:../Libraries/XMCLib/src/xmc_dma.c ****   
 673:../Libraries/XMCLib/src/xmc_dma.c ****   event = XMC_DMA_GetEventStatus(dma);
 674:../Libraries/XMCLib/src/xmc_dma.c ****   channel = 0;
 675:../Libraries/XMCLib/src/xmc_dma.c **** 
 676:../Libraries/XMCLib/src/xmc_dma.c ****   if ((event & (uint32_t)XMC_DMA_CH_EVENT_ERROR) != (uint32_t)0UL)
 2056              	 .loc 1 676 0
 2057 0014 13F01002 	 ands r2,r3,#16
 2058 0018 1DD0     	 beq .L224
 2059              	.LVL195:
 2060              	.LBB118:
 2061              	.LBB119:
 531:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** }
 532:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 533:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 534:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 535:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA transfer complete status
 536:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 537:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 538:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Get transfer complete status <br>
 539:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 540:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 541:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA transfer complete interrupt status. <br>
 542:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 543:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsTransferCompleteStatus(XMC_DMA_t *const dma)
 544:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 545:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[0]);
 546:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** }
 547:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 548:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 549:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 550:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA block complete status
 551:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 552:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 553:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Get block transfer complete status <br>
 554:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 555:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 556:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA block transfer complete interrupt status. <br>
 557:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 558:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsBlockCompleteStatus(XMC_DMA_t *const dma)
 559:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 560:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[2]);
 561:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** }
 562:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 563:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 564:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 565:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 566:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 567:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 568:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Get source transaction complete status <br>
 569:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 570:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 571:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the source transaction complete interrupt status. <br>
 572:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 573:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 574:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * If the source peripheral is memory, the source transaction complete interrupt is
 575:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * ignored.
 576:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 577:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsSourceTransactionCompleteStatus(XMC_DMA_t *const dma)
 578:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 579:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[4]);
 580:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** }
 581:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 582:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 583:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 584:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 585:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 586:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 587:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Get destination transaction complete status <br>
 588:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 589:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 590:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the destination transaction complete interrupt status <br>
 591:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 592:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 593:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * If the destination peripheral is memory, the destination transaction complete
 594:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * interrupt is ignored.
 595:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 596:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(XMC_DMA_t *const d
 597:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 598:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[6]);
 599:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** }
 600:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** 
 601:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** /**
 602:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 603:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA error event status
 604:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 605:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 606:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA error event status <br>
 607:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  *
 608:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 609:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns error interrupt status. <br>
 610:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****  */
 611:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsErrorStatus(XMC_DMA_t *const dma)
 612:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** {
 613:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[8]);
 2062              	 .loc 2 613 0
 2063 001a D0F80813 	 ldr r1,[r0,#776]
 2064              	.LBE119:
 2065              	.LBE118:
 677:../Libraries/XMCLib/src/xmc_dma.c ****   {
 678:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsErrorStatus(dma);
 679:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 2066              	 .loc 1 679 0
 2067 001e C1B1     	 cbz r1,.L222
 2068              	.LVL196:
 680:../Libraries/XMCLib/src/xmc_dma.c ****     {
 681:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 682:../Libraries/XMCLib/src/xmc_dma.c ****       if ((event & mask) != 0)
 2069              	 .loc 1 682 0
 2070 0020 CB07     	 lsls r3,r1,#31
 2071 0022 00F19780 	 bmi .L252
 2072 0026 0123     	 movs r3,#1
 681:../Libraries/XMCLib/src/xmc_dma.c ****       if ((event & mask) != 0)
 2073              	 .loc 1 681 0
 2074 0028 1C46     	 mov r4,r3
 2075 002a 00E0     	 b .L241
 2076              	.LVL197:
 2077              	.L228:
 683:../Libraries/XMCLib/src/xmc_dma.c ****       {
 684:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_ERROR);
 685:../Libraries/XMCLib/src/xmc_dma.c **** 
 686:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 687:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 688:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 689:../Libraries/XMCLib/src/xmc_dma.c ****         {
 690:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_ERROR);
 691:../Libraries/XMCLib/src/xmc_dma.c ****         }
 692:../Libraries/XMCLib/src/xmc_dma.c ****        
 693:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 694:../Libraries/XMCLib/src/xmc_dma.c ****       }
 695:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 2078              	 .loc 1 695 0
 2079 002c 0133     	 adds r3,r3,#1
 2080              	.LVL198:
 2081              	.L241:
 681:../Libraries/XMCLib/src/xmc_dma.c ****       if ((event & mask) != 0)
 2082              	 .loc 1 681 0
 2083 002e 04FA03F2 	 lsl r2,r4,r3
 682:../Libraries/XMCLib/src/xmc_dma.c ****       {
 2084              	 .loc 1 682 0
 2085 0032 0A42     	 tst r2,r1
 2086 0034 FAD0     	 beq .L228
 2087 0036 9A00     	 lsls r2,r3,#2
 2088              	.LVL199:
 2089              	.L227:
 687:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 2090              	 .loc 1 687 0
 2091 0038 A958     	 ldr r1,[r5,r2]
 2092              	.LBB120:
 2093              	.LBB121:
 509:../Libraries/XMCLib/src/xmc_dma.c ****     }
 2094              	 .loc 1 509 0
 2095 003a DBB2     	 uxtb r3,r3
 2096 003c 0122     	 movs r2,#1
 2097 003e 02FA03F3 	 lsl r3,r2,r3
 2098              	.LVL200:
 2099 0042 C0F85833 	 str r3,[r0,#856]
 2100              	.LVL201:
 2101              	.LBE121:
 2102              	.LBE120:
 688:../Libraries/XMCLib/src/xmc_dma.c ****         {
 2103              	 .loc 1 688 0
 2104 0046 21B1     	 cbz r1,.L222
 690:../Libraries/XMCLib/src/xmc_dma.c ****         }
 2105              	 .loc 1 690 0
 2106 0048 1020     	 movs r0,#16
 2107              	.LVL202:
 696:../Libraries/XMCLib/src/xmc_dma.c ****     }
 697:../Libraries/XMCLib/src/xmc_dma.c ****   }
 698:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != (uint32_t)0UL)
 699:../Libraries/XMCLib/src/xmc_dma.c ****   {
 700:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsTransferCompleteStatus(dma);
 701:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 702:../Libraries/XMCLib/src/xmc_dma.c ****     {
 703:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 704:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 705:../Libraries/XMCLib/src/xmc_dma.c ****       {
 706:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TR
 707:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_BL
 708:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_SR
 709:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_DS
 710:../Libraries/XMCLib/src/xmc_dma.c **** 
 711:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 712:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 713:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 714:../Libraries/XMCLib/src/xmc_dma.c ****         {
 715:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_TRANSFER_COMPLETE);
 716:../Libraries/XMCLib/src/xmc_dma.c ****         }
 717:../Libraries/XMCLib/src/xmc_dma.c **** 																	  
 718:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 719:../Libraries/XMCLib/src/xmc_dma.c ****       }
 720:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 721:../Libraries/XMCLib/src/xmc_dma.c ****     }
 722:../Libraries/XMCLib/src/xmc_dma.c ****   }
 723:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != (uint32_t)0UL)
 724:../Libraries/XMCLib/src/xmc_dma.c ****   {
 725:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsBlockCompleteStatus(dma);
 726:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 727:../Libraries/XMCLib/src/xmc_dma.c ****     {
 728:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 729:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 730:../Libraries/XMCLib/src/xmc_dma.c ****       {
 731:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_BL
 732:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_SR
 733:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_DS
 734:../Libraries/XMCLib/src/xmc_dma.c **** 
 735:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 736:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 737:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 738:../Libraries/XMCLib/src/xmc_dma.c ****         {
 739:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE);
 740:../Libraries/XMCLib/src/xmc_dma.c ****         }
 741:../Libraries/XMCLib/src/xmc_dma.c **** 
 742:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 743:../Libraries/XMCLib/src/xmc_dma.c ****       }
 744:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 745:../Libraries/XMCLib/src/xmc_dma.c ****     }
 746:../Libraries/XMCLib/src/xmc_dma.c ****   }
 747:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 748:../Libraries/XMCLib/src/xmc_dma.c ****   {
 749:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsSourceTransactionCompleteStatus(dma);
 750:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 751:../Libraries/XMCLib/src/xmc_dma.c ****     {
 752:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 753:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 754:../Libraries/XMCLib/src/xmc_dma.c ****       {
 755:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 756:../Libraries/XMCLib/src/xmc_dma.c **** 
 757:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 758:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 759:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 760:../Libraries/XMCLib/src/xmc_dma.c ****         {
 761:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE);
 762:../Libraries/XMCLib/src/xmc_dma.c ****         }
 763:../Libraries/XMCLib/src/xmc_dma.c ****         
 764:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 765:../Libraries/XMCLib/src/xmc_dma.c ****       }
 766:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 767:../Libraries/XMCLib/src/xmc_dma.c ****     }
 768:../Libraries/XMCLib/src/xmc_dma.c ****   }
 769:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 770:../Libraries/XMCLib/src/xmc_dma.c ****   {
 771:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(dma);
 772:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 773:../Libraries/XMCLib/src/xmc_dma.c ****     {
 774:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 775:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 776:../Libraries/XMCLib/src/xmc_dma.c ****       {
 777:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 778:../Libraries/XMCLib/src/xmc_dma.c **** 
 779:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 780:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 781:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 782:../Libraries/XMCLib/src/xmc_dma.c ****         {
 783:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE);
 784:../Libraries/XMCLib/src/xmc_dma.c ****         }      
 785:../Libraries/XMCLib/src/xmc_dma.c **** 
 786:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 787:../Libraries/XMCLib/src/xmc_dma.c ****       }
 788:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 789:../Libraries/XMCLib/src/xmc_dma.c ****     }
 790:../Libraries/XMCLib/src/xmc_dma.c ****   }
 791:../Libraries/XMCLib/src/xmc_dma.c ****   else
 792:../Libraries/XMCLib/src/xmc_dma.c ****   {
 793:../Libraries/XMCLib/src/xmc_dma.c ****     /* no active interrupt was found? */
 794:../Libraries/XMCLib/src/xmc_dma.c ****   }
 795:../Libraries/XMCLib/src/xmc_dma.c **** 
 796:../Libraries/XMCLib/src/xmc_dma.c **** }
 2108              	 .loc 1 796 0
 2109 004a 30BC     	 pop {r4,r5}
 2110              	.LCFI19:
 2111              	 .cfi_remember_state
 2112              	 .cfi_restore 5
 2113              	 .cfi_restore 4
 2114              	 .cfi_def_cfa_offset 0
 2115              	.LVL203:
 690:../Libraries/XMCLib/src/xmc_dma.c ****         }
 2116              	 .loc 1 690 0
 2117 004c 0847     	 bx r1
 2118              	.LVL204:
 2119              	.L236:
 2120              	.LCFI20:
 2121              	 .cfi_restore_state
 769:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2122              	 .loc 1 769 0
 2123 004e 1A07     	 lsls r2,r3,#28
 2124 0050 65D4     	 bmi .L273
 2125              	.LVL205:
 2126              	.L222:
 2127              	 .loc 1 796 0
 2128 0052 30BC     	 pop {r4,r5}
 2129              	.LCFI21:
 2130              	 .cfi_remember_state
 2131              	 .cfi_restore 5
 2132              	 .cfi_restore 4
 2133              	 .cfi_def_cfa_offset 0
 2134              	.LVL206:
 2135 0054 7047     	 bx lr
 2136              	.LVL207:
 2137              	.L224:
 2138              	.LCFI22:
 2139              	 .cfi_restore_state
 698:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2140              	 .loc 1 698 0
 2141 0056 13F00104 	 ands r4,r3,#1
 2142 005a 20D0     	 beq .L229
 2143              	.LVL208:
 2144              	.LBB122:
 2145              	.LBB123:
 545:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** }
 2146              	 .loc 2 545 0
 2147 005c D0F8E812 	 ldr r1,[r0,#744]
 2148              	.LBE123:
 2149              	.LBE122:
 701:../Libraries/XMCLib/src/xmc_dma.c ****     {
 2150              	 .loc 1 701 0
 2151 0060 0029     	 cmp r1,#0
 2152 0062 F6D0     	 beq .L222
 2153              	.LVL209:
 704:../Libraries/XMCLib/src/xmc_dma.c ****       {
 2154              	 .loc 1 704 0
 2155 0064 CC07     	 lsls r4,r1,#31
 2156 0066 78D4     	 bmi .L253
 2157 0068 0123     	 movs r3,#1
 703:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 2158              	 .loc 1 703 0
 2159 006a 1C46     	 mov r4,r3
 2160 006c 00E0     	 b .L242
 2161              	.LVL210:
 2162              	.L232:
 720:../Libraries/XMCLib/src/xmc_dma.c ****     }
 2163              	 .loc 1 720 0
 2164 006e 0133     	 adds r3,r3,#1
 2165              	.LVL211:
 2166              	.L242:
 703:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 2167              	 .loc 1 703 0
 2168 0070 04FA03F2 	 lsl r2,r4,r3
 704:../Libraries/XMCLib/src/xmc_dma.c ****       {
 2169              	 .loc 1 704 0
 2170 0074 0A42     	 tst r2,r1
 2171 0076 FAD0     	 beq .L232
 2172 0078 9A00     	 lsls r2,r3,#2
 2173              	.LVL212:
 2174              	.L231:
 712:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 2175              	 .loc 1 712 0
 2176 007a AA58     	 ldr r2,[r5,r2]
 2177              	.LBB124:
 2178              	.LBB125:
 509:../Libraries/XMCLib/src/xmc_dma.c ****     }
 2179              	 .loc 1 509 0
 2180 007c DBB2     	 uxtb r3,r3
 2181 007e 0121     	 movs r1,#1
 2182 0080 01FA03F3 	 lsl r3,r1,r3
 2183 0084 C0F83833 	 str r3,[r0,#824]
 2184              	.LVL213:
 2185 0088 C0F84033 	 str r3,[r0,#832]
 2186              	.LVL214:
 2187 008c C0F84833 	 str r3,[r0,#840]
 2188              	.LVL215:
 2189 0090 C0F85033 	 str r3,[r0,#848]
 2190              	.LVL216:
 2191              	.LBE125:
 2192              	.LBE124:
 713:../Libraries/XMCLib/src/xmc_dma.c ****         {
 2193              	 .loc 1 713 0
 2194 0094 002A     	 cmp r2,#0
 2195 0096 DCD0     	 beq .L222
 715:../Libraries/XMCLib/src/xmc_dma.c ****         }
 2196              	 .loc 1 715 0
 2197 0098 0846     	 mov r0,r1
 2198              	.LVL217:
 2199              	 .loc 1 796 0
 2200 009a 30BC     	 pop {r4,r5}
 2201              	.LCFI23:
 2202              	 .cfi_remember_state
 2203              	 .cfi_restore 5
 2204              	 .cfi_restore 4
 2205              	 .cfi_def_cfa_offset 0
 2206              	.LVL218:
 715:../Libraries/XMCLib/src/xmc_dma.c ****         }
 2207              	 .loc 1 715 0
 2208 009c 1047     	 bx r2
 2209              	.LVL219:
 2210              	.L229:
 2211              	.LCFI24:
 2212              	 .cfi_restore_state
 723:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2213              	 .loc 1 723 0
 2214 009e 13F00202 	 ands r2,r3,#2
 2215 00a2 1DD1     	 bne .L274
 747:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2216              	 .loc 1 747 0
 2217 00a4 13F00404 	 ands r4,r3,#4
 2218 00a8 D1D0     	 beq .L236
 2219              	.LVL220:
 2220              	.LBB126:
 2221              	.LBB127:
 579:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** }
 2222              	 .loc 2 579 0
 2223 00aa D0F8F812 	 ldr r1,[r0,#760]
 2224              	.LBE127:
 2225              	.LBE126:
 750:../Libraries/XMCLib/src/xmc_dma.c ****     {
 2226              	 .loc 1 750 0
 2227 00ae 0029     	 cmp r1,#0
 2228 00b0 CFD0     	 beq .L222
 2229              	.LVL221:
 753:../Libraries/XMCLib/src/xmc_dma.c ****       {
 2230              	 .loc 1 753 0
 2231 00b2 CC07     	 lsls r4,r1,#31
 2232 00b4 55D4     	 bmi .L255
 2233 00b6 0123     	 movs r3,#1
 752:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 2234              	 .loc 1 752 0
 2235 00b8 1C46     	 mov r4,r3
 2236 00ba 00E0     	 b .L244
 2237              	.LVL222:
 2238              	.L238:
 766:../Libraries/XMCLib/src/xmc_dma.c ****     }
 2239              	 .loc 1 766 0
 2240 00bc 0133     	 adds r3,r3,#1
 2241              	.LVL223:
 2242              	.L244:
 752:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 2243              	 .loc 1 752 0
 2244 00be 04FA03F2 	 lsl r2,r4,r3
 753:../Libraries/XMCLib/src/xmc_dma.c ****       {
 2245              	 .loc 1 753 0
 2246 00c2 0A42     	 tst r2,r1
 2247 00c4 FAD0     	 beq .L238
 2248 00c6 9A00     	 lsls r2,r3,#2
 2249              	.LVL224:
 2250              	.L237:
 758:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 2251              	 .loc 1 758 0
 2252 00c8 A958     	 ldr r1,[r5,r2]
 2253              	.LBB128:
 2254              	.LBB129:
 509:../Libraries/XMCLib/src/xmc_dma.c ****     }
 2255              	 .loc 1 509 0
 2256 00ca DBB2     	 uxtb r3,r3
 2257 00cc 0122     	 movs r2,#1
 2258 00ce 02FA03F3 	 lsl r3,r2,r3
 2259              	.LVL225:
 2260 00d2 C0F84833 	 str r3,[r0,#840]
 2261              	.LVL226:
 2262              	.LBE129:
 2263              	.LBE128:
 759:../Libraries/XMCLib/src/xmc_dma.c ****         {
 2264              	 .loc 1 759 0
 2265 00d6 0029     	 cmp r1,#0
 2266 00d8 BBD0     	 beq .L222
 761:../Libraries/XMCLib/src/xmc_dma.c ****         }
 2267              	 .loc 1 761 0
 2268 00da 0420     	 movs r0,#4
 2269              	.LVL227:
 2270              	 .loc 1 796 0
 2271 00dc 30BC     	 pop {r4,r5}
 2272              	.LCFI25:
 2273              	 .cfi_remember_state
 2274              	 .cfi_restore 5
 2275              	 .cfi_restore 4
 2276              	 .cfi_def_cfa_offset 0
 2277              	.LVL228:
 761:../Libraries/XMCLib/src/xmc_dma.c ****         }
 2278              	 .loc 1 761 0
 2279 00de 0847     	 bx r1
 2280              	.LVL229:
 2281              	.L274:
 2282              	.LCFI26:
 2283              	 .cfi_restore_state
 2284              	.LBB130:
 2285              	.LBB131:
 560:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** }
 2286              	 .loc 2 560 0
 2287 00e0 D0F8F012 	 ldr r1,[r0,#752]
 2288              	.LBE131:
 2289              	.LBE130:
 726:../Libraries/XMCLib/src/xmc_dma.c ****     {
 2290              	 .loc 1 726 0
 2291 00e4 0029     	 cmp r1,#0
 2292 00e6 B4D0     	 beq .L222
 2293              	.LVL230:
 729:../Libraries/XMCLib/src/xmc_dma.c ****       {
 2294              	 .loc 1 729 0
 2295 00e8 CB07     	 lsls r3,r1,#31
 2296 00ea 38D4     	 bmi .L254
 2297 00ec 0123     	 movs r3,#1
 728:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 2298              	 .loc 1 728 0
 2299 00ee 1C46     	 mov r4,r3
 2300 00f0 00E0     	 b .L243
 2301              	.LVL231:
 2302              	.L235:
 744:../Libraries/XMCLib/src/xmc_dma.c ****     }
 2303              	 .loc 1 744 0
 2304 00f2 0133     	 adds r3,r3,#1
 2305              	.LVL232:
 2306              	.L243:
 728:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 2307              	 .loc 1 728 0
 2308 00f4 04FA03F2 	 lsl r2,r4,r3
 729:../Libraries/XMCLib/src/xmc_dma.c ****       {
 2309              	 .loc 1 729 0
 2310 00f8 0A42     	 tst r2,r1
 2311 00fa FAD0     	 beq .L235
 2312 00fc 9C00     	 lsls r4,r3,#2
 2313              	.LVL233:
 2314              	.L234:
 736:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 2315              	 .loc 1 736 0
 2316 00fe 2959     	 ldr r1,[r5,r4]
 2317              	.LBB132:
 2318              	.LBB133:
 509:../Libraries/XMCLib/src/xmc_dma.c ****     }
 2319              	 .loc 1 509 0
 2320 0100 DBB2     	 uxtb r3,r3
 2321 0102 0122     	 movs r2,#1
 2322 0104 02FA03F3 	 lsl r3,r2,r3
 2323              	.LVL234:
 2324 0108 C0F84033 	 str r3,[r0,#832]
 2325              	.LVL235:
 2326 010c C0F84833 	 str r3,[r0,#840]
 2327              	.LVL236:
 2328 0110 C0F85033 	 str r3,[r0,#848]
 2329              	.LVL237:
 2330              	.LBE133:
 2331              	.LBE132:
 737:../Libraries/XMCLib/src/xmc_dma.c ****         {
 2332              	 .loc 1 737 0
 2333 0114 0029     	 cmp r1,#0
 2334 0116 9CD0     	 beq .L222
 739:../Libraries/XMCLib/src/xmc_dma.c ****         }
 2335              	 .loc 1 739 0
 2336 0118 0220     	 movs r0,#2
 2337              	.LVL238:
 2338              	 .loc 1 796 0
 2339 011a 30BC     	 pop {r4,r5}
 2340              	.LCFI27:
 2341              	 .cfi_remember_state
 2342              	 .cfi_restore 5
 2343              	 .cfi_restore 4
 2344              	 .cfi_def_cfa_offset 0
 2345              	.LVL239:
 739:../Libraries/XMCLib/src/xmc_dma.c ****         }
 2346              	 .loc 1 739 0
 2347 011c 0847     	 bx r1
 2348              	.LVL240:
 2349              	.L273:
 2350              	.LCFI28:
 2351              	 .cfi_restore_state
 2352              	.LBB134:
 2353              	.LBB135:
 598:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_dma.h **** }
 2354              	 .loc 2 598 0
 2355 011e D0F80013 	 ldr r1,[r0,#768]
 2356              	.LBE135:
 2357              	.LBE134:
 772:../Libraries/XMCLib/src/xmc_dma.c ****     {
 2358              	 .loc 1 772 0
 2359 0122 0029     	 cmp r1,#0
 2360 0124 95D0     	 beq .L222
 2361              	.LVL241:
 775:../Libraries/XMCLib/src/xmc_dma.c ****       {
 2362              	 .loc 1 775 0
 2363 0126 CB07     	 lsls r3,r1,#31
 2364 0128 1DD4     	 bmi .L256
 2365 012a 0123     	 movs r3,#1
 774:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 2366              	 .loc 1 774 0
 2367 012c 1C46     	 mov r4,r3
 2368 012e 00E0     	 b .L245
 2369              	.LVL242:
 2370              	.L240:
 788:../Libraries/XMCLib/src/xmc_dma.c ****     }
 2371              	 .loc 1 788 0
 2372 0130 0133     	 adds r3,r3,#1
 2373              	.LVL243:
 2374              	.L245:
 774:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 2375              	 .loc 1 774 0
 2376 0132 04FA03F2 	 lsl r2,r4,r3
 775:../Libraries/XMCLib/src/xmc_dma.c ****       {
 2377              	 .loc 1 775 0
 2378 0136 0A42     	 tst r2,r1
 2379 0138 FAD0     	 beq .L240
 2380 013a 9C00     	 lsls r4,r3,#2
 2381              	.LVL244:
 2382              	.L239:
 2383              	.LBB136:
 2384              	.LBB137:
 509:../Libraries/XMCLib/src/xmc_dma.c ****     }
 2385              	 .loc 1 509 0
 2386 013c DBB2     	 uxtb r3,r3
 2387              	.LBE137:
 2388              	.LBE136:
 780:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 2389              	 .loc 1 780 0
 2390 013e 2959     	 ldr r1,[r5,r4]
 2391              	.LBB139:
 2392              	.LBB138:
 509:../Libraries/XMCLib/src/xmc_dma.c ****     }
 2393              	 .loc 1 509 0
 2394 0140 0122     	 movs r2,#1
 2395 0142 02FA03F3 	 lsl r3,r2,r3
 2396              	.LVL245:
 2397 0146 C0F85033 	 str r3,[r0,#848]
 2398              	.LVL246:
 2399              	.LBE138:
 2400              	.LBE139:
 781:../Libraries/XMCLib/src/xmc_dma.c ****         {
 2401              	 .loc 1 781 0
 2402 014a 0029     	 cmp r1,#0
 2403 014c 81D0     	 beq .L222
 783:../Libraries/XMCLib/src/xmc_dma.c ****         }      
 2404              	 .loc 1 783 0
 2405 014e 0820     	 movs r0,#8
 2406              	.LVL247:
 2407              	 .loc 1 796 0
 2408 0150 30BC     	 pop {r4,r5}
 2409              	.LCFI29:
 2410              	 .cfi_remember_state
 2411              	 .cfi_restore 5
 2412              	 .cfi_restore 4
 2413              	 .cfi_def_cfa_offset 0
 2414              	.LVL248:
 783:../Libraries/XMCLib/src/xmc_dma.c ****         }      
 2415              	 .loc 1 783 0
 2416 0152 0847     	 bx r1
 2417              	.LVL249:
 2418              	.L252:
 2419              	.LCFI30:
 2420              	 .cfi_restore_state
 682:../Libraries/XMCLib/src/xmc_dma.c ****       {
 2421              	 .loc 1 682 0
 2422 0154 0022     	 movs r2,#0
 674:../Libraries/XMCLib/src/xmc_dma.c **** 
 2423              	 .loc 1 674 0
 2424 0156 1346     	 mov r3,r2
 2425 0158 6EE7     	 b .L227
 2426              	.LVL250:
 2427              	.L253:
 2428 015a 1346     	 mov r3,r2
 2429 015c 8DE7     	 b .L231
 2430              	.LVL251:
 2431              	.L254:
 2432 015e 2346     	 mov r3,r4
 2433 0160 CDE7     	 b .L234
 2434              	.LVL252:
 2435              	.L255:
 2436 0162 1346     	 mov r3,r2
 2437 0164 B0E7     	 b .L237
 2438              	.LVL253:
 2439              	.L256:
 2440 0166 2346     	 mov r3,r4
 2441 0168 E8E7     	 b .L239
 2442              	.L276:
 2443 016a 00BF     	 .align 2
 2444              	.L275:
 2445 016c 00000000 	 .word dma1_event_handlers
 2446 0170 00000000 	 .word dma0_event_handlers
 2447 0174 00400150 	 .word 1342259200
 2448              	 .cfi_endproc
 2449              	.LFE206:
 2451              	 .comm dma1_event_handlers,16,4
 2452              	 .comm dma0_event_handlers,32,4
 2453              	 .text
 2454              	.Letext0:
 2455              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2456              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2457              	 .file 5 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 2458              	 .file 6 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc4_scu.h"
 2459              	 .file 7 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Include/core_cm4.h"
 2460              	 .file 8 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 2461              	 .file 9 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_scu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_dma.c
    {standard input}:20     .text.XMC_DMA_Init:00000000 $t
    {standard input}:25     .text.XMC_DMA_Init:00000000 XMC_DMA_Init
    {standard input}:85     .text.XMC_DMA_Init:00000034 $d
    {standard input}:94     .text.XMC_DMA_Enable:00000000 $t
    {standard input}:99     .text.XMC_DMA_Enable:00000000 XMC_DMA_Enable
    {standard input}:151    .text.XMC_DMA_Enable:00000034 $d
    {standard input}:158    .text.XMC_DMA_Disable:00000000 $t
    {standard input}:163    .text.XMC_DMA_Disable:00000000 XMC_DMA_Disable
    {standard input}:224    .text.XMC_DMA_Disable:00000030 $d
    {standard input}:231    .text.XMC_DMA_IsEnabled:00000000 $t
    {standard input}:236    .text.XMC_DMA_IsEnabled:00000000 XMC_DMA_IsEnabled
    {standard input}:314    .text.XMC_DMA_IsEnabled:0000004c $d
    {standard input}:321    .text.XMC_DMA_EnableRequestLine:00000000 $t
    {standard input}:326    .text.XMC_DMA_EnableRequestLine:00000000 XMC_DMA_EnableRequestLine
    {standard input}:413    .text.XMC_DMA_EnableRequestLine:00000054 $d
    {standard input}:419    .text.XMC_DMA_DisableRequestLine:00000000 $t
    {standard input}:424    .text.XMC_DMA_DisableRequestLine:00000000 XMC_DMA_DisableRequestLine
    {standard input}:451    .text.XMC_DMA_DisableRequestLine:0000001c $d
    {standard input}:457    .text.XMC_DMA_ClearRequestLine:00000000 $t
    {standard input}:462    .text.XMC_DMA_ClearRequestLine:00000000 XMC_DMA_ClearRequestLine
    {standard input}:505    .text.XMC_DMA_ClearRequestLine:00000028 $d
    {standard input}:511    .text.XMC_DMA_GetOverrunStatus:00000000 $t
    {standard input}:516    .text.XMC_DMA_GetOverrunStatus:00000000 XMC_DMA_GetOverrunStatus
    {standard input}:554    .text.XMC_DMA_GetOverrunStatus:00000028 $d
    {standard input}:560    .text.XMC_DMA_ClearOverrunStatus:00000000 $t
    {standard input}:565    .text.XMC_DMA_ClearOverrunStatus:00000000 XMC_DMA_ClearOverrunStatus
    {standard input}:590    .text.XMC_DMA_ClearOverrunStatus:00000014 $d
    {standard input}:596    .text.XMC_DMA_CH_Disable:00000000 $t
    {standard input}:601    .text.XMC_DMA_CH_Disable:00000000 XMC_DMA_CH_Disable
    {standard input}:626    .text.XMC_DMA_CH_IsEnabled:00000000 $t
    {standard input}:631    .text.XMC_DMA_CH_IsEnabled:00000000 XMC_DMA_CH_IsEnabled
    {standard input}:650    .text.XMC_DMA_CH_Init:00000000 $t
    {standard input}:655    .text.XMC_DMA_CH_Init:00000000 XMC_DMA_CH_Init
    {standard input}:827    .text.XMC_DMA_CH_Init:000000ae $d
    {standard input}:836    .text.XMC_DMA_CH_Init:000000b6 $t
    {standard input}:1202   .text.XMC_DMA_CH_Init:00000288 $d
    {standard input}:1214   .text.XMC_DMA_CH_Suspend:00000000 $t
    {standard input}:1219   .text.XMC_DMA_CH_Suspend:00000000 XMC_DMA_CH_Suspend
    {standard input}:1239   .text.XMC_DMA_CH_Resume:00000000 $t
    {standard input}:1244   .text.XMC_DMA_CH_Resume:00000000 XMC_DMA_CH_Resume
    {standard input}:1264   .text.XMC_DMA_CH_IsSuspended:00000000 $t
    {standard input}:1269   .text.XMC_DMA_CH_IsSuspended:00000000 XMC_DMA_CH_IsSuspended
    {standard input}:1290   .text.XMC_DMA_CH_EnableEvent:00000000 $t
    {standard input}:1295   .text.XMC_DMA_CH_EnableEvent:00000000 XMC_DMA_CH_EnableEvent
    {standard input}:1340   .text.XMC_DMA_CH_DisableEvent:00000000 $t
    {standard input}:1345   .text.XMC_DMA_CH_DisableEvent:00000000 XMC_DMA_CH_DisableEvent
    {standard input}:1390   .text.XMC_DMA_CH_ClearEventStatus:00000000 $t
    {standard input}:1395   .text.XMC_DMA_CH_ClearEventStatus:00000000 XMC_DMA_CH_ClearEventStatus
    {standard input}:1440   .text.XMC_DMA_CH_GetEventStatus:00000000 $t
    {standard input}:1445   .text.XMC_DMA_CH_GetEventStatus:00000000 XMC_DMA_CH_GetEventStatus
    {standard input}:1509   .text.XMC_DMA_CH_EnableSourceGather:00000000 $t
    {standard input}:1514   .text.XMC_DMA_CH_EnableSourceGather:00000000 XMC_DMA_CH_EnableSourceGather
    {standard input}:1552   .text.XMC_DMA_CH_DisableSourceGather:00000000 $t
    {standard input}:1557   .text.XMC_DMA_CH_DisableSourceGather:00000000 XMC_DMA_CH_DisableSourceGather
    {standard input}:1577   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 $t
    {standard input}:1582   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 XMC_DMA_CH_EnableDestinationScatter
    {standard input}:1620   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 $t
    {standard input}:1625   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 XMC_DMA_CH_DisableDestinationScatter
    {standard input}:1645   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 $t
    {standard input}:1650   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 XMC_DMA_CH_TriggerSourceRequest
    {standard input}:1684   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 $t
    {standard input}:1689   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 XMC_DMA_CH_TriggerDestinationRequest
    {standard input}:1723   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 $t
    {standard input}:1728   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 XMC_DMA_CH_EnableSourceAddressReload
    {standard input}:1748   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 $t
    {standard input}:1753   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 XMC_DMA_CH_DisableSourceAddressReload
    {standard input}:1773   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 $t
    {standard input}:1778   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 XMC_DMA_CH_EnableDestinationAddressReload
    {standard input}:1798   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 $t
    {standard input}:1803   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 XMC_DMA_CH_DisableDestinationAddressReload
    {standard input}:1823   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 $t
    {standard input}:1828   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 XMC_DMA_CH_RequestLastMultiblockTransfer
    {standard input}:1848   .text.XMC_DMA_CH_SetEventHandler:00000000 $t
    {standard input}:1853   .text.XMC_DMA_CH_SetEventHandler:00000000 XMC_DMA_CH_SetEventHandler
    {standard input}:1874   .text.XMC_DMA_CH_SetEventHandler:00000010 $d
                            *COM*:00000020 dma0_event_handlers
                            *COM*:00000010 dma1_event_handlers
    {standard input}:1881   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 $t
    {standard input}:1886   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 XMC_DMA_CH_ClearSourcePeripheralRequest
    {standard input}:1942   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000030 $d
    {standard input}:1950   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 $t
    {standard input}:1955   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 XMC_DMA_CH_ClearDestinationPeripheralRequest
    {standard input}:2011   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000030 $d
    {standard input}:2019   .text.XMC_DMA_IRQHandler:00000000 $t
    {standard input}:2024   .text.XMC_DMA_IRQHandler:00000000 XMC_DMA_IRQHandler
    {standard input}:2445   .text.XMC_DMA_IRQHandler:0000016c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_CLOCK_IsPeripheralClockGated
