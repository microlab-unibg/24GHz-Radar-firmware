   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "radar_mcu4_bsp.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.bsp_eeprom_24cw128x_write_data,"ax",%progbits
  20              	 .align 2
  21              	 .global bsp_eeprom_24cw128x_write_data
  22              	 .thumb
  23              	 .thumb_func
  25              	bsp_eeprom_24cw128x_write_data:
  26              	.LFB529:
  27              	 .file 1 "../BSP/radar_mcu4/src/radar_mcu4_bsp.c"
   1:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /**
   2:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     @file: radar_mcu4_bsp.c
   3:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
   4:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     @brief: This file provides a set of firmware functions to manage all peripherals,
   5:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             LED, Button and current sensor available on Radar_MCU4 board from Infineon.
   6:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****  */
   7:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
   8:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /* ===========================================================================
   9:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ** Copyright (C) 2018-2021 Infineon Technologies AG
  10:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ** All rights reserved.
  11:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ** ===========================================================================
  12:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** **
  13:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ** ===========================================================================
  14:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ** This document contains proprietary information of Infineon Technologies AG.
  15:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ** Passing on and copying of this document, and communication of its contents
  16:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ** is not permitted without Infineon's prior written authorization.
  17:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ** ===========================================================================
  18:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** */
  19:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  20:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /*
  21:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ==============================================================================
  22:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****    1. INCLUDE FILES
  23:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ==============================================================================
  24:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****  */
  25:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  26:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** #include "radar_mcu4_bsp.h"
  27:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  28:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /*
  29:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ==============================================================================
  30:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****    4. DATA
  31:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ==============================================================================
  32:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****  */
  33:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  34:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /* SCL IO: In case of software reset this pin will be used to generate 9 clock cycles */
  35:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** const DIGITAL_IO_t DIGITAL_IO_EEPROM_SW_RESET =
  36:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
  37:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   .gpio_port = XMC_GPIO_PORT4,
  38:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   .gpio_pin = 2U,
  39:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   .gpio_config = {
  40:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     .mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
  41:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     .output_level = XMC_GPIO_OUTPUT_LEVEL_LOW,
  42:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  43:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   },
  44:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   .hwctrl = XMC_GPIO_HWCTRL_DISABLED
  45:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** };
  46:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  47:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /*
  48:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ==============================================================================
  49:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****    5. LOCAL FUNCTION PROTOTYPES
  50:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ==============================================================================
  51:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****  */
  52:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  53:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /*
  54:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ==============================================================================
  55:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****    6. EXPORTED FUNCTIONS
  56:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** ==============================================================================
  57:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****  */
  58:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  59:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /* Function to write data into EEPROM in case of write operation in multi-page, within more then on
  60:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /* ==> For many write operations we have to wait at least 5ms between each operation
  61:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****        This is needed only for write operation, there is no need to have this delay for the read op
  62:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** EEPROM_STATUS_t bsp_eeprom_24cw128x_write_data(const uint16_t mem_address, uint8_t *tx_data, uint32
  63:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
  28              	 .loc 1 63 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 32
  36              	 .cfi_offset 4,-32
  37              	 .cfi_offset 5,-28
  38              	 .cfi_offset 6,-24
  39              	 .cfi_offset 7,-20
  40              	 .cfi_offset 8,-16
  41              	 .cfi_offset 9,-12
  42              	 .cfi_offset 10,-8
  43              	 .cfi_offset 14,-4
  64:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   I2C_MASTER_STATUS_t status = I2C_MASTER_STATUS_FAILURE;
  65:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint8_t mem_add[2];
  66:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint32_t nb_of_start_page = 0;  /* The index of start page */
  67:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint32_t nb_of_end_page = 0;    /* The index of last page */
  68:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint32_t written_data = 0;
  69:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint32_t tmp_tx_size = tx_size;
  70:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint16_t tmp_mem_address = mem_address;
  71:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  72:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   /* Check for valid start address and valid data size */
  73:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   if ((tmp_mem_address >= EEPROM_24CW128X_START_MEM_ADDR) &&
  74:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	 ((tmp_mem_address + tmp_tx_size) <= EEPROM_24CW128X_MAX_SIZE) &&
  44              	 .loc 1 74 0
  45 0004 8318     	 adds r3,r0,r2
  73:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	 ((tmp_mem_address + tmp_tx_size) <= EEPROM_24CW128X_MAX_SIZE) &&
  46              	 .loc 1 73 0
  47 0006 B3F5804F 	 cmp r3,#16384
  63:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   I2C_MASTER_STATUS_t status = I2C_MASTER_STATUS_FAILURE;
  48              	 .loc 1 63 0
  49 000a 84B0     	 sub sp,sp,#16
  50              	.LCFI1:
  51              	 .cfi_def_cfa_offset 48
  63:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   I2C_MASTER_STATUS_t status = I2C_MASTER_STATUS_FAILURE;
  52              	 .loc 1 63 0
  53 000c 0546     	 mov r5,r0
  54 000e 1446     	 mov r4,r2
  55              	.LVL1:
  73:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	 ((tmp_mem_address + tmp_tx_size) <= EEPROM_24CW128X_MAX_SIZE) &&
  56              	 .loc 1 73 0
  57 0010 1CD8     	 bhi .L25
  58              	 .loc 1 74 0
  59 0012 DAB1     	 cbz r2,.L25
  75:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	 (tmp_tx_size > 0))
  76:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
  77:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	/* The start write address is located in page : */
  78:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	nb_of_start_page = (tmp_mem_address / EEPROM_24CW128X_PAGE_SIZE) + 1;
  79:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  80:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	/* The last write address is located in page : */
  81:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	nb_of_end_page = ((tmp_mem_address + tmp_tx_size - 1) / EEPROM_24CW128X_PAGE_SIZE) + 1;
  60              	 .loc 1 81 0
  61 0014 013B     	 subs r3,r3,#1
  62 0016 5B09     	 lsrs r3,r3,#5
  78:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  63              	 .loc 1 78 0
  64 0018 4709     	 lsrs r7,r0,#5
  65              	 .loc 1 81 0
  66 001a 0133     	 adds r3,r3,#1
  78:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  67              	 .loc 1 78 0
  68 001c 0137     	 adds r7,r7,#1
  69              	.LVL2:
  82:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  83:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	/* Write operation in multi-page */
  84:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	if ((nb_of_end_page - nb_of_start_page) > 0)
  70              	 .loc 1 84 0
  71 001e BB42     	 cmp r3,r7
  72 0020 8946     	 mov r9,r1
  73 0022 00F0E680 	 beq .L3
  74              	.LVL3:
  85:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	{
  86:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  /* Write the first part of data */
  87:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  written_data = (nb_of_start_page * EEPROM_24CW128X_PAGE_SIZE) - tmp_mem_address;
  88:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  89:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  /* Write the first chunk of data */
  90:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  if (written_data > 0)
  75              	 .loc 1 90 0
  76 0026 D0EB4717 	 rsbs r7,r0,r7,lsl#5
  77              	.LVL4:
  78 002a 13D1     	 bne .L48
  64:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint8_t mem_add[2];
  79              	 .loc 1 64 0
  80 002c 0126     	 movs r6,#1
  81              	.LVL5:
  82              	.L4:
  91:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  {
  92:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	    /* EEPROM start write address */
  93:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         mem_add[0] = (tmp_mem_address & 0x3F00) >> 8;
  94:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         mem_add[1] = tmp_mem_address & 0x00FF;
  95:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
  96:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         /* Send memory address */
  97:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, mem_add
  98:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
  99:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 100:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         if (status == I2C_MASTER_STATUS_SUCCESS)
 101:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	    {
 102:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           /* Start sending data */
 103:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, false, EEPROM_24CW128X_I2C_ADDRESS, tx_d
 104:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 105:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 106:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  /* Remaining data */
 107:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  tmp_tx_size = tmp_tx_size - written_data;
 108:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  tmp_mem_address = tmp_mem_address + written_data;
 109:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 110:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  /* Wait for the EEPROM internal write cycle, minimum for 5ms */
 111:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           bsp_time_delay(6, BSP_TIMER_DELAY_MILLISECOND);
 112:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		}
 113:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  }
 114:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 115:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  /* Loop for the number of pages to be written */
 116:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  do
 117:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  {
 118:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		if (tmp_tx_size >= EEPROM_24CW128X_PAGE_SIZE) /* Write one page data */
 119:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		{
 120:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  /* EEPROM start write address */
 121:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[0] = (tmp_mem_address & 0x3F00) >> 8;
 122:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 123:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 124:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           /* Send memory address */
 125:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, mem_a
 126:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 127:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 128:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           if (status == I2C_MASTER_STATUS_SUCCESS)
 129:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	      {
 130:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             /* Start sending data */
 131:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, false, EEPROM_24CW128X_I2C_ADDRESS, (t
 132:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 133:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 134:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		    /* Remaining data */
 135:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             tmp_mem_address = tmp_mem_address + EEPROM_24CW128X_PAGE_SIZE;
 136:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		    tmp_tx_size = tmp_tx_size - EEPROM_24CW128X_PAGE_SIZE;
 137:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 			written_data = written_data + EEPROM_24CW128X_PAGE_SIZE;
 138:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 139:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 			/* Wait for the EEPROM internal write cycle, minimum for 5ms */
 140:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 			bsp_time_delay(6, BSP_TIMER_DELAY_MILLISECOND);
 141:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  }
 142:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		}
 143:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		else if ((tmp_tx_size > 0) && (tmp_tx_size < EEPROM_24CW128X_PAGE_SIZE)) /* Write the last chunk 
 144:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		{
 145:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  /* EEPROM start write address */
 146:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[0] = (tmp_mem_address & 0x3F00) >> 8;
 147:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 148:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 149:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           /* Send memory address */
 150:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, mem_a
  83              	 .loc 1 150 0
  84 002e DFF83882 	 ldr r8,.L52
  85              	.L8:
  86              	.LVL6:
 118:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		{
  87              	 .loc 1 118 0
  88 0032 1F2C     	 cmp r4,#31
  89 0034 52D8     	 bhi .L49
 143:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		{
  90              	 .loc 1 143 0
  91 0036 631E     	 subs r3,r4,#1
  92 0038 1E2B     	 cmp r3,#30
  93 003a 40F29780 	 bls .L50
  94              	.LVL7:
  95              	.L15:
 151:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 152:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 153:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           if (status == I2C_MASTER_STATUS_SUCCESS)
 154:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	      {
 155:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             /* Start sending data */
 156:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, false, EEPROM_24CW128X_I2C_ADDRESS, (v
 157:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 158:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 159:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		    /* No remaining data */
 160:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		    tmp_tx_size = 0;
 161:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 162:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 			/* Wait for the EEPROM internal write cycle, minimum for 5ms */
 163:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		    bsp_time_delay(6, BSP_TIMER_DELAY_MILLISECOND);
 164:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  }
 165:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		}
 166:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  }while(tmp_tx_size > 0);
 167:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	}
 168:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	else /* Write operation within the same page */
 169:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	{
 170:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  /* EEPROM start write address */
 171:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       mem_add[0] = (mem_address & 0x3F00) >> 8;
 172:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       mem_add[1] = mem_address & 0x00FF;
 173:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 174:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       /* Send memory address */
 175:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, mem_add, 
 176:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 177:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 178:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       if (status == I2C_MASTER_STATUS_SUCCESS)
 179:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  {
 180:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         /* Start sending data */
 181:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, false, EEPROM_24CW128X_I2C_ADDRESS, (void*
 182:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 183:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       }
 184:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 185:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  /* Wait for the EEPROM internal write cycle, minimum for 5ms */
 186:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       bsp_time_delay(6, BSP_TIMER_DELAY_MILLISECOND);
 187:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	}
 188:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 189:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 190:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   if (status == I2C_MASTER_STATUS_SUCCESS)
 191:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
 192:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     return EEPROM_STATUS_SUCCESS;
 193:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 194:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   else
 195:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
 196:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     return EEPROM_STATUS_WRITE_ERROR;
  96              	 .loc 1 196 0
  97 003e 002E     	 cmp r6,#0
  98 0040 0CBF     	 ite eq
  99 0042 0120     	 moveq r0,#1
 100 0044 0420     	 movne r0,#4
 197:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 198:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 101              	 .loc 1 198 0
 102 0046 04B0     	 add sp,sp,#16
 103              	.LCFI2:
 104              	 .cfi_remember_state
 105              	 .cfi_def_cfa_offset 32
 106              	 
 107 0048 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 108              	.LVL8:
 109              	.L25:
 110              	.LCFI3:
 111              	 .cfi_restore_state
 196:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 112              	 .loc 1 196 0
 113 004c 0420     	 movs r0,#4
 114              	.LVL9:
 115              	 .loc 1 198 0
 116 004e 04B0     	 add sp,sp,#16
 117              	.LCFI4:
 118              	 .cfi_remember_state
 119              	 .cfi_def_cfa_offset 32
 120              	 
 121 0050 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 122              	.LVL10:
 123              	.L48:
 124              	.LCFI5:
 125              	 .cfi_restore_state
  97:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 126              	 .loc 1 97 0
 127 0054 DFF810A2 	 ldr r10,.L52
  94:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 128              	 .loc 1 94 0
 129 0058 8DF80D00 	 strb r0,[sp,#13]
  97:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 130              	 .loc 1 97 0
 131 005c 0222     	 movs r2,#2
 132              	.LVL11:
 133 005e 0023     	 movs r3,#0
 134 0060 8DE80C00 	 stmia sp,{r2,r3}
  93:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         mem_add[1] = tmp_mem_address & 0x00FF;
 135              	 .loc 1 93 0
 136 0064 C5F30526 	 ubfx r6,r5,#8,#6
  97:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 137              	 .loc 1 97 0
 138 0068 A022     	 movs r2,#160
 139 006a 5046     	 mov r0,r10
 140              	.LVL12:
 141 006c 0121     	 movs r1,#1
 142              	.LVL13:
 143 006e 03AB     	 add r3,sp,#12
  93:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         mem_add[1] = tmp_mem_address & 0x00FF;
 144              	 .loc 1 93 0
 145 0070 8DF80C60 	 strb r6,[sp,#12]
  97:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 146              	 .loc 1 97 0
 147 0074 FFF7FEFF 	 bl I2C_MASTER_Transmit
 148              	.LVL14:
 149 0078 DAF80820 	 ldr r2,[r10,#8]
 150 007c 0646     	 mov r6,r0
 151              	.LVL15:
 152              	.L5:
 153              	.LBB119:
 154              	.LBB120:
 155              	 .file 2 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER/i2c_master.h"
   1:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
   2:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @file i2c_master.h
   3:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @date 2017-12-20
   4:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
   5:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * NOTE:
   6:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * regenerated.
   8:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
   9:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
  10:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @cond
  11:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  12:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER v4.1.28 Configures USIC channel to transmit & receive data using I2C protocol.
  13:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  14:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  15:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * All rights reserved.
  16:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  17:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following conditions are met:
  19:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  20:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  21:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * disclaimer.
  22:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  23:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  24:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following disclaimer in the documentation and/or other materials provided with the distribution.
  25:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  26:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  27:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * products derived from this software without specific prior written permission.
  28:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  29:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  37:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  40:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  41:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Change History
  42:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * --------------
  43:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  44:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-02-16:
  45:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Initial version<br>
  46:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  47:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-06-10:
  48:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  49:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  50:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-08-31:
  51:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - DMA support APIs added
  52:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-10-20:
  53:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Code snippets updated
  54:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2016-08-18:
  55:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Documentation of slave address formatting improved.
  56:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2017-11-17:
  57:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added tx_irqn and rx_irqn to I2C_MASTER_CONFIG_t
  58:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2017-12-20:
  59:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added I2C_MASTER_FlushTxFifo(), I2C_MASTER_FlushRxFifo(), I2C_MASTER_DisableOutputs(), I2C
  60:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  61:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcond
  62:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  63:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
  64:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  65:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifndef I2C_MASTER_H
  66:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_H
  67:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  68:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  69:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  70:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  71:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * HEADER FILES
  72:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  73:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #include <xmc_gpio.h>
  74:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #include <xmc_i2c.h>
  75:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "i2c_master_conf.h"
  76:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  77:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #if(UC_FAMILY == XMC4)
  78:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
  79:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "GLOBAL_DMA/global_dma.h"
  80:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  81:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  82:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  83:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #include <DAVE_Common.h>
  84:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  85:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  86:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef void(*i2c_master_fptr_cbhandler)(void);
  87:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  88:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  89:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * MACROS
  90:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  91:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  92:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  93:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  94:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #error "I2C_MASTER requires XMC Peripheral Library v2.0.0 or higher"
  95:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  96:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  97:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  98:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * ENUMS
  99:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
 100:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 101:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_enumerations
 102:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 103:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 104:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 105:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Initialization status.
 106:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 107:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_STATUS
 108:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 109:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_SUCCESS = 0U,           /*!< I2C_MASTER SUCCESS */
 110:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_FAILURE = 1U,           /*!< I2C_MASTER FAILURE */
 111:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_BUSY = 2U,              /*!< I2C_MASTER BUSY */
 112:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_UNSUPPORTED_MODE = 3U   /*!< I2C_MASTER UNSUPPORTED MODE */
 113:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_STATUS_t;
 114:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 115:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 116:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Direction
 117:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 118:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_DIRECTION
 119:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 120:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_TRANSMIT = 0U,   /*!< Direction indicates transmit */
 121:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_RECEIVE = 1U     /*!< Direction indicates receive */
 122:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DIRECTION_t;
 123:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 124:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 125:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 126:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 127:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_TRANSFER_MODE
 128:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 129:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 130:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 131:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 132:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_TRANSFER_MODE_t;
 133:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 134:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 135:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 136:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 137:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** * DATA STRUCTURES
 138:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** ***************************************************************************************************
 139:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 140:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 141:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_datastructures
 142:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 143:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 144:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 145:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure for DMA configuration.
 146:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 147:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
 148:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_DMA_CONFIG
 149:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 150:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   const XMC_DMA_CH_CONFIG_t * dma_ch_config;   /**< Pointer to the DMA channel configuration.*/
 151:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   GLOBAL_DMA_t * global_dma;                   /**< Global DMA handle */
 152:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t dma_channel;                         /**< DMA channel number */
 153:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DMA_CONFIG_t;
 154:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 155:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 156:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Constant structure for holding the configuration parameters of I2C channel.
 157:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 158:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_CONFIG
 159:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 160:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    const XMC_I2C_CH_CONFIG_t *brg_config;             /*!< Basic I2C configuration from the GUI wit
 161:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 162:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const transmit_dma_config; /**< Pointer to the DMA channel confi
 163:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data transmission.*/
 164:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 165:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 166:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const receive_dma_config;  /**< Pointer to the DMA channel confi
 167:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data reception.*/
 168:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 169:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_config;         /*!< Function pointer to configure the MUX va
 170:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_enable_io;      /*!< Function pointer to enable SDA/SCL outpu
 171:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_disable_io;     /*!< Function pointer to disable SDA/SCL outp
 172:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 173:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler tx_cbhandler;            /*!< Function pointer to hold the callback fu
 174:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the transmission is complete
 175:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler rx_cbhandler;            /*!< Function pointer to hold the callback fu
 176:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the reception is complete*/
 177:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler nack_cbhandler;          /*!< Function pointer to hold the callback fu
 178:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when nack is received*/
 179:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler arbitration_cbhandler;   /*!< Function pointer to hold the callback fu
 180:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when arbitration lost is occured*
 181:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler error_cbhandler;         /*!< Function pointer to hold the callback fu
 182:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when error is detected.*/
 183:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t transmit_mode;          /**< Mode used for transmitting data. Data ca
 184:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 185:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t receive_mode;           /**< Mode used for receiving data. Data can b
 186:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 187:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 188:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t txFIFO_size;               /*!< TxFIFO size configuration*/
 189:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t rxFIFO_size;               /*!< RxFIFO size configuration*/
 190:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 191:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    IRQn_Type tx_irqn;
 192:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    IRQn_Type rx_irqn; 
 193:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_CONFIG_t;
 194:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 195:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 196:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure to hold the dynamic variables for the I2C_MASTER communication.
 197:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 198:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_RUNTIME
 199:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 200:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * tx_data;                     /*!< Pointer to the transmit data buffer*/
 201:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * rx_data;                     /*!< Pointer to the receive data buffer*/
 202:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t tx_data_count;                /*!< Number of bytes of data to be transmitted*/
 203:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t tx_data_index;       /*!< Index to the byte to be transmitted next in the tx_da
 204:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_data_count;                /*!< Number of bytes of data to be received*/
 205:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 206:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_count;            /*!< Number of bytes of data to be received-DMA mode*/
 207:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_index;            /*!< Index of bytes of data to be received-DMA mode*/
 208:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 209:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t rx_data_index;       /*!< Indicates the number of bytes currently available in 
 210:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t direction;           /*!< Indicates TRANSMIT/RECEIVE */
 211:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_stop;                    /*!< Indicates to stop the I2C */
 212:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_nack;                    /*!< Indicates to send nack */
 213:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t tx_ack_sr;                         /*!< Service request number assigned to transmit inter
 214:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t rx_sr;                         /*!< Service request number assigned to receive interrupts
 215:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool tx_busy;                 /*!< Status flag to indicate busy when a transmission is a
 216:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool rx_busy;                 /*!< Status flag to indicate busy when a reception is assi
 217:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool bus_acquired;            /*!< flag to indicate whether bus is acquired or not */
 218:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_RUNTIME_t;
 219:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 220:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 221:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 222:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Handler structure with pointers to dynamic and static parameters.
 223:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 224:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER
 225:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 226:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_t *channel;                    /*!< USIC channel*/
 227:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   const I2C_MASTER_CONFIG_t * const config;  /*!< I2C configuration structure pointer*/
 228:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_RUNTIME_t * const runtime;      /*!< Pointer to the structure holding all variables,
 229:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****    	                                               that can change at runtime*/
 230:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_t;
 231:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 232:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 233:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 234:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 235:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 236:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifdef __cplusplus
 237:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** extern "C" {
 238:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 239:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 240:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 241:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 242:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_apidoc
 243:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 244:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 245:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 246:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 247:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * API PROTOTYPES
 248:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
 249:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 250:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get I2C_MASTER APP version.
 251:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return \a DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 252:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 253:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 254:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function can be used to check application software compatibility with a
 255:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * specific version of the APP.
 256:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 257:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 258:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 259:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 260:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 261:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 262:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_APP_VERSION_t version;
 263:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_Init();
 264:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    version = I2C_MASTER_GetAppVersion();
 265:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(version.major != 4U)
 266:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 267:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 268:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 269:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 270:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 271:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 272:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 273:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 274:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void);
 275:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 276:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief This function initializes the I2C_MASTER APP based on user provided configuration.
 277:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 278:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
 279:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 280:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 281:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C configurations like channel selection,baud rate setting,
 282:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * FIFO configuration etc are done in this API.
 283:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Protocol specific interrupts can also be enabled using the I2C_MASTER_Init
 284:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function.
 285:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 286:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 287:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 288:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 289:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 290:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 291:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 292:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   // Initializing the modules and the multiplexer
 293:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_Init(); // I2C_MASTER_Init will be called from DAVE_Init()
 294:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 295:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {}
 296:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 297:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 298:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 299:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 300:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 301:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 302:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle);
 303:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 304:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 305:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 306:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief  Receives the data from I2C slave device.
 307:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 308:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start Flag to indicate that the start condition need to be send.
 309:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 310:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer to receive data.
 311:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count The number of bytes to be received from slave.
 312:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 313:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack The flag to indicate that the NACK condition need to be send for the last byte
 314:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 315:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 316:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Receive API can be used in Interrupt and Direct modes.\n
 317:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 318:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 319:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 320:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).\n
 321:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 322:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 323:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 324:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 325:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 326:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 327:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_READ 10
 328:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
 329:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 330:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 331:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 332:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 333:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 334:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 335:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 336:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 337:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 338:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t data = 0x55;
 339:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_data;
 340:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 341:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 342:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 343:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;  
 344:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 345:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 346:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 347:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
 348:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 349:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 350:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 351:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 352:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
 353:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 354:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 355:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Read data from IO EXPANDER
 356:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 357:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 358:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 359:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
 360:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 361:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 362:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 363:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   { }
 364:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  return 0;
 365:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 366:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 367:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 368:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 369:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 370:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 371:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                        uint8_t * data, const uint32_t count, bool send_stop, bool s
 372:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 373:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 374:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits data to I2C slave device.
 375:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 376:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 377:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start The flag to indicate that the start condition need to be send.
 378:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 379:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer containing the data to transmit.
 380:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size The number of bytes to be send to slave.
 381:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 382:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 383:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 384:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 385:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Transmit API can be used in Interrupt and Direct modes.\n
 386:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 387:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 388:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 389:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write). \n
 390:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 391:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
 392:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 393:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 394:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 395:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 396:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 397:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 398:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 399:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 400:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 401:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 402:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 403:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 404:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 405:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 406:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 407:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 408:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 409:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 410:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 411:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 412:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
 413:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 414:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 415:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 416:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 417:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
 418:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 419:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 420:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 421:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 422:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 423:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 424:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 425:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 426:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 427:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 428:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 429:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 430:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                uint8_t *data, const uint32_t size, bool send_stop);
 431:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 432:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 433:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get the I2C flag status.
 434:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 435:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 436:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 437:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *			 	      bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be used to selec
 438:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 439:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 440:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t Flag status.
 441:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 442:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 443:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 444:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 445:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 446:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 447:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 448:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 449:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 450:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 451:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 452:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 453:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 454:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 455:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 456:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 457:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 458:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 459:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 460:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 461:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 462:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 463:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 464:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 465:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 466:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 467:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 468:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 469:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 470:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype);
 471:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 472:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 473:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Clear the I2C flag status.
 474:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 475:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 476:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 477:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    The bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be 
 478:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 479:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 480:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None <BR>
 481:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 482:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 483:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 484:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 485:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 486:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 487:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 488:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 489:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 490:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 491:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 492:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 493:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 494:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 495:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 496:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 497:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 498:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 499:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 500:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 501:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 502:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 503:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 504:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 505:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 506:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 507:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 508:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 509:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype);
 510:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 511:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 512:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Aborts the ongoing data transmission.
 513:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 514:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 515:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 516:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 517:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If there is a transmission in progress, it will be stopped. Once the transmission is stopped, 
 518:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * user can start a new transmission without delay.
 519:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 520:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 521:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 522:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 523:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 524:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 525:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 526:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 527:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 528:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buf[50] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
 529:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 530:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 531:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 532:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 533:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 534:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 535:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 536:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 537:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_AbortTransmit(&I2C_MASTER_0);
 538:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
 539:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 540:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 541:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 542:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
 543:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 544:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 545:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 546:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 547:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 548:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 549:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 550:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 551:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 552:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle);
 553:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 554:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 555:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** * @brief Stops the active data reception request.
 556:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 557:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 558:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 559:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 560:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a reception is in progress, it will be stopped. When a reception request
 561:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is active, user will not be able to place a new receive request till the active
 562:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception is complete. This API can stop the progressing reception to make
 563:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * a new receive request.
 564:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 565:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 566:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 567:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 568:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 569:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 570:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 571:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 572:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 573:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 574:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t rx_buf[25];
 575:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t tx_buf[2];
 576:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;
 577:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 578:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 579:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 580:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //send the address from which data to be transfered
 581:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     tx_buf[0] = 0;
 582:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 583:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 584:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 585:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_AbortReceive(&I2C_MASTER_0);
 586:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_SendStop(&I2C_MASTER_0);
 587:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 588:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 589:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 590:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 591:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 592:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
 593:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 594:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 595:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 596:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 1U;
 597:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 598:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 599:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 600:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 601:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 602:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle);
 603:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 604:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 605:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1U) || defined(DOXYGEN)
 606:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 607:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C channel using DMA.
 608:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 609:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 610:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  block_size size of the block
 611:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr    address\n
 612:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 613:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 614:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 615:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 616:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 617:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 618:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 619:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 620:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 621:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 622:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 623:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. The function uses AP
 624:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure to store the status of transmission.
 625:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 626:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens through DMA channel.
 627:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be transmitted in one API call. This limit is because of the DMA sin
 628:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 629:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 630:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 631:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the completion of data transmission.
 632:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 633:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * calls to this API.
 634:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 635:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_StartTransmitDMA API can be used in DMA mode.
 636:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "DMA" mode in advanced settings tab. \n
 637:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 638:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 639:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 640:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 641:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 642:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 643:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 644:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 645:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 646:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 647:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 648:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 649:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 650:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 651:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 652:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 653:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 654:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 655:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 656:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 657:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 658:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 659:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 660:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 661:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 662:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 663:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 664:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 665:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 666:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 667:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 668:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // trigger the DMA
 669:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitDMA(&I2C_MASTER_0, sizeof(Send_Data), Send_Data);
 670:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 671:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 672:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 673:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 674:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 675:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 676:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 677:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 678:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 679:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 680:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 681:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 682:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 683:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 684:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitDMA(const I2C_MASTER_t *const handle, uint32_t block_si
 685:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 686:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 687:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1U) || defined(DOXYGEN)
 688:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 689:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel using DMA.
 690:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 691:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 692:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 693:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param block_size  size of the block
 694:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr  address \n
 695:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 696:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 697:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 698:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 699:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 700:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 701:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 702:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 703:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed.
 704:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 705:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When all the requested number of data bytes are received, the configured callback function will 
 706:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, the user has to poll for the value of the variable, \a
 707:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * handle->runtime->rx_busy to be false. The value is updated to \a false when all the requested nu
 708:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * are received.
 709:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be received in one API call. This limit is because of the DMA single
 710:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 711:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveDMA API can be used only in DMA mode
 712:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "DMA" mode in advanced settings tab \n
 713:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 714:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 715:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 716:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 717:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 718:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 719:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 720:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 721:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 722:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 723:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Pre condition:
 724:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Transmit mode and receive mode should be configured to "DMA" in advanced settings tab
 725:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 726:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t ReadData[256];
 727:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 728:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 729:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 730:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 731:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 732:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 733:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 734:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 735:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 736:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 737:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 738:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 739:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 740:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 741:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 742:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 743:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 744:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 745:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 746:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 747:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
 748:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 749:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 750:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 751:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 752:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 753:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  
 754:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveDMA(&I2C_MASTER_0, 200, ReadData);
 755:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 756:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 757:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 758:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 759:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 760:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 761:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 762:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 763:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 764:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 765:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 766:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  @endcode
 767:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 768:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 769:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveDMA(const I2C_MASTER_t *const handle, uint32_t block_siz
 770:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 771:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 772:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1U)
 773:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 774:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C_MASTER channel.
 775:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 776:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 777:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 778:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 779:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 780:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size    number of bytes
 781:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition\n
 782:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum supported by uint32_t.
 783:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 784:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 785:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 786:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 787:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 788:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 789:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 790:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 791:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 792:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure a callback fu
 793:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. If transmit FIFO is 
 794:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the trigger limit is set to 1. So the transmit interrupt will be generated when all the data in 
 795:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * from FIFO. The function uses APP handle's runtime structure to store the data pointer, count, da
 796:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * status of transmission. This function only registers a data transmission request if there is no 
 797:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * in progress.
 798:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens in the transmit interrupt service routine. A trigger is generat
 799:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt to start loading the data. If transmit FIFO is configured, the data is filled into the
 800:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit interrupt will be generated next time when the transmit FIFO is empty. At this point of
 801:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * some more data to be transmitted, it is loaded to the FIFO again. When FIFO is not enabled, data
 802:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * byte at a time. On transmission of each byte an interrupt is generated and the next byte is tran
 803:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt service routine. Callback function is executed when all the data bytes are transmitted
 804:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of t
 805:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure( \a handle->runtime->tx_busy ) to check for the completion of data transmission.<br>
 806:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartTransmitIRQ API can be used only in Interrupt mode.
 807:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "Interrupt" mode in advanced settings tab.\n
 808:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 809:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 810:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 811:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 812:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 813:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 814:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 815:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 816:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 817:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 818:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 819:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 820:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 821:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 822:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 823:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 824:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 825:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 826:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 827:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 828:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 829:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 830:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 831:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,64,true);
 832:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 833:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 834:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 835:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 836:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 837:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 838:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 839:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 840:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 841:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 842:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 843:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 844:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 845:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 846:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 847:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1U)
 848:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 849:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel.
 850:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 851:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 852:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 853:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 854:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 855:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 856:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count    number of bytes
 857:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition
 858:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack flag to indicate the nack condition\n
 859:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum value supported by type uint32_t.
 860:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 861:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 862:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 863:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 864:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 865:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 866:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 867:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 868:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed. Based on the UI configuration, either standard re
 869:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * receive FIFO is used for data reception. An interrupt is configured for reading received data fr
 870:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function only registers a request to receive a number of data bytes from a USIC channel. If FIFO
 871:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.  When all
 872:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of data bytes are received, the configured callback function will be executed. If a callback fun
 873:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured, the user has to poll for the value of the variable, \a handle->runtime->rx_busy to b
 874:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is updated to \a false when all the requested number of data bytes are received.<br>
 875:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveIRQ API can be used only in Interrupt mode.
 876:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "Interrupt" mode in advanced settings tab.\n
 877:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 878:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 879:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 880:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 881:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 882:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 883:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 884:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 885:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 886:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_buffer[64];
 887:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 888:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 889:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 890:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 891:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 892:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 893:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 894:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 895:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 896:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 897:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 898:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 899:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 900:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,rx_buffer,64,true, true);
 901:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 902:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 903:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 904:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 905:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 906:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 907:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 908:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 909:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 910:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 911:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 912:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                uint8_t * data, const uint32_t count, bool send_stop
 913:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 914:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 915:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 916:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 917:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the transmit FIFO event flags.
 918:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 919:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 920:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 921:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of the STBI and TBERI bits in TRBSR register in
 922:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      their bit positions.\n
 923:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t for the bitmask of event
 924:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 925:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 926:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function reads the value of TRBSR register. It masks the standard transmit buffer interrupt flag
 927:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * buffer error flag before providing the value.
 928:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * User has to mask the bits of interest before checking the status.
 929:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Enable transmit fifo in Advanced settings tab. <br>
 930:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 931:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 932:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 933:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 934:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 935:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 936:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 937:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 938:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 939:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 940:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 941:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 942:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 943:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 944:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
 945:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
 946:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 947:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 948:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
 949:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
 950:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
 951:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
 952:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
 953:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 954:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 955:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 956:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 957:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 958:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 959:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 960:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 961:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 962:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 963:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 964:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 965:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 966:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetTXFIFOStatus(const I2C_MASTER_t* const handle)
 967:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 968:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetTXFIFOStatus: invalid handle", (handle != NULL))
 969:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_GetEvent(handle->channel);
 970:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 971:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 972:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 973:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the transmit FIFO.
 974:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 975:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 976:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
 977:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of transmit FIFO filling level, transition below which the interrupt should 
 978:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to transmit FIFO size.\n
 979:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If transmit FIFO size is 16, and limit is configured as 8, FIFO standard tran
 980:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level drops from 8 to 7.\n
 981:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 982:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
 983:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 984:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 985:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO trigger limit is configured by setting its value in the TBCTR register.
 986:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO is configured to generate interrupt when the FIFO filling level drops
 987:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * below the trigger limit.
 988:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 989:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 990:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 991:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 992:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 993:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 994:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 995:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 996:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 997:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 998:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 999:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1000:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1001:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1002:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1003:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit, draining level as 10
1004:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1005:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the interrupt handler as the limit is set to 10
1006:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, Send_Data, 16, true);
1007:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1008:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1009:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1010:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1011:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1012:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1013:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1014:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1015:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1016:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1017:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1018:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1019:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1020:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1021:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetTXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1022:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1023:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1024:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetTXFIFOTriggerLimit: invalid handle", (handle != NULL))
1025:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1026:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1027:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1028:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the receive FIFO.
1029:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1030:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1031:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
1032:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of receive FIFO filling level, transition above which the interrupt should b
1033:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to receive FIFO size.\n
1034:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If receive FIFO size is 16, and limit is configured as 8, FIFO receive buffer
1035:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level rises from 8 to 9.\n
1036:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1037:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1038:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1039:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1040:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO trigger limit is configured by setting its value in the RBCTR register.
1041:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO is configured to generate interrupt when the FIFO filling level rises
1042:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * above the trigger limit.
1043:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1044:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1045:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1046:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1047:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1048:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1049:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1050:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1051:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Rx_Data[256];
1052:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1053:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1054:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1055:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1056:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1057:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1058:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1059:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit to filling level as 10
1060:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1061:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the receive interrupt handler as the limit is set to 
1062:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, Rx_Data, 16, true, true);
1063:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
1064:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1065:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1066:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1067:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1068:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1069:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1070:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1071:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1072:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1073:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1074:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1075:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1076:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1077:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetRXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1078:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1079:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1080:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetRXFIFOTriggerLimit: invalid handle", (handle != NULL))
1081:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1082:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1083:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1084:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1085:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the transmit FIFO is full.
1086:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1087:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1088:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1089:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of transmit FIFO filling level.
1090:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if transmit FIFO is full.<br>
1091:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if transmit FIFO is not full.<br>
1092:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1093:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while filling
1094:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * data to the transmit FIFO.
1095:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Transmit should be "Direct" mode in advanced settings tab.<br>
1096:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1097:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1098:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1099:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1100:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1101:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1102:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1103:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1104:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t send_data[] = "Infineon Technologies";
1105:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1106:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1107:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1108:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();           // Initialization of DAVE APPs
1109:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1110:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1111:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1112:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1113:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1114:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1115:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1116:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1117:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1118:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &send_data[0], 10, false);
1119:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Wait when Tx FIFO is full
1120:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(!I2C_MASTER_IsTXFIFOFull(&I2C_MASTER_0))
1121:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1122:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_Transmit(&I2C_MASTER_0, false, SLAVE_ADDRESS, &send_data[0], 10, false);
1123:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1124:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(1U)
1125:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1126:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1127:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
1128:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1129:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1130:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTXFIFOFull(const I2C_MASTER_t* const handle)
1131:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1132:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTXFIFOFull: invalid handle", (handle != NULL))
1133:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_IsFull(handle->channel);
1134:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1135:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1136:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1137:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the receive FIFO is empty.
1138:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1139:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1140:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1141:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of receive FIFO filling level.
1142:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if receive FIFO is empty.<br>
1143:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if receive FIFO still has data.<br>
1144:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1145:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while reading data from the receive FIFO
1146:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1147:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1148:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1149:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1150:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1151:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1152:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1153:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1154:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1155:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1156:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1157:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1158:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1159:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1160:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1161:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1162:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1163:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1164:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1165:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1166:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1167:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1168:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1169:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1170:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1171:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1172:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1173:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1174:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1175:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1176:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1177:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1178:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1179:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1180:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1181:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1182:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1183:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1184:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1185:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1186:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1187:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1188:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1189:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1190:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
1191:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1192:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1193:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1194:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1195:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1196:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRXFIFOEmpty(const I2C_MASTER_t* const handle)
1197:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1198:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRXFIFOEmpty: invalid handle", (handle != NULL))
1199:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel);
1200:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1201:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1202:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1203:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the status of event flags related to receive FIFO.
1204:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1205:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1206:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1207:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1208:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of standard receive buffer event, alternative receive buffer event and 
1209:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * error event in their bit positions in TRBSR register.\n
1210:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for event bitmasks. Multiple events' status c
1211:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * comparison using \a OR operation.
1212:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1213:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1214:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * It provides the status of standard receive buffer event, alternative receive buffer event and re
1215:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * event.
1216:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function masks the TRBSR register with the bitmask of SRBI, ARBI and RBERI flags. User has to ma
1217:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interest before checking the status.
1218:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1219:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1220:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1221:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1222:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1223:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #define SLAVE_ADDRESS 0xA0
1224:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t mem_address[2];
1225:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   int main(void)
1226:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1227:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     DAVE_STATUS_t init_status;
1228:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1229:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     init_status = DAVE_Init();
1230:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     if(init_status == DAVE_STATUS_SUCCESS)
1231:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1232:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       mem_address[0] = 0x00;//memory which need to be read from slave
1233:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Configure receive fifo trigger limit as 10
1234:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1235:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1236:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1237:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1238:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1239:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0
1240:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1241:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1242:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1243:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     else
1244:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1245:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1246:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1247:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1248:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1249:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1250:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      return 1U;
1251:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1252:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1253:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1254:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1255:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetRXFIFOStatus(const I2C_MASTER_t* const handle)
1256:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1257:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetRXFIFOStatus: invalid handle", (handle != NULL))
1258:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_GetEvent(handle->channel);
1259:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1260:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1261:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1262:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to
1263:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * transmit FIFO.
1264:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1265:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1266:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1267:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at their bit positions in TRBSR register to be cleared.\n
1268:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t. Multiple events can be combined 
1269:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \a OR operation.
1270:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1271:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1272:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1273:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1274:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR register using the TRBSCR register. But the function does 
1275:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * value with the bit positions restricted to transmit FIFO status bits. User should ensure that th
1276:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * appropriately masked.
1277:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1278:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1279:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1280:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1281:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1282:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1283:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1284:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1285:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1286:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1287:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1288:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1289:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1290:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1291:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00; //memory which need to be read from slave
1292:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
1293:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1294:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1295:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1296:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
1297:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1298:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
1299:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1300:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
1301:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1302:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1303:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1304:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1305:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1306:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1307:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1308:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1309:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1310:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1311:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1312:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1313:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1314:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearTXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1315:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1316:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearTXFIFOStatus: invalid handle", (handle != NULL))
1317:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_ClearEvent(handle->channel, flag);
1318:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1319:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1320:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1321:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to receive FIFO. It should be used 
1322:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of standard receive buffer interrupt, alternative receive buffer interrupt and receive buffer er
1323:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1324:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1325:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1326:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at the bit positions in TRBSR register to be cleared.\n
1327:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for providing events.
1328:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             Multiple events can be input by using \a OR operation.
1329:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1330:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1331:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1332:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1333:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR using the TRBSCR register.
1334:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function does not mask the input value to clear only receive buffer
1335:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * events. So user should appropriately mask the input value before calling
1336:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the function.
1337:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1338:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1339:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1340:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1341:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1342:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1343:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1344:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1345:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1346:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1347:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1348:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1349:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1350:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1351:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
1352:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit as 10
1353:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1354:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1355:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1356:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1357:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1358:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0)
1359:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1360:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1361:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1362:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1363:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1364:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1365:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1366:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1367:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1368:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1369:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1370:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1371:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1372:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1373:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1374:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearRXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1375:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1376:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearRXFIFOStatus: invalid handle", (handle != NULL))
1377:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_ClearEvent(handle->channel, flag);
1378:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1379:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1380:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1381:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Provides the received data from receive buffer.
1382:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1383:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1384:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint8_t: Data read from RBUF.\n
1385:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1386:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1387:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This can be used in receive mode "Direct" to read the received data.
1388:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If Rx FIFO is not configured, function reads the value of RBUF register.
1389:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Otherwise it reads the data from OUTR register.
1390:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1391:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1392:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1393:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1394:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1395:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1396:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1397:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1398:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[10];
1399:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0,loc_index = 0;
1400:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1401:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1402:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1403:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1404:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1405:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1406:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1407:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1408:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1409:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1410:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1411:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1412:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1413:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1414:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1415:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1416:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1417:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1418:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1419:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1420:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        // wait for ACK
1421:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1422:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1423:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1424:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1425:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1426:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         index++;
1427:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1428:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1429:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1430:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1431:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1432:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1433:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1434:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1435:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1436:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1437:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1438:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1439:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1440:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1441:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1442:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1443:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1444:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1445:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1446:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /* Wrapper to the LLD API for reading back the value of the RBUF or OUTR register */
1447:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint8_t I2C_MASTER_GetReceivedByte(I2C_MASTER_t * const handle)
1448:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1449:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetReceivedByte: invalid handle", (handle != NULL))
1450:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   return (uint8_t)XMC_I2C_CH_GetReceivedData(handle->channel);
1451:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1452:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1453:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1454:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits single byte using I2C protocol.
1455:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1456:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1457:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  byte data byte to transmit. \n
1458:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1459:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
1460:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1461:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1462:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1463:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1464:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1465:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1466:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1467:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1468:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1469:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1470:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1471:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1472:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1473:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1474:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1475:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1476:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1477:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1478:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1479:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1480:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1481:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1482:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1483:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1484:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1485:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1486:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1487:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1488:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1489:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1490:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1491:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1492:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1493:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1494:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1495:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1496:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1497:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1498:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1499:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1500:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_TransmitByte(I2C_MASTER_t * const handle, uint8_t byte)
1501:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1502:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_TransmitByte: invalid handle", (handle != NULL))
1503:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterTransmit(handle->channel, byte);
1504:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1505:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1506:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enables the selected protocol events for interrupt generation.
1507:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1508:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1509:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Protocol events to be enabled for interrupt generation. \n
1510:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1511:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1512:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1513:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1514:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1515:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Enables the events by configuring CCR or PCR register based on the event.
1516:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the event is enabled, an interrupt can be generated on occurrence of the event.
1517:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The API should be used only for \a Direct mode related events. Using this API for non \a Direct 
1518:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * may not yield expected result.
1519:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1520:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1521:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1522:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1523:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1524:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1525:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1526:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1527:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1528:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1529:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1530:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1531:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1532:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1533:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1534:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1535:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1536:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1537:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1538:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1539:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1540:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_EnableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1541:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1542:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1543:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1544:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1545:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1546:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1547:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_EnableEvent(I2C_MASTER_t * const handle, uint32_t event)
1548:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1549:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_EnableEvent: invalid handle", (handle != NULL))
1550:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_EnableEvent(handle->channel, event);
1551:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1552:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1553:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Disables selected events from generating interrupt.
1554:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1555:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1556:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Events to be disabled from generating interrupt. \n
1557:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1558:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1559:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1560:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1561:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1562:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Events are disabled by clearing their respective bits in either CCR, TBCTR or RBCTR.
1563:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1564:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1565:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1566:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1567:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1568:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1569:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1570:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1571:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1572:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1573:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1574:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1575:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1576:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1577:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1578:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1579:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1580:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1581:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1582:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1583:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1584:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_DisableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1585:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1586:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1587:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1588:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1589:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1590:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1591:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1592:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_DisableEvent(I2C_MASTER_t * const handle, uint32_t event)
1593:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1594:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_DisableEvent: invalid handle", (handle != NULL))
1595:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_DisableEvent(handle->channel, event);
1596:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1597:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1598:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1599:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the ACK from slave
1600:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1601:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1602:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1603:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1604:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the ack from slave.<br>
1605:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1606:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1607:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1608:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1609:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1610:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1611:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1612:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1613:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1614:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1615:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1616:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1617:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1618:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1619:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1620:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1621:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1622:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1623:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1624:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1625:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1626:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1627:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1628:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1629:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1630:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1631:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1632:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1633:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1634:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1635:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1636:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1637:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1638:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1639:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1640:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1641:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1642:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1643:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1644:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1645:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1646:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1647:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1648:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1649:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1650:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1651:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1652:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1653:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1654:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1655:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1656:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1657:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1658:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1659:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1660:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1661:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1662:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveACK(I2C_MASTER_t * const handle)
1663:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1664:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveACK: invalid handle", (handle != NULL))
1665:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveAck(handle->channel);
1666:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1667:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1668:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the NACK from slave
1669:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1670:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1671:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1672:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1673:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the nack from slave.<br>
1674:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1675:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1676:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1677:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1678:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1679:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1680:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1681:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1682:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1683:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1684:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint32_t index = 0, loc_index = 0;
1685:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1686:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1687:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1688:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1689:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1690:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1691:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1692:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1693:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1694:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1695:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1696:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1697:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1698:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1699:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1700:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1701:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1702:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1703:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1704:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1705:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1706:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1707:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1708:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1709:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1710:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1711:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1712:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1713:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // only for the last byte
1714:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ReceiveNACK(&I2C_MASTER_0);
1715:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1716:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1717:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1718:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1719:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1720:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1721:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1722:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1723:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1724:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1725:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1726:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1727:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1728:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1729:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1730:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1731:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1732:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveNACK(I2C_MASTER_t * const handle)
1733:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1734:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveNACK: invalid handle", (handle != NULL))
1735:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveNack(handle->channel);
1736:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1737:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1738:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends stop command to slave
1739:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1740:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1741:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1742:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1743:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * At the end of transmission, sends a stop command to slave <br>
1744:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.<br>
1745:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1746:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1747:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1748:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1749:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1750:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1751:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1752:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1753:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1754:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1755:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1756:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1757:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1758:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1759:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1760:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1761:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1762:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1763:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //send the address to which data to be transfered
1764:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1765:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1766:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1767:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1768:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1769:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1770:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
1771:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1772:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1773:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1774:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1775:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1776:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1777:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1778:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1779:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1780:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1781:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1782:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1783:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStop(I2C_MASTER_t * const handle)
1784:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1785:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStop: invalid handle", (handle != NULL))
1786:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED);
1787:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterStop(handle->channel);
1788:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1789:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1790:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends start command to slave
1791:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1792:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param address slave address
1793:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param cmd     command
1794:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1795:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1796:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1797:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Before start of transmission, sends a start command to slave. \n
1798:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1799:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1800:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1801:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1802:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1803:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1804:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1805:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1806:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
1807:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1808:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1809:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1810:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1811:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1812:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1813:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1814:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1815:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1816:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1817:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1818:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1819:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1820:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1821:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //send the address to which data to be transfered
1822:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1823:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1824:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1825:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1826:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1827:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1828:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1829:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1830:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       XMC_DEBUG("main: Application initialization failed");
1831:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while(1U)
1832:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       {
1833:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       }
1834:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1835:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1836:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1837:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1838:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1839:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStart(I2C_MASTER_t * const handle, const uint32_t address,
1840:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                  const XMC_I2C_CH_CMD_t cmd)
1841:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1842:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStart: invalid handle", (handle != NULL))
1843:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED);
1844:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterStart(handle->channel, (uint16_t)address, cmd);
1845:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1846:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1847:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends repeated start command to slave
1848:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1849:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param address slave address
1850:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param cmd     command
1851:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1852:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1853:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1854:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Before start of transmission, sends a repeatedstart command to slave if bus acquired is true.\n
1855:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1856:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1857:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1858:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1859:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1860:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1861:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1862:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1863:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1864:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1865:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1866:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1867:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1868:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rx_buf[256];
1869:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1870:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1871:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1872:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1873:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterStart(I2C_MASTER_0.channel, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1874:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1875:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1876:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1877:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1878:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1879:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //send the address to which data to be transfered
1880:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1881:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1882:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1883:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1884:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1885:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1886:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1887:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1888:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1889:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1890:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1891:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1892:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 	   memset(rx_buf,0,16);
1893:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, false, SLAVE_ADDRESS, rx_buf, 16, true, true);
1894:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1895:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1896:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1897:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1898:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1899:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1900:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1901:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1902:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 1U;
1903:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1904:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1905:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1906:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendRepeatedStart(I2C_MASTER_t * const handle, const uint32_t addre
1907:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                          const XMC_I2C_CH_CMD_t cmd)
1908:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1909:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendRepeatedStart: invalid handle", (handle != NULL))
1910:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEI
1911:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterRepeatedStart(handle->channel, (uint16_t)address, cmd);
1912:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1913:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1914:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1915:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends the txbusy flag
1916:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1917:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool : status of txbusy flag
1918:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  
1919:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1920:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1921:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
1922:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1923:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
1924:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
1925:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
1926:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
1927:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
1928:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
1929:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1930:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
1931:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1932:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1933:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1934:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1935:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1936:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1937:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1938:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1939:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
1940:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
1941:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1942:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1943:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1944:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
1945:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1946:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1947:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
1948:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
1949:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1950:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
1951:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1952:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1953:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
1954:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1955:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1956:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTxBusy(I2C_MASTER_t * const handle)
1957:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1958:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTxBusy: invalid handle", (handle != NULL))	
1959:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   return handle->runtime->tx_busy;
 156              	 .loc 2 1959 0 discriminator 1
 157 007e 92F82630 	 ldrb r3,[r2,#38]
 158              	.LBE120:
 159              	.LBE119:
  98:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 160              	 .loc 1 98 0 discriminator 1
 161 0082 002B     	 cmp r3,#0
 162 0084 FBD1     	 bne .L5
 100:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	    {
 163              	 .loc 1 100 0
 164 0086 002E     	 cmp r6,#0
 165 0088 D1D1     	 bne .L4
 103:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 166              	 .loc 1 103 0
 167 008a 0123     	 movs r3,#1
 168 008c 3146     	 mov r1,r6
 169 008e 0193     	 str r3,[sp,#4]
 170 0090 A022     	 movs r2,#160
 171 0092 0097     	 str r7,[sp]
 172 0094 7448     	 ldr r0,.L52
 173              	.LVL16:
 174 0096 4B46     	 mov r3,r9
 175 0098 FFF7FEFF 	 bl I2C_MASTER_Transmit
 176              	.LVL17:
 177 009c DAF80820 	 ldr r2,[r10,#8]
 178 00a0 0646     	 mov r6,r0
 179              	.LVL18:
 180              	.L6:
 181              	.LBB121:
 182              	.LBB122:
 183              	 .loc 2 1959 0 discriminator 1
 184 00a2 92F82630 	 ldrb r3,[r2,#38]
 185              	.LBE122:
 186              	.LBE121:
 104:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 187              	 .loc 1 104 0 discriminator 1
 188 00a6 002B     	 cmp r3,#0
 189 00a8 FBD1     	 bne .L6
 190              	.LBB123:
 191              	.LBB124:
 199:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 200:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 201:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 202:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /* Function to read data from EEPROM in case of read operation in multi-page, within more then one 
 203:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** EEPROM_STATUS_t bsp_eeprom_24cw128x_read_data(const uint16_t mem_address, uint8_t *rx_data, uint32_
 204:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 205:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   I2C_MASTER_STATUS_t status = I2C_MASTER_STATUS_FAILURE;
 206:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint8_t mem_add[2];
 207:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint32_t nb_of_start_page = 0;  /* The index of start page */
 208:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint32_t nb_of_end_page = 0;    /* The index of last page */
 209:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint32_t read_data = 0;
 210:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint32_t tmp_rx_size = rx_size;
 211:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint16_t tmp_mem_address = mem_address;
 212:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 213:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   /* Check for valid start address and valid data size */
 214:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   if ((tmp_mem_address >= EEPROM_24CW128X_START_MEM_ADDR) &&
 215:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	 ((tmp_mem_address + tmp_rx_size) <= EEPROM_24CW128X_MAX_SIZE) &&
 216:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	 (tmp_rx_size > 0))
 217:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
 218:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	/* The start read address is located in page : */
 219:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	nb_of_start_page = (tmp_mem_address / EEPROM_24CW128X_PAGE_SIZE) + 1;
 220:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 221:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	/* The last read address is located in page : */
 222:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	nb_of_end_page = ((tmp_mem_address + tmp_rx_size - 1) / EEPROM_24CW128X_PAGE_SIZE) + 1;
 223:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 224:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	/* Read operation from multi-pages */
 225:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	if ((nb_of_end_page - nb_of_start_page) > 0)
 226:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	{
 227:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  /* Read the first part of data */
 228:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		read_data = (nb_of_start_page * EEPROM_24CW128X_PAGE_SIZE) - tmp_mem_address;
 229:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 230:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  /* Write the first chunk of data */
 231:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  if (read_data > 0)
 232:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  {
 233:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	    /* EEPROM start read address */
 234:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         mem_add[0] = (tmp_mem_address & 0x3F00) >> 8;
 235:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         mem_add[1] = tmp_mem_address & 0x00FF;
 236:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 237:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         /* Send memory address */
 238:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, mem_add
 239:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 240:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 241:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         if (status == I2C_MASTER_STATUS_SUCCESS)
 242:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	    {
 243:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           /* Start reading data */
 244:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           status = I2C_MASTER_Receive(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, rx_dat
 245:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsRxBusy(&I2C_MASTER_EEPROM));
 246:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 247:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  /* Remaining data */
 248:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           tmp_rx_size = tmp_rx_size - read_data;
 249:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           tmp_mem_address = tmp_mem_address + read_data;
 250:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		}
 251:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  }
 252:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 253:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  /* Loop for the number of pages to be read */
 254:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  do
 255:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  {
 256:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		if (tmp_rx_size >= EEPROM_24CW128X_PAGE_SIZE) /* read one page data */
 257:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		{
 258:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  /* EEPROM start read address */
 259:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[0] = (tmp_mem_address & 0x3F00) >> 8;
 260:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 261:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 262:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           /* Send memory address */
 263:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, mem_a
 264:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 265:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 266:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           if (status == I2C_MASTER_STATUS_SUCCESS)
 267:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	      {
 268:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             /* Start reading data */
 269:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             status = I2C_MASTER_Receive(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, (rx_
 270:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             while(I2C_MASTER_IsRxBusy(&I2C_MASTER_EEPROM));
 271:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 272:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		    /* Remaining data */
 273:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             tmp_mem_address = tmp_mem_address + EEPROM_24CW128X_PAGE_SIZE;
 274:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 			tmp_rx_size = tmp_rx_size - EEPROM_24CW128X_PAGE_SIZE;
 275:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 			read_data = read_data + EEPROM_24CW128X_PAGE_SIZE;
 276:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  }
 277:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		}
 278:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		else if ((tmp_rx_size > 0) && (tmp_rx_size < EEPROM_24CW128X_PAGE_SIZE)) /* read the last chunk o
 279:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		{
 280:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  /* EEPROM start read address */
 281:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[0] = (tmp_mem_address & 0x3F00) >> 8;
 282:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 283:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 284:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           /* Send memory address */
 285:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, mem_a
 286:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 287:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 288:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           if (status == I2C_MASTER_STATUS_SUCCESS)
 289:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	      {
 290:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             /* Start reading data */
 291:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             status = I2C_MASTER_Receive(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, (rx_
 292:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             while(I2C_MASTER_IsRxBusy(&I2C_MASTER_EEPROM));
 293:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 294:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		    /* No remaining data */
 295:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             tmp_rx_size = 0;
 296:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  }
 297:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		}
 298:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  }while(tmp_rx_size > 0);
 299:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	}
 300:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	else /* Read operation within the same page */
 301:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	{
 302:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  /* EEPROM start write address */
 303:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       mem_add[0] = (mem_address & 0x3F00) >> 8;
 304:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       mem_add[1] = mem_address & 0x00FF;
 305:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 306:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       /* Send memory address */
 307:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       status = I2C_MASTER_Transmit(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, mem_add, 
 308:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 309:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 310:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       if (status == I2C_MASTER_STATUS_SUCCESS)
 311:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  {
 312:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         /* Start reading data */
 313:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         status = I2C_MASTER_Receive(&I2C_MASTER_EEPROM, true, EEPROM_24CW128X_I2C_ADDRESS, rx_data,
 314:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsRxBusy(&I2C_MASTER_EEPROM));
 315:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       }
 316:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	}
 317:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 318:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 319:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   if (status == I2C_MASTER_STATUS_SUCCESS)
 320:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
 321:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     return EEPROM_STATUS_SUCCESS;
 322:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 323:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   else
 324:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
 325:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     return EEPROM_STATUS_READ_ERROR;
 326:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 327:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 328:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 329:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 330:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 331:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /* Function to perform a software rest in case of I2C communication error */
 332:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** EEPROM_STATUS_t bsp_eeprom_24cw128x_software_reset(void)
 333:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 334:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   DAVE_STATUS_t init_status = DAVE_STATUS_SUCCESS;
 335:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   EEPROM_STATUS_t status = EEPROM_STATUS_FAILURE;
 336:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 337:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   /**  Re-initialization SCL pin as output to perform the Software Reset */
 338:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   init_status = (DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_EEPROM_SW_RESET);
 339:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 340:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   DIGITAL_IO_SetOutputLow(&DIGITAL_IO_EEPROM_SW_RESET);
 341:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   if (init_status == DAVE_STATUS_SUCCESS)
 342:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
 343:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     /* Generate 9 clock cycles on SCL pin to perform a software reset */
 344:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     for(uint32_t index = 0; index < 9; index++)
 345:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     {
 346:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****        DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_EEPROM_SW_RESET);
 347:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****        bsp_time_delay(1, BSP_TIMER_DELAY_MICROSECOND);
 348:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****        DIGITAL_IO_SetOutputLow(&DIGITAL_IO_EEPROM_SW_RESET);
 349:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****        bsp_time_delay(1, BSP_TIMER_DELAY_MICROSECOND);
 350:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     }
 351:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 352:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     /* Re-initialization the I2C_MASTER APP instance I2C_MASTER_EEPROM */
 353:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	init_status = (DAVE_STATUS_t)I2C_MASTER_Init(&I2C_MASTER_EEPROM);
 354:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 355:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	/* Software Reset successfully performed */
 356:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	if (init_status == DAVE_STATUS_SUCCESS)
 357:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	{
 358:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  status = EEPROM_STATUS_SUCCESS;
 359:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     }
 360:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 361:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 362:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   return (status);
 363:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 364:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 365:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 366:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 367:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** /* Function used to generate a time in units of microseconds or milliseconds */
 368:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** void bsp_time_delay(uint32_t delay_value, BSP_TIMER_DELAY_t time_unit)
 369:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 370:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint32_t delay_cnt;
 371:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 372:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   TIMER_ClearEvent(&EEPROM_TIMER_DELAY);
 192              	 .loc 1 372 0
 193 00aa 7048     	 ldr r0,.L52+4
 194 00ac FFF7FEFF 	 bl TIMER_ClearEvent
 195              	.LVL19:
 373:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 374:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   if (time_unit == BSP_TIMER_DELAY_MILLISECOND)
 375:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
 376:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	/* Time in units of milliseconds */
 377:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	delay_cnt = (1000U * 100U) * delay_value;
 378:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 379:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   else
 380:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
 381:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	/* Time in units of microseconds */
 382:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     delay_cnt = delay_value;
 383:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 384:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 385:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   TIMER_SetTimeInterval(&EEPROM_TIMER_DELAY, delay_cnt);
 196              	 .loc 1 385 0
 197 00b0 6E48     	 ldr r0,.L52+4
 198 00b2 6F49     	 ldr r1,.L52+8
 199              	.LBE124:
 200              	.LBE123:
 108:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 201              	 .loc 1 108 0
 202 00b4 3D44     	 add r5,r5,r7
 203              	.LVL20:
 204              	.LBB127:
 205              	.LBB125:
 206              	 .loc 1 385 0
 207 00b6 FFF7FEFF 	 bl TIMER_SetTimeInterval
 208              	.LVL21:
 386:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 387:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   TIMER_Start(&EEPROM_TIMER_DELAY);
 209              	 .loc 1 387 0
 210 00ba 6C48     	 ldr r0,.L52+4
 211              	.LBE125:
 212              	.LBE127:
 108:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 213              	 .loc 1 108 0
 214 00bc ADB2     	 uxth r5,r5
 107:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  tmp_mem_address = tmp_mem_address + written_data;
 215              	 .loc 1 107 0
 216 00be E41B     	 subs r4,r4,r7
 217              	.LVL22:
 218              	.LBB128:
 219              	.LBB126:
 220              	 .loc 1 387 0
 221 00c0 FFF7FEFF 	 bl TIMER_Start
 222              	.LVL23:
 223              	.L7:
 388:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 389:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   while(!TIMER_GetInterruptStatus(&EEPROM_TIMER_DELAY));
 224              	 .loc 1 389 0
 225 00c4 6948     	 ldr r0,.L52+4
 226 00c6 FFF7FEFF 	 bl TIMER_GetInterruptStatus
 227              	.LVL24:
 228 00ca 0028     	 cmp r0,#0
 229 00cc FAD0     	 beq .L7
 390:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 391:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   TIMER_Stop(&EEPROM_TIMER_DELAY);
 230              	 .loc 1 391 0
 231 00ce 6748     	 ldr r0,.L52+4
 232 00d0 FFF7FEFF 	 bl TIMER_Stop
 233              	.LVL25:
 392:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 393:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   TIMER_Clear(&EEPROM_TIMER_DELAY);
 234              	 .loc 1 393 0
 235 00d4 6548     	 ldr r0,.L52+4
 236 00d6 FFF7FEFF 	 bl TIMER_Clear
 237              	.LVL26:
 238 00da A8E7     	 b .L4
 239              	.LVL27:
 240              	.L49:
 241              	.LBE126:
 242              	.LBE128:
 125:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 243              	 .loc 1 125 0
 244 00dc 0222     	 movs r2,#2
 245 00de 0023     	 movs r3,#0
 246 00e0 8DE80C00 	 stmia sp,{r2,r3}
 121:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 247              	 .loc 1 121 0
 248 00e4 C5F30526 	 ubfx r6,r5,#8,#6
 125:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 249              	 .loc 1 125 0
 250 00e8 A022     	 movs r2,#160
 251 00ea 5F48     	 ldr r0,.L52
 121:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 252              	 .loc 1 121 0
 253 00ec 8DF80C60 	 strb r6,[sp,#12]
 125:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 254              	 .loc 1 125 0
 255 00f0 0121     	 movs r1,#1
 256 00f2 03AB     	 add r3,sp,#12
 122:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 257              	 .loc 1 122 0
 258 00f4 8DF80D50 	 strb r5,[sp,#13]
 125:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 259              	 .loc 1 125 0
 260 00f8 FFF7FEFF 	 bl I2C_MASTER_Transmit
 261              	.LVL28:
 262 00fc D8F80820 	 ldr r2,[r8,#8]
 263 0100 0646     	 mov r6,r0
 264              	.LVL29:
 265              	.L10:
 266              	.LBB129:
 267              	.LBB130:
 268              	 .loc 2 1959 0 discriminator 1
 269 0102 92F82630 	 ldrb r3,[r2,#38]
 270              	.LBE130:
 271              	.LBE129:
 126:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 272              	 .loc 1 126 0 discriminator 1
 273 0106 002B     	 cmp r3,#0
 274 0108 FBD1     	 bne .L10
 128:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	      {
 275              	 .loc 1 128 0
 276 010a 002E     	 cmp r6,#0
 277 010c 91D1     	 bne .L8
 131:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 278              	 .loc 1 131 0
 279 010e 2022     	 movs r2,#32
 280 0110 0123     	 movs r3,#1
 281 0112 8DE80C00 	 stmia sp,{r2,r3}
 282 0116 3146     	 mov r1,r6
 283 0118 A022     	 movs r2,#160
 284 011a 5348     	 ldr r0,.L52
 285              	.LVL30:
 286 011c 09EB0703 	 add r3,r9,r7
 287 0120 FFF7FEFF 	 bl I2C_MASTER_Transmit
 288              	.LVL31:
 289 0124 D8F80820 	 ldr r2,[r8,#8]
 290 0128 0646     	 mov r6,r0
 291              	.LVL32:
 292              	.L12:
 293              	.LBB131:
 294              	.LBB132:
 295              	 .loc 2 1959 0 discriminator 1
 296 012a 92F82630 	 ldrb r3,[r2,#38]
 297              	.LBE132:
 298              	.LBE131:
 132:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 299              	 .loc 1 132 0 discriminator 1
 300 012e 002B     	 cmp r3,#0
 301 0130 FBD1     	 bne .L12
 302              	.LBB133:
 303              	.LBB134:
 372:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 304              	 .loc 1 372 0
 305 0132 4E48     	 ldr r0,.L52+4
 306              	.LVL33:
 307 0134 FFF7FEFF 	 bl TIMER_ClearEvent
 308              	.LVL34:
 385:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 309              	 .loc 1 385 0
 310 0138 4C48     	 ldr r0,.L52+4
 311 013a 4D49     	 ldr r1,.L52+8
 312              	.LBE134:
 313              	.LBE133:
 135:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		    tmp_tx_size = tmp_tx_size - EEPROM_24CW128X_PAGE_SIZE;
 314              	 .loc 1 135 0
 315 013c 2035     	 adds r5,r5,#32
 316              	.LVL35:
 317              	.LBB137:
 318              	.LBB135:
 385:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 319              	 .loc 1 385 0
 320 013e FFF7FEFF 	 bl TIMER_SetTimeInterval
 321              	.LVL36:
 387:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 322              	 .loc 1 387 0
 323 0142 4A48     	 ldr r0,.L52+4
 324              	.LBE135:
 325              	.LBE137:
 135:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		    tmp_tx_size = tmp_tx_size - EEPROM_24CW128X_PAGE_SIZE;
 326              	 .loc 1 135 0
 327 0144 ADB2     	 uxth r5,r5
 328              	.LVL37:
 136:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 			written_data = written_data + EEPROM_24CW128X_PAGE_SIZE;
 329              	 .loc 1 136 0
 330 0146 203C     	 subs r4,r4,#32
 331              	.LVL38:
 137:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 332              	 .loc 1 137 0
 333 0148 2037     	 adds r7,r7,#32
 334              	.LVL39:
 335              	.LBB138:
 336              	.LBB136:
 387:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 337              	 .loc 1 387 0
 338 014a FFF7FEFF 	 bl TIMER_Start
 339              	.LVL40:
 340              	.L13:
 389:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 341              	 .loc 1 389 0
 342 014e 4748     	 ldr r0,.L52+4
 343 0150 FFF7FEFF 	 bl TIMER_GetInterruptStatus
 344              	.LVL41:
 345 0154 0028     	 cmp r0,#0
 346 0156 FAD0     	 beq .L13
 391:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 347              	 .loc 1 391 0
 348 0158 4448     	 ldr r0,.L52+4
 349 015a FFF7FEFF 	 bl TIMER_Stop
 350              	.LVL42:
 351              	 .loc 1 393 0
 352 015e 4348     	 ldr r0,.L52+4
 353 0160 FFF7FEFF 	 bl TIMER_Clear
 354              	.LVL43:
 355              	.LBE136:
 356              	.LBE138:
 166:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	}
 357              	 .loc 1 166 0
 358 0164 002C     	 cmp r4,#0
 359 0166 7FF464AF 	 bne .L8
 360 016a 68E7     	 b .L15
 361              	.LVL44:
 362              	.L50:
 150:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 363              	 .loc 1 150 0
 364 016c DFF8F8A0 	 ldr r10,.L52
 147:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 365              	 .loc 1 147 0
 366 0170 8DF80D50 	 strb r5,[sp,#13]
 150:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 367              	 .loc 1 150 0
 368 0174 0222     	 movs r2,#2
 369 0176 0023     	 movs r3,#0
 370 0178 8DE80C00 	 stmia sp,{r2,r3}
 146:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 371              	 .loc 1 146 0
 372 017c C5F30526 	 ubfx r6,r5,#8,#6
 150:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 373              	 .loc 1 150 0
 374 0180 A022     	 movs r2,#160
 375 0182 5046     	 mov r0,r10
 376 0184 0121     	 movs r1,#1
 377 0186 03AB     	 add r3,sp,#12
 146:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 378              	 .loc 1 146 0
 379 0188 8DF80C60 	 strb r6,[sp,#12]
 150:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 380              	 .loc 1 150 0
 381 018c FFF7FEFF 	 bl I2C_MASTER_Transmit
 382              	.LVL45:
 383 0190 D8F80820 	 ldr r2,[r8,#8]
 384 0194 0646     	 mov r6,r0
 385              	.LVL46:
 386              	.L17:
 387              	.LBB139:
 388              	.LBB140:
 389              	 .loc 2 1959 0 discriminator 1
 390 0196 92F82630 	 ldrb r3,[r2,#38]
 391              	.LBE140:
 392              	.LBE139:
 151:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 393              	 .loc 1 151 0 discriminator 1
 394 019a 002B     	 cmp r3,#0
 395 019c FBD1     	 bne .L17
 153:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	      {
 396              	 .loc 1 153 0
 397 019e 002E     	 cmp r6,#0
 398 01a0 7FF447AF 	 bne .L8
 156:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 399              	 .loc 1 156 0
 400 01a4 0122     	 movs r2,#1
 401 01a6 3146     	 mov r1,r6
 402 01a8 0192     	 str r2,[sp,#4]
 403 01aa 0094     	 str r4,[sp]
 404 01ac A022     	 movs r2,#160
 405 01ae 09EB0703 	 add r3,r9,r7
 406 01b2 2D48     	 ldr r0,.L52
 407              	.LVL47:
 408 01b4 FFF7FEFF 	 bl I2C_MASTER_Transmit
 409              	.LVL48:
 410 01b8 DAF80820 	 ldr r2,[r10,#8]
 411 01bc 0646     	 mov r6,r0
 412              	.LVL49:
 413              	.L18:
 414              	.LBB141:
 415              	.LBB142:
 416              	 .loc 2 1959 0 discriminator 1
 417 01be 92F82630 	 ldrb r3,[r2,#38]
 418              	.LBE142:
 419              	.LBE141:
 157:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 420              	 .loc 1 157 0 discriminator 1
 421 01c2 002B     	 cmp r3,#0
 422 01c4 FBD1     	 bne .L18
 423              	.LVL50:
 424              	.LBB143:
 425              	.LBB144:
 372:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 426              	 .loc 1 372 0
 427 01c6 2948     	 ldr r0,.L52+4
 428 01c8 FFF7FEFF 	 bl TIMER_ClearEvent
 429              	.LVL51:
 385:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 430              	 .loc 1 385 0
 431 01cc 2748     	 ldr r0,.L52+4
 432 01ce 2849     	 ldr r1,.L52+8
 433 01d0 FFF7FEFF 	 bl TIMER_SetTimeInterval
 434              	.LVL52:
 387:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 435              	 .loc 1 387 0
 436 01d4 2548     	 ldr r0,.L52+4
 437 01d6 FFF7FEFF 	 bl TIMER_Start
 438              	.LVL53:
 439              	.L19:
 389:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 440              	 .loc 1 389 0
 441 01da 2448     	 ldr r0,.L52+4
 442 01dc FFF7FEFF 	 bl TIMER_GetInterruptStatus
 443              	.LVL54:
 444 01e0 0028     	 cmp r0,#0
 445 01e2 FAD0     	 beq .L19
 446              	.LVL55:
 447              	.L46:
 448              	.LBE144:
 449              	.LBE143:
 450              	.LBB145:
 451              	.LBB146:
 391:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 452              	 .loc 1 391 0
 453 01e4 2148     	 ldr r0,.L52+4
 454 01e6 FFF7FEFF 	 bl TIMER_Stop
 455              	.LVL56:
 456              	 .loc 1 393 0
 457 01ea 2048     	 ldr r0,.L52+4
 458 01ec FFF7FEFF 	 bl TIMER_Clear
 459              	.LVL57:
 460 01f0 25E7     	 b .L15
 461              	.LVL58:
 462              	.L3:
 463              	.LBE146:
 464              	.LBE145:
 175:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 465              	 .loc 1 175 0
 466 01f2 DFF874A0 	 ldr r10,.L52
 172:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 467              	 .loc 1 172 0
 468 01f6 8DF80D00 	 strb r0,[sp,#13]
 175:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 469              	 .loc 1 175 0
 470 01fa 0222     	 movs r2,#2
 471              	.LVL59:
 472 01fc 0023     	 movs r3,#0
 473 01fe 8DE80C00 	 stmia sp,{r2,r3}
 171:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       mem_add[1] = mem_address & 0x00FF;
 474              	 .loc 1 171 0
 475 0202 C0F30525 	 ubfx r5,r0,#8,#6
 175:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 476              	 .loc 1 175 0
 477 0206 A022     	 movs r2,#160
 478 0208 5046     	 mov r0,r10
 479              	.LVL60:
 480 020a 0121     	 movs r1,#1
 481              	.LVL61:
 482 020c 03AB     	 add r3,sp,#12
 171:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       mem_add[1] = mem_address & 0x00FF;
 483              	 .loc 1 171 0
 484 020e 8DF80C50 	 strb r5,[sp,#12]
 175:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 485              	 .loc 1 175 0
 486 0212 FFF7FEFF 	 bl I2C_MASTER_Transmit
 487              	.LVL62:
 488 0216 DAF80820 	 ldr r2,[r10,#8]
 489 021a 0646     	 mov r6,r0
 490              	.LVL63:
 491              	.L20:
 492              	.LBB148:
 493              	.LBB149:
 494              	 .loc 2 1959 0 discriminator 1
 495 021c 92F82630 	 ldrb r3,[r2,#38]
 496              	.LBE149:
 497              	.LBE148:
 176:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 498              	 .loc 1 176 0 discriminator 1
 499 0220 002B     	 cmp r3,#0
 500 0222 FBD1     	 bne .L20
 178:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  {
 501              	 .loc 1 178 0
 502 0224 7EB1     	 cbz r6,.L51
 503              	.L21:
 504              	.LVL64:
 505              	.LBB150:
 506              	.LBB147:
 372:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 507              	 .loc 1 372 0
 508 0226 1148     	 ldr r0,.L52+4
 509 0228 FFF7FEFF 	 bl TIMER_ClearEvent
 510              	.LVL65:
 385:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 511              	 .loc 1 385 0
 512 022c 0F48     	 ldr r0,.L52+4
 513 022e 1049     	 ldr r1,.L52+8
 514 0230 FFF7FEFF 	 bl TIMER_SetTimeInterval
 515              	.LVL66:
 387:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 516              	 .loc 1 387 0
 517 0234 0D48     	 ldr r0,.L52+4
 518 0236 FFF7FEFF 	 bl TIMER_Start
 519              	.LVL67:
 520              	.L23:
 389:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 521              	 .loc 1 389 0
 522 023a 0C48     	 ldr r0,.L52+4
 523 023c FFF7FEFF 	 bl TIMER_GetInterruptStatus
 524              	.LVL68:
 525 0240 0028     	 cmp r0,#0
 526 0242 FAD0     	 beq .L23
 527 0244 CEE7     	 b .L46
 528              	.LVL69:
 529              	.L51:
 530              	.LBE147:
 531              	.LBE150:
 181:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 532              	 .loc 1 181 0
 533 0246 0122     	 movs r2,#1
 534 0248 3146     	 mov r1,r6
 535 024a 0192     	 str r2,[sp,#4]
 536 024c 0094     	 str r4,[sp]
 537 024e A022     	 movs r2,#160
 538 0250 4B46     	 mov r3,r9
 539 0252 0548     	 ldr r0,.L52
 540 0254 FFF7FEFF 	 bl I2C_MASTER_Transmit
 541              	.LVL70:
 542 0258 DAF80820 	 ldr r2,[r10,#8]
 543 025c 0646     	 mov r6,r0
 544              	.LVL71:
 545              	.L22:
 546              	.LBB151:
 547              	.LBB152:
 548              	 .loc 2 1959 0 discriminator 1
 549 025e 92F82630 	 ldrb r3,[r2,#38]
 550              	.LBE152:
 551              	.LBE151:
 182:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       }
 552              	 .loc 1 182 0 discriminator 1
 553 0262 002B     	 cmp r3,#0
 554 0264 FBD1     	 bne .L22
 555 0266 DEE7     	 b .L21
 556              	.L53:
 557              	 .align 2
 558              	.L52:
 559 0268 00000000 	 .word I2C_MASTER_EEPROM
 560 026c 00000000 	 .word EEPROM_TIMER_DELAY
 561 0270 C0270900 	 .word 600000
 562              	 .cfi_endproc
 563              	.LFE529:
 565              	 .section .text.bsp_eeprom_24cw128x_read_data,"ax",%progbits
 566              	 .align 2
 567              	 .global bsp_eeprom_24cw128x_read_data
 568              	 .thumb
 569              	 .thumb_func
 571              	bsp_eeprom_24cw128x_read_data:
 572              	.LFB530:
 204:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   I2C_MASTER_STATUS_t status = I2C_MASTER_STATUS_FAILURE;
 573              	 .loc 1 204 0
 574              	 .cfi_startproc
 575              	 
 576              	 
 577              	.LVL72:
 578 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
 579              	.LCFI6:
 580              	 .cfi_def_cfa_offset 32
 581              	 .cfi_offset 4,-32
 582              	 .cfi_offset 5,-28
 583              	 .cfi_offset 6,-24
 584              	 .cfi_offset 7,-20
 585              	 .cfi_offset 8,-16
 586              	 .cfi_offset 9,-12
 587              	 .cfi_offset 10,-8
 588              	 .cfi_offset 14,-4
 215:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	 (tmp_rx_size > 0))
 589              	 .loc 1 215 0
 590 0004 8318     	 adds r3,r0,r2
 214:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	 ((tmp_mem_address + tmp_rx_size) <= EEPROM_24CW128X_MAX_SIZE) &&
 591              	 .loc 1 214 0
 592 0006 B3F5804F 	 cmp r3,#16384
 204:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   I2C_MASTER_STATUS_t status = I2C_MASTER_STATUS_FAILURE;
 593              	 .loc 1 204 0
 594 000a 86B0     	 sub sp,sp,#24
 595              	.LCFI7:
 596              	 .cfi_def_cfa_offset 56
 204:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   I2C_MASTER_STATUS_t status = I2C_MASTER_STATUS_FAILURE;
 597              	 .loc 1 204 0
 598 000c 8146     	 mov r9,r0
 599 000e 1446     	 mov r4,r2
 600              	.LVL73:
 214:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	 ((tmp_mem_address + tmp_rx_size) <= EEPROM_24CW128X_MAX_SIZE) &&
 601              	 .loc 1 214 0
 602 0010 19D8     	 bhi .L73
 215:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	 (tmp_rx_size > 0))
 603              	 .loc 1 215 0
 604 0012 C2B1     	 cbz r2,.L73
 222:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 605              	 .loc 1 222 0
 606 0014 013B     	 subs r3,r3,#1
 607 0016 5B09     	 lsrs r3,r3,#5
 219:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 608              	 .loc 1 219 0
 609 0018 4509     	 lsrs r5,r0,#5
 222:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 610              	 .loc 1 222 0
 611 001a 0133     	 adds r3,r3,#1
 219:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 612              	 .loc 1 219 0
 613 001c 0135     	 adds r5,r5,#1
 614              	.LVL74:
 225:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	{
 615              	 .loc 1 225 0
 616 001e AB42     	 cmp r3,r5
 617 0020 8846     	 mov r8,r1
 618 0022 00F09B80 	 beq .L56
 619              	.LVL75:
 231:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  {
 620              	 .loc 1 231 0
 621 0026 D0EB4515 	 rsbs r5,r0,r5,lsl#5
 622              	.LVL76:
 623 002a 39D1     	 bne .L89
 205:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint8_t mem_add[2];
 624              	 .loc 1 205 0
 625 002c 0120     	 movs r0,#1
 626              	.LVL77:
 627              	.L57:
 285:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 628              	 .loc 1 285 0
 629 002e 614E     	 ldr r6,.L92
 630 0030 0227     	 movs r7,#2
 631              	.LVL78:
 632              	.L60:
 256:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		{
 633              	 .loc 1 256 0
 634 0032 1F2C     	 cmp r4,#31
 635 0034 62D8     	 bhi .L90
 278:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		{
 636              	 .loc 1 278 0
 637 0036 631E     	 subs r3,r4,#1
 638 0038 1E2B     	 cmp r3,#30
 639 003a 08D9     	 bls .L91
 640              	.LVL79:
 641              	.L66:
 319:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
 642              	 .loc 1 319 0
 643 003c 18B9     	 cbnz r0,.L73
 321:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 644              	 .loc 1 321 0
 645 003e 0120     	 movs r0,#1
 646              	.LVL80:
 327:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 647              	 .loc 1 327 0
 648 0040 06B0     	 add sp,sp,#24
 649              	.LCFI8:
 650              	 .cfi_remember_state
 651              	 .cfi_def_cfa_offset 32
 652              	 
 653 0042 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 654              	.LVL81:
 655              	.L73:
 656              	.LCFI9:
 657              	 .cfi_restore_state
 325:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 658              	 .loc 1 325 0
 659 0046 0320     	 movs r0,#3
 327:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 660              	 .loc 1 327 0
 661 0048 06B0     	 add sp,sp,#24
 662              	.LCFI10:
 663              	 .cfi_remember_state
 664              	 .cfi_def_cfa_offset 32
 665              	 
 666 004a BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 667              	.LVL82:
 668              	.L91:
 669              	.LCFI11:
 670              	 .cfi_restore_state
 285:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 671              	 .loc 1 285 0
 672 004e DFF864A1 	 ldr r10,.L92
 673 0052 0097     	 str r7,[sp]
 674 0054 0023     	 movs r3,#0
 675 0056 0193     	 str r3,[sp,#4]
 281:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 676              	 .loc 1 281 0
 677 0058 C9F3052E 	 ubfx lr,r9,#8,#6
 285:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 678              	 .loc 1 285 0
 679 005c A022     	 movs r2,#160
 680 005e 5046     	 mov r0,r10
 681 0060 0121     	 movs r1,#1
 682 0062 05AB     	 add r3,sp,#20
 282:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 683              	 .loc 1 282 0
 684 0064 8DF81590 	 strb r9,[sp,#21]
 281:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 685              	 .loc 1 281 0
 686 0068 8DF814E0 	 strb lr,[sp,#20]
 285:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 687              	 .loc 1 285 0
 688 006c FFF7FEFF 	 bl I2C_MASTER_Transmit
 689              	.LVL83:
 690 0070 B268     	 ldr r2,[r6,#8]
 691              	.L68:
 692              	.LVL84:
 693              	.LBB153:
 694              	.LBB154:
 695              	 .loc 2 1959 0 discriminator 1
 696 0072 92F82630 	 ldrb r3,[r2,#38]
 697              	.LBE154:
 698              	.LBE153:
 286:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 699              	 .loc 1 286 0 discriminator 1
 700 0076 002B     	 cmp r3,#0
 701 0078 FBD1     	 bne .L68
 288:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	      {
 702              	 .loc 1 288 0
 703 007a 0028     	 cmp r0,#0
 704 007c D9D1     	 bne .L60
 291:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             while(I2C_MASTER_IsRxBusy(&I2C_MASTER_EEPROM));
 705              	 .loc 1 291 0
 706 007e 0121     	 movs r1,#1
 707 0080 A022     	 movs r2,#160
 708 0082 0094     	 str r4,[sp]
 709 0084 08EB0503 	 add r3,r8,r5
 710 0088 0191     	 str r1,[sp,#4]
 711 008a 0291     	 str r1,[sp,#8]
 712 008c 4948     	 ldr r0,.L92
 713              	.LVL85:
 714 008e FFF7FEFF 	 bl I2C_MASTER_Receive
 715              	.LVL86:
 716 0092 DAF80820 	 ldr r2,[r10,#8]
 717              	.L69:
 718              	.LVL87:
 719              	.LBB155:
 720              	.LBB156:
1960:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1961:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1962:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1963:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends the rxbusy flag
1964:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1965:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool : status of rxbusy flag
1966:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1967:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1968:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
1969:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1970:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_READ 10
1971:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
1972:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1973:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
1974:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
1975:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
1976:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
1977:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
1978:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
1979:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1980:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1981:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t data = 0x55;
1982:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_data;
1983:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1984:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1985:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1986:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1987:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1988:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1989:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1990:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
1991:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
1992:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1993:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1994:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1995:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
1996:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1997:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1998:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Read data from IO EXPANDER
1999:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
2000:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
2001:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
2002:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
2003:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
2004:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
2005:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(1)
2006:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     { }
2007:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** 
2008:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
2009:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
2010:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
2011:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
2012:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
2013:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
2014:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRxBusy(I2C_MASTER_t * const handle)
2015:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** {
2016:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRxBusy: invalid handle", (handle != NULL))	
2017:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h ****   return handle->runtime->rx_busy;
 721              	 .loc 2 2017 0 discriminator 1
 722 0096 92F82730 	 ldrb r3,[r2,#39]
 723              	.LBE156:
 724              	.LBE155:
 292:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 725              	 .loc 1 292 0 discriminator 1
 726 009a 002B     	 cmp r3,#0
 727 009c FBD1     	 bne .L69
 728 009e CDE7     	 b .L66
 729              	.LVL88:
 730              	.L89:
 238:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 731              	 .loc 1 238 0
 732 00a0 DFF810A1 	 ldr r10,.L92
 235:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 733              	 .loc 1 235 0
 734 00a4 8DF81500 	 strb r0,[sp,#21]
 238:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 735              	 .loc 1 238 0
 736 00a8 0222     	 movs r2,#2
 737              	.LVL89:
 738 00aa 0023     	 movs r3,#0
 739 00ac 8DE80C00 	 stmia sp,{r2,r3}
 740 00b0 5046     	 mov r0,r10
 741              	.LVL90:
 742 00b2 A022     	 movs r2,#160
 234:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         mem_add[1] = tmp_mem_address & 0x00FF;
 743              	 .loc 1 234 0
 744 00b4 C9F30526 	 ubfx r6,r9,#8,#6
 238:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 745              	 .loc 1 238 0
 746 00b8 0121     	 movs r1,#1
 747              	.LVL91:
 748 00ba 05AB     	 add r3,sp,#20
 234:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         mem_add[1] = tmp_mem_address & 0x00FF;
 749              	 .loc 1 234 0
 750 00bc 8DF81460 	 strb r6,[sp,#20]
 238:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 751              	 .loc 1 238 0
 752 00c0 FFF7FEFF 	 bl I2C_MASTER_Transmit
 753              	.LVL92:
 754 00c4 DAF80820 	 ldr r2,[r10,#8]
 755              	.L58:
 756              	.LVL93:
 757              	.LBB157:
 758              	.LBB158:
1959:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 759              	 .loc 2 1959 0 discriminator 1
 760 00c8 92F82630 	 ldrb r3,[r2,#38]
 761              	.LBE158:
 762              	.LBE157:
 239:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 763              	 .loc 1 239 0 discriminator 1
 764 00cc 002B     	 cmp r3,#0
 765 00ce FBD1     	 bne .L58
 241:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	    {
 766              	 .loc 1 241 0
 767 00d0 0028     	 cmp r0,#0
 768 00d2 ACD1     	 bne .L57
 244:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsRxBusy(&I2C_MASTER_EEPROM));
 769              	 .loc 1 244 0
 770 00d4 0121     	 movs r1,#1
 771 00d6 A022     	 movs r2,#160
 772 00d8 0095     	 str r5,[sp]
 773 00da 0191     	 str r1,[sp,#4]
 774 00dc 0291     	 str r1,[sp,#8]
 775 00de 3548     	 ldr r0,.L92
 776              	.LVL94:
 777 00e0 4346     	 mov r3,r8
 778 00e2 FFF7FEFF 	 bl I2C_MASTER_Receive
 779              	.LVL95:
 780 00e6 DAF80820 	 ldr r2,[r10,#8]
 781              	.L59:
 782              	.LVL96:
 783              	.LBB159:
 784              	.LBB160:
 785              	 .loc 2 2017 0 discriminator 1
 786 00ea 92F82730 	 ldrb r3,[r2,#39]
 787              	.LBE160:
 788              	.LBE159:
 245:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 789              	 .loc 1 245 0 discriminator 1
 790 00ee 002B     	 cmp r3,#0
 791 00f0 FBD1     	 bne .L59
 249:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		}
 792              	 .loc 1 249 0
 793 00f2 A944     	 add r9,r9,r5
 794              	.LVL97:
 795 00f4 1FFA89F9 	 uxth r9,r9
 248:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           tmp_mem_address = tmp_mem_address + read_data;
 796              	 .loc 1 248 0
 797 00f8 641B     	 subs r4,r4,r5
 798              	.LVL98:
 799 00fa 98E7     	 b .L57
 800              	.LVL99:
 801              	.L90:
 263:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 802              	 .loc 1 263 0
 803 00fc 0023     	 movs r3,#0
 804 00fe 0193     	 str r3,[sp,#4]
 259:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 805              	 .loc 1 259 0
 806 0100 C9F3052E 	 ubfx lr,r9,#8,#6
 263:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 807              	 .loc 1 263 0
 808 0104 A022     	 movs r2,#160
 809 0106 0097     	 str r7,[sp]
 810 0108 2A48     	 ldr r0,.L92
 260:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 811              	 .loc 1 260 0
 812 010a 8DF81590 	 strb r9,[sp,#21]
 263:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 813              	 .loc 1 263 0
 814 010e 0121     	 movs r1,#1
 815 0110 05AB     	 add r3,sp,#20
 259:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           mem_add[1] = tmp_mem_address & 0x00FF;
 816              	 .loc 1 259 0
 817 0112 8DF814E0 	 strb lr,[sp,#20]
 263:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****           while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 818              	 .loc 1 263 0
 819 0116 FFF7FEFF 	 bl I2C_MASTER_Transmit
 820              	.LVL100:
 821 011a B268     	 ldr r2,[r6,#8]
 822              	.L62:
 823              	.LVL101:
 824              	.LBB161:
 825              	.LBB162:
1959:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 826              	 .loc 2 1959 0 discriminator 1
 827 011c 92F82630 	 ldrb r3,[r2,#38]
 828              	.LBE162:
 829              	.LBE161:
 264:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 830              	 .loc 1 264 0 discriminator 1
 831 0120 002B     	 cmp r3,#0
 832 0122 FBD1     	 bne .L62
 266:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	      {
 833              	 .loc 1 266 0
 834 0124 0028     	 cmp r0,#0
 835 0126 84D1     	 bne .L60
 269:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****             while(I2C_MASTER_IsRxBusy(&I2C_MASTER_EEPROM));
 836              	 .loc 1 269 0
 837 0128 0121     	 movs r1,#1
 838 012a 2023     	 movs r3,#32
 839 012c 0093     	 str r3,[sp]
 840 012e A022     	 movs r2,#160
 841 0130 0191     	 str r1,[sp,#4]
 842 0132 0291     	 str r1,[sp,#8]
 843 0134 1F48     	 ldr r0,.L92
 844              	.LVL102:
 845 0136 08EB0503 	 add r3,r8,r5
 846 013a FFF7FEFF 	 bl I2C_MASTER_Receive
 847              	.LVL103:
 848 013e B268     	 ldr r2,[r6,#8]
 849              	.L64:
 850              	.LVL104:
 851              	.LBB163:
 852              	.LBB164:
 853              	 .loc 2 2017 0 discriminator 1
 854 0140 92F82730 	 ldrb r3,[r2,#39]
 855              	.LBE164:
 856              	.LBE163:
 270:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 857              	 .loc 1 270 0 discriminator 1
 858 0144 002B     	 cmp r3,#0
 859 0146 FBD1     	 bne .L64
 273:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 			tmp_rx_size = tmp_rx_size - EEPROM_24CW128X_PAGE_SIZE;
 860              	 .loc 1 273 0
 861 0148 09F12009 	 add r9,r9,#32
 862              	.LVL105:
 298:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	}
 863              	 .loc 1 298 0
 864 014c 203C     	 subs r4,r4,#32
 865              	.LVL106:
 273:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 			tmp_rx_size = tmp_rx_size - EEPROM_24CW128X_PAGE_SIZE;
 866              	 .loc 1 273 0
 867 014e 1FFA89F9 	 uxth r9,r9
 868              	.LVL107:
 275:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 		  }
 869              	 .loc 1 275 0
 870 0152 05F12005 	 add r5,r5,#32
 871              	.LVL108:
 298:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	}
 872              	 .loc 1 298 0
 873 0156 7FF46CAF 	 bne .L60
 874 015a 6FE7     	 b .L66
 875              	.LVL109:
 876              	.L56:
 307:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 877              	 .loc 1 307 0
 878 015c DFF854A0 	 ldr r10,.L92
 304:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 879              	 .loc 1 304 0
 880 0160 8DF81500 	 strb r0,[sp,#21]
 307:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 881              	 .loc 1 307 0
 882 0164 0222     	 movs r2,#2
 883              	.LVL110:
 884 0166 0023     	 movs r3,#0
 885 0168 8DE80C00 	 stmia sp,{r2,r3}
 303:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       mem_add[1] = mem_address & 0x00FF;
 886              	 .loc 1 303 0
 887 016c C0F30529 	 ubfx r9,r0,#8,#6
 307:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 888              	 .loc 1 307 0
 889 0170 A022     	 movs r2,#160
 890 0172 5046     	 mov r0,r10
 891              	.LVL111:
 892 0174 0121     	 movs r1,#1
 893              	.LVL112:
 894 0176 05AB     	 add r3,sp,#20
 303:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       mem_add[1] = mem_address & 0x00FF;
 895              	 .loc 1 303 0
 896 0178 8DF81490 	 strb r9,[sp,#20]
 307:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_EEPROM));
 897              	 .loc 1 307 0
 898 017c FFF7FEFF 	 bl I2C_MASTER_Transmit
 899              	.LVL113:
 900 0180 DAF80820 	 ldr r2,[r10,#8]
 901              	.L70:
 902              	.LVL114:
 903              	.LBB165:
 904              	.LBB166:
1959:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 905              	 .loc 2 1959 0 discriminator 1
 906 0184 92F82630 	 ldrb r3,[r2,#38]
 907              	.LBE166:
 908              	.LBE165:
 308:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 909              	 .loc 1 308 0 discriminator 1
 910 0188 002B     	 cmp r3,#0
 911 018a FBD1     	 bne .L70
 310:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	  {
 912              	 .loc 1 310 0
 913 018c 0028     	 cmp r0,#0
 914 018e 7FF45AAF 	 bne .L73
 313:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****         while(I2C_MASTER_IsRxBusy(&I2C_MASTER_EEPROM));
 915              	 .loc 1 313 0
 916 0192 0121     	 movs r1,#1
 917 0194 A022     	 movs r2,#160
 918 0196 0094     	 str r4,[sp]
 919 0198 4346     	 mov r3,r8
 920 019a 0191     	 str r1,[sp,#4]
 921 019c 0291     	 str r1,[sp,#8]
 922 019e 0548     	 ldr r0,.L92
 923              	.LVL115:
 924 01a0 FFF7FEFF 	 bl I2C_MASTER_Receive
 925              	.LVL116:
 926 01a4 DAF80820 	 ldr r2,[r10,#8]
 927              	.L71:
 928              	.LVL117:
 929              	.LBB167:
 930              	.LBB168:
 931              	 .loc 2 2017 0 discriminator 1
 932 01a8 92F82730 	 ldrb r3,[r2,#39]
 933              	.LBE168:
 934              	.LBE167:
 314:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****       }
 935              	 .loc 1 314 0 discriminator 1
 936 01ac 002B     	 cmp r3,#0
 937 01ae FBD1     	 bne .L71
 938 01b0 44E7     	 b .L66
 939              	.L93:
 940 01b2 00BF     	 .align 2
 941              	.L92:
 942 01b4 00000000 	 .word I2C_MASTER_EEPROM
 943              	 .cfi_endproc
 944              	.LFE530:
 946              	 .section .text.bsp_eeprom_24cw128x_software_reset,"ax",%progbits
 947              	 .align 2
 948              	 .global bsp_eeprom_24cw128x_software_reset
 949              	 .thumb
 950              	 .thumb_func
 952              	bsp_eeprom_24cw128x_software_reset:
 953              	.LFB531:
 333:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   DAVE_STATUS_t init_status = DAVE_STATUS_SUCCESS;
 954              	 .loc 1 333 0
 955              	 .cfi_startproc
 956              	 
 957              	 
 958              	.LVL118:
 959 0000 70B5     	 push {r4,r5,r6,lr}
 960              	.LCFI12:
 961              	 .cfi_def_cfa_offset 16
 962              	 .cfi_offset 4,-16
 963              	 .cfi_offset 5,-12
 964              	 .cfi_offset 6,-8
 965              	 .cfi_offset 14,-4
 338:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 966              	 .loc 1 338 0
 967 0002 2148     	 ldr r0,.L107
 968              	.LBB183:
 969              	.LBB184:
 970              	.LBB185:
 971              	 .file 3 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** {
 258:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 261:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** }
 262:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** {
 284:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 972              	 .loc 3 286 0
 973 0004 214D     	 ldr r5,.L107+4
 974              	.LBE185:
 975              	.LBE184:
 976              	.LBE183:
 338:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 977              	 .loc 1 338 0
 978 0006 FFF7FEFF 	 bl DIGITAL_IO_Init
 979              	.LVL119:
 980              	.LBB188:
 981              	.LBB187:
 982              	.LBB186:
 983              	 .loc 3 286 0
 984 000a 4FF48023 	 mov r3,#262144
 985 000e 6B60     	 str r3,[r5,#4]
 986              	.LBE186:
 987              	.LBE187:
 988              	.LBE188:
 341:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
 989              	 .loc 1 341 0
 990 0010 08B1     	 cbz r0,.L100
 991              	.L99:
 335:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 992              	 .loc 1 335 0
 993 0012 0220     	 movs r0,#2
 994              	.LVL120:
 995 0014 70BD     	 pop {r4,r5,r6,pc}
 996              	.LVL121:
 997              	.L100:
 998 0016 0924     	 movs r4,#9
 999              	.LBB189:
 1000              	.LBB190:
 1001              	.LBB191:
 1002              	.LBB192:
 260:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** }
 1003              	 .loc 3 260 0
 1004 0018 0426     	 movs r6,#4
 1005              	.LVL122:
 1006              	.L95:
 1007              	.LBE192:
 1008              	.LBE191:
 1009              	.LBE190:
 1010              	.LBB195:
 1011              	.LBB196:
 372:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1012              	 .loc 1 372 0 discriminator 3
 1013 001a 1D48     	 ldr r0,.L107+8
 1014              	.LBE196:
 1015              	.LBE195:
 1016              	.LBB198:
 1017              	.LBB194:
 1018              	.LBB193:
 260:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** }
 1019              	 .loc 3 260 0 discriminator 3
 1020 001c 6E60     	 str r6,[r5,#4]
 1021              	.LVL123:
 1022              	.LBE193:
 1023              	.LBE194:
 1024              	.LBE198:
 1025              	.LBB199:
 1026              	.LBB197:
 372:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1027              	 .loc 1 372 0 discriminator 3
 1028 001e FFF7FEFF 	 bl TIMER_ClearEvent
 1029              	.LVL124:
 385:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1030              	 .loc 1 385 0 discriminator 3
 1031 0022 1B48     	 ldr r0,.L107+8
 1032 0024 0121     	 movs r1,#1
 1033 0026 FFF7FEFF 	 bl TIMER_SetTimeInterval
 1034              	.LVL125:
 387:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1035              	 .loc 1 387 0 discriminator 3
 1036 002a 1948     	 ldr r0,.L107+8
 1037 002c FFF7FEFF 	 bl TIMER_Start
 1038              	.LVL126:
 1039              	.L97:
 389:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1040              	 .loc 1 389 0
 1041 0030 1748     	 ldr r0,.L107+8
 1042 0032 FFF7FEFF 	 bl TIMER_GetInterruptStatus
 1043              	.LVL127:
 1044 0036 0028     	 cmp r0,#0
 1045 0038 FAD0     	 beq .L97
 391:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1046              	 .loc 1 391 0
 1047 003a 1548     	 ldr r0,.L107+8
 1048 003c FFF7FEFF 	 bl TIMER_Stop
 1049              	.LVL128:
 1050              	 .loc 1 393 0
 1051 0040 1348     	 ldr r0,.L107+8
 1052 0042 FFF7FEFF 	 bl TIMER_Clear
 1053              	.LVL129:
 1054              	.LBE197:
 1055              	.LBE199:
 1056              	.LBB200:
 1057              	.LBB201:
 1058              	.LBB202:
 1059              	 .loc 3 286 0
 1060 0046 4FF48023 	 mov r3,#262144
 1061 004a 6B60     	 str r3,[r5,#4]
 1062              	.LVL130:
 1063              	.LBE202:
 1064              	.LBE201:
 1065              	.LBE200:
 1066              	.LBB203:
 1067              	.LBB204:
 372:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1068              	 .loc 1 372 0
 1069 004c 1048     	 ldr r0,.L107+8
 1070 004e FFF7FEFF 	 bl TIMER_ClearEvent
 1071              	.LVL131:
 385:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1072              	 .loc 1 385 0
 1073 0052 0F48     	 ldr r0,.L107+8
 1074 0054 0121     	 movs r1,#1
 1075 0056 FFF7FEFF 	 bl TIMER_SetTimeInterval
 1076              	.LVL132:
 387:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1077              	 .loc 1 387 0
 1078 005a 0D48     	 ldr r0,.L107+8
 1079 005c FFF7FEFF 	 bl TIMER_Start
 1080              	.LVL133:
 1081              	.L98:
 389:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1082              	 .loc 1 389 0
 1083 0060 0B48     	 ldr r0,.L107+8
 1084 0062 FFF7FEFF 	 bl TIMER_GetInterruptStatus
 1085              	.LVL134:
 1086 0066 0028     	 cmp r0,#0
 1087 0068 FAD0     	 beq .L98
 391:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1088              	 .loc 1 391 0
 1089 006a 0948     	 ldr r0,.L107+8
 1090 006c FFF7FEFF 	 bl TIMER_Stop
 1091              	.LVL135:
 1092              	 .loc 1 393 0
 1093 0070 0748     	 ldr r0,.L107+8
 1094 0072 FFF7FEFF 	 bl TIMER_Clear
 1095              	.LVL136:
 1096              	.LBE204:
 1097              	.LBE203:
 344:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     {
 1098              	 .loc 1 344 0
 1099 0076 013C     	 subs r4,r4,#1
 1100 0078 CFD1     	 bne .L95
 1101              	.LBE189:
 353:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1102              	 .loc 1 353 0
 1103 007a 0648     	 ldr r0,.L107+12
 1104 007c FFF7FEFF 	 bl I2C_MASTER_Init
 1105              	.LVL137:
 356:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 	{
 1106              	 .loc 1 356 0
 1107 0080 0028     	 cmp r0,#0
 1108 0082 C6D1     	 bne .L99
 358:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****     }
 1109              	 .loc 1 358 0
 1110 0084 0120     	 movs r0,#1
 1111              	.LVL138:
 363:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1112              	 .loc 1 363 0
 1113 0086 70BD     	 pop {r4,r5,r6,pc}
 1114              	.L108:
 1115              	 .align 2
 1116              	.L107:
 1117 0088 00000000 	 .word .LANCHOR0
 1118 008c 00840248 	 .word 1208124416
 1119 0090 00000000 	 .word EEPROM_TIMER_DELAY
 1120 0094 00000000 	 .word I2C_MASTER_EEPROM
 1121              	 .cfi_endproc
 1122              	.LFE531:
 1124              	 .section .text.bsp_time_delay,"ax",%progbits
 1125              	 .align 2
 1126              	 .global bsp_time_delay
 1127              	 .thumb
 1128              	 .thumb_func
 1130              	bsp_time_delay:
 1131              	.LFB532:
 369:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint32_t delay_cnt;
 1132              	 .loc 1 369 0
 1133              	 .cfi_startproc
 1134              	 
 1135              	 
 1136              	.LVL139:
 1137 0000 38B5     	 push {r3,r4,r5,lr}
 1138              	.LCFI13:
 1139              	 .cfi_def_cfa_offset 16
 1140              	 .cfi_offset 3,-16
 1141              	 .cfi_offset 4,-12
 1142              	 .cfi_offset 5,-8
 1143              	 .cfi_offset 14,-4
 369:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   uint32_t delay_cnt;
 1144              	 .loc 1 369 0
 1145 0002 0446     	 mov r4,r0
 1146 0004 0D46     	 mov r5,r1
 372:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1147              	 .loc 1 372 0
 1148 0006 0E48     	 ldr r0,.L115
 1149              	.LVL140:
 1150 0008 FFF7FEFF 	 bl TIMER_ClearEvent
 1151              	.LVL141:
 374:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   {
 1152              	 .loc 1 374 0
 1153 000c 012D     	 cmp r5,#1
 377:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 1154              	 .loc 1 377 0
 1155 000e 08BF     	 it eq
 1156 0010 0C4B     	 ldreq r3,.L115+4
 385:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1157              	 .loc 1 385 0
 1158 0012 0B48     	 ldr r0,.L115
 377:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   }
 1159              	 .loc 1 377 0
 1160 0014 08BF     	 it eq
 1161 0016 5C43     	 muleq r4,r3,r4
 1162              	.LVL142:
 385:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1163              	 .loc 1 385 0
 1164 0018 2146     	 mov r1,r4
 1165 001a FFF7FEFF 	 bl TIMER_SetTimeInterval
 1166              	.LVL143:
 387:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1167              	 .loc 1 387 0
 1168 001e 0848     	 ldr r0,.L115
 1169 0020 FFF7FEFF 	 bl TIMER_Start
 1170              	.LVL144:
 1171              	.L111:
 389:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1172              	 .loc 1 389 0 discriminator 1
 1173 0024 0648     	 ldr r0,.L115
 1174 0026 FFF7FEFF 	 bl TIMER_GetInterruptStatus
 1175              	.LVL145:
 1176 002a 0028     	 cmp r0,#0
 1177 002c FAD0     	 beq .L111
 391:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 1178              	 .loc 1 391 0
 1179 002e 0448     	 ldr r0,.L115
 1180 0030 FFF7FEFF 	 bl TIMER_Stop
 1181              	.LVL146:
 1182              	 .loc 1 393 0
 1183 0034 0248     	 ldr r0,.L115
 394:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 1184              	 .loc 1 394 0
 1185 0036 BDE83840 	 pop {r3,r4,r5,lr}
 1186              	.LCFI14:
 1187              	 .cfi_restore 14
 1188              	 .cfi_restore 5
 1189              	 .cfi_restore 4
 1190              	 .cfi_restore 3
 1191              	 .cfi_def_cfa_offset 0
 1192              	.LVL147:
 393:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 1193              	 .loc 1 393 0
 1194 003a FFF7FEBF 	 b TIMER_Clear
 1195              	.LVL148:
 1196              	.L116:
 1197 003e 00BF     	 .align 2
 1198              	.L115:
 1199 0040 00000000 	 .word EEPROM_TIMER_DELAY
 1200 0044 A0860100 	 .word 100000
 1201              	 .cfi_endproc
 1202              	.LFE532:
 1204              	 .section .text.bsp_led_green_on,"ax",%progbits
 1205              	 .align 2
 1206              	 .global bsp_led_green_on
 1207              	 .thumb
 1208              	 .thumb_func
 1210              	bsp_led_green_on:
 1211              	.LFB533:
 395:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 396:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** #if !defined(BUILD_FOR_ARDUINO)
 397:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 398:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 399:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 400:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** void bsp_led_green_on(void)
 401:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 1212              	 .loc 1 401 0
 1213              	 .cfi_startproc
 1214              	 
 1215              	 
 1216              	 
 1217 0000 034B     	 ldr r3,.L118
 1218              	.LBB205:
 1219              	.LBB206:
 1220              	.LBB207:
 1221              	 .loc 3 286 0
 1222 0002 197C     	 ldrb r1,[r3,#16]
 1223 0004 1A68     	 ldr r2,[r3]
 1224              	.LVL149:
 1225 0006 4FF48033 	 mov r3,#65536
 1226 000a 8B40     	 lsls r3,r3,r1
 1227 000c 5360     	 str r3,[r2,#4]
 1228 000e 7047     	 bx lr
 1229              	.L119:
 1230              	 .align 2
 1231              	.L118:
 1232 0010 00000000 	 .word DIGITAL_IO_GREEN_LED
 1233              	.LBE207:
 1234              	.LBE206:
 1235              	.LBE205:
 1236              	 .cfi_endproc
 1237              	.LFE533:
 1239              	 .section .text.bsp_led_green_off,"ax",%progbits
 1240              	 .align 2
 1241              	 .global bsp_led_green_off
 1242              	 .thumb
 1243              	 .thumb_func
 1245              	bsp_led_green_off:
 1246              	.LFB534:
 402:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   DIGITAL_IO_SetOutputLow(&DIGITAL_IO_GREEN_LED);
 403:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 404:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 405:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 406:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 407:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** void bsp_led_green_off(void)
 408:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 1247              	 .loc 1 408 0
 1248              	 .cfi_startproc
 1249              	 
 1250              	 
 1251              	 
 1252 0000 034B     	 ldr r3,.L121
 1253              	.LBB208:
 1254              	.LBB209:
 1255              	.LBB210:
 260:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** }
 1256              	 .loc 3 260 0
 1257 0002 197C     	 ldrb r1,[r3,#16]
 1258 0004 1A68     	 ldr r2,[r3]
 1259              	.LVL150:
 1260 0006 0123     	 movs r3,#1
 1261 0008 8B40     	 lsls r3,r3,r1
 1262 000a 5360     	 str r3,[r2,#4]
 1263 000c 7047     	 bx lr
 1264              	.L122:
 1265 000e 00BF     	 .align 2
 1266              	.L121:
 1267 0010 00000000 	 .word DIGITAL_IO_GREEN_LED
 1268              	.LBE210:
 1269              	.LBE209:
 1270              	.LBE208:
 1271              	 .cfi_endproc
 1272              	.LFE534:
 1274              	 .section .text.bsp_led_green_toggle,"ax",%progbits
 1275              	 .align 2
 1276              	 .global bsp_led_green_toggle
 1277              	 .thumb
 1278              	 .thumb_func
 1280              	bsp_led_green_toggle:
 1281              	.LFB535:
 409:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_GREEN_LED);
 410:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 411:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 412:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 413:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 414:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** void bsp_led_green_toggle(void)
 415:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 1282              	 .loc 1 415 0
 1283              	 .cfi_startproc
 1284              	 
 1285              	 
 1286              	 
 1287 0000 034B     	 ldr r3,.L124
 1288              	.LBB211:
 1289              	.LBB212:
 1290              	.LBB213:
 287:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** }
 288:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** {
 310:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 1291              	 .loc 3 312 0
 1292 0002 197C     	 ldrb r1,[r3,#16]
 1293 0004 1A68     	 ldr r2,[r3]
 1294              	.LVL151:
 1295 0006 4FF00113 	 mov r3,#65537
 1296 000a 8B40     	 lsls r3,r3,r1
 1297 000c 5360     	 str r3,[r2,#4]
 1298 000e 7047     	 bx lr
 1299              	.L125:
 1300              	 .align 2
 1301              	.L124:
 1302 0010 00000000 	 .word DIGITAL_IO_GREEN_LED
 1303              	.LBE213:
 1304              	.LBE212:
 1305              	.LBE211:
 1306              	 .cfi_endproc
 1307              	.LFE535:
 1309              	 .section .text.bsp_led_blue_on,"ax",%progbits
 1310              	 .align 2
 1311              	 .global bsp_led_blue_on
 1312              	 .thumb
 1313              	 .thumb_func
 1315              	bsp_led_blue_on:
 1316              	.LFB536:
 416:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   DIGITAL_IO_ToggleOutput(&DIGITAL_IO_GREEN_LED);
 417:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 418:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 419:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 420:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** void bsp_led_blue_on(void)
 421:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 1317              	 .loc 1 421 0
 1318              	 .cfi_startproc
 1319              	 
 1320              	 
 1321              	 
 1322 0000 034B     	 ldr r3,.L127
 1323              	.LBB214:
 1324              	.LBB215:
 1325              	.LBB216:
 286:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** }
 1326              	 .loc 3 286 0
 1327 0002 197C     	 ldrb r1,[r3,#16]
 1328 0004 1A68     	 ldr r2,[r3]
 1329              	.LVL152:
 1330 0006 4FF48033 	 mov r3,#65536
 1331 000a 8B40     	 lsls r3,r3,r1
 1332 000c 5360     	 str r3,[r2,#4]
 1333 000e 7047     	 bx lr
 1334              	.L128:
 1335              	 .align 2
 1336              	.L127:
 1337 0010 00000000 	 .word DIGITAL_IO_BLUE_LED
 1338              	.LBE216:
 1339              	.LBE215:
 1340              	.LBE214:
 1341              	 .cfi_endproc
 1342              	.LFE536:
 1344              	 .section .text.bsp_led_blue_off,"ax",%progbits
 1345              	 .align 2
 1346              	 .global bsp_led_blue_off
 1347              	 .thumb
 1348              	 .thumb_func
 1350              	bsp_led_blue_off:
 1351              	.LFB537:
 422:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   DIGITAL_IO_SetOutputLow(&DIGITAL_IO_BLUE_LED);
 423:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 424:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 425:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 426:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 427:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** void bsp_led_blue_off(void)
 428:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 1352              	 .loc 1 428 0
 1353              	 .cfi_startproc
 1354              	 
 1355              	 
 1356              	 
 1357 0000 034B     	 ldr r3,.L130
 1358              	.LBB217:
 1359              	.LBB218:
 1360              	.LBB219:
 260:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** }
 1361              	 .loc 3 260 0
 1362 0002 197C     	 ldrb r1,[r3,#16]
 1363 0004 1A68     	 ldr r2,[r3]
 1364              	.LVL153:
 1365 0006 0123     	 movs r3,#1
 1366 0008 8B40     	 lsls r3,r3,r1
 1367 000a 5360     	 str r3,[r2,#4]
 1368 000c 7047     	 bx lr
 1369              	.L131:
 1370 000e 00BF     	 .align 2
 1371              	.L130:
 1372 0010 00000000 	 .word DIGITAL_IO_BLUE_LED
 1373              	.LBE219:
 1374              	.LBE218:
 1375              	.LBE217:
 1376              	 .cfi_endproc
 1377              	.LFE537:
 1379              	 .section .text.bsp_led_blue_toggle,"ax",%progbits
 1380              	 .align 2
 1381              	 .global bsp_led_blue_toggle
 1382              	 .thumb
 1383              	 .thumb_func
 1385              	bsp_led_blue_toggle:
 1386              	.LFB538:
 429:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_BLUE_LED);
 430:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 431:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 432:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 433:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 434:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** void bsp_led_blue_toggle(void)
 435:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 1387              	 .loc 1 435 0
 1388              	 .cfi_startproc
 1389              	 
 1390              	 
 1391              	 
 1392 0000 034B     	 ldr r3,.L133
 1393              	.LBB220:
 1394              	.LBB221:
 1395              	.LBB222:
 1396              	 .loc 3 312 0
 1397 0002 197C     	 ldrb r1,[r3,#16]
 1398 0004 1A68     	 ldr r2,[r3]
 1399              	.LVL154:
 1400 0006 4FF00113 	 mov r3,#65537
 1401 000a 8B40     	 lsls r3,r3,r1
 1402 000c 5360     	 str r3,[r2,#4]
 1403 000e 7047     	 bx lr
 1404              	.L134:
 1405              	 .align 2
 1406              	.L133:
 1407 0010 00000000 	 .word DIGITAL_IO_BLUE_LED
 1408              	.LBE222:
 1409              	.LBE221:
 1410              	.LBE220:
 1411              	 .cfi_endproc
 1412              	.LFE538:
 1414              	 .section .text.bsp_led_red_on,"ax",%progbits
 1415              	 .align 2
 1416              	 .global bsp_led_red_on
 1417              	 .thumb
 1418              	 .thumb_func
 1420              	bsp_led_red_on:
 1421              	.LFB539:
 436:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   DIGITAL_IO_ToggleOutput(&DIGITAL_IO_BLUE_LED);
 437:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 438:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 439:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 440:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 441:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** void bsp_led_red_on(void)
 442:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 1422              	 .loc 1 442 0
 1423              	 .cfi_startproc
 1424              	 
 1425              	 
 1426              	 
 1427 0000 034B     	 ldr r3,.L136
 1428              	.LBB223:
 1429              	.LBB224:
 1430              	.LBB225:
 286:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** }
 1431              	 .loc 3 286 0
 1432 0002 197C     	 ldrb r1,[r3,#16]
 1433 0004 1A68     	 ldr r2,[r3]
 1434              	.LVL155:
 1435 0006 4FF48033 	 mov r3,#65536
 1436 000a 8B40     	 lsls r3,r3,r1
 1437 000c 5360     	 str r3,[r2,#4]
 1438 000e 7047     	 bx lr
 1439              	.L137:
 1440              	 .align 2
 1441              	.L136:
 1442 0010 00000000 	 .word DIGITAL_IO_RED_LED
 1443              	.LBE225:
 1444              	.LBE224:
 1445              	.LBE223:
 1446              	 .cfi_endproc
 1447              	.LFE539:
 1449              	 .section .text.bsp_led_red_off,"ax",%progbits
 1450              	 .align 2
 1451              	 .global bsp_led_red_off
 1452              	 .thumb
 1453              	 .thumb_func
 1455              	bsp_led_red_off:
 1456              	.LFB540:
 443:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   DIGITAL_IO_SetOutputLow(&DIGITAL_IO_RED_LED);
 444:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 445:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 446:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 447:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 448:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** void bsp_led_red_off(void)
 449:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 1457              	 .loc 1 449 0
 1458              	 .cfi_startproc
 1459              	 
 1460              	 
 1461              	 
 1462 0000 034B     	 ldr r3,.L139
 1463              	.LBB226:
 1464              	.LBB227:
 1465              	.LBB228:
 260:C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc\xmc_gpio.h **** }
 1466              	 .loc 3 260 0
 1467 0002 197C     	 ldrb r1,[r3,#16]
 1468 0004 1A68     	 ldr r2,[r3]
 1469              	.LVL156:
 1470 0006 0123     	 movs r3,#1
 1471 0008 8B40     	 lsls r3,r3,r1
 1472 000a 5360     	 str r3,[r2,#4]
 1473 000c 7047     	 bx lr
 1474              	.L140:
 1475 000e 00BF     	 .align 2
 1476              	.L139:
 1477 0010 00000000 	 .word DIGITAL_IO_RED_LED
 1478              	.LBE228:
 1479              	.LBE227:
 1480              	.LBE226:
 1481              	 .cfi_endproc
 1482              	.LFE540:
 1484              	 .section .text.bsp_led_red_toggle,"ax",%progbits
 1485              	 .align 2
 1486              	 .global bsp_led_red_toggle
 1487              	 .thumb
 1488              	 .thumb_func
 1490              	bsp_led_red_toggle:
 1491              	.LFB541:
 450:../BSP/radar_mcu4/src/radar_mcu4_bsp.c ****   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_RED_LED);
 451:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** }
 452:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 453:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** //============================================================================
 454:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** 
 455:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** void bsp_led_red_toggle(void)
 456:../BSP/radar_mcu4/src/radar_mcu4_bsp.c **** {
 1492              	 .loc 1 456 0
 1493              	 .cfi_startproc
 1494              	 
 1495              	 
 1496              	 
 1497 0000 034B     	 ldr r3,.L142
 1498              	.LBB229:
 1499              	.LBB230:
 1500              	.LBB231:
 1501              	 .loc 3 312 0
 1502 0002 197C     	 ldrb r1,[r3,#16]
 1503 0004 1A68     	 ldr r2,[r3]
 1504              	.LVL157:
 1505 0006 4FF00113 	 mov r3,#65537
 1506 000a 8B40     	 lsls r3,r3,r1
 1507 000c 5360     	 str r3,[r2,#4]
 1508 000e 7047     	 bx lr
 1509              	.L143:
 1510              	 .align 2
 1511              	.L142:
 1512 0010 00000000 	 .word DIGITAL_IO_RED_LED
 1513              	.LBE231:
 1514              	.LBE230:
 1515              	.LBE229:
 1516              	 .cfi_endproc
 1517              	.LFE541:
 1519              	 .global DIGITAL_IO_EEPROM_SW_RESET
 1520              	 .section .rodata.DIGITAL_IO_EEPROM_SW_RESET,"a",%progbits
 1521              	 .align 2
 1522              	 .set .LANCHOR0,.+0
 1525              	DIGITAL_IO_EEPROM_SW_RESET:
 1526 0000 00840248 	 .word 1208124416
 1527 0004 80       	 .byte -128
 1528 0005 000000   	 .space 3
 1529 0008 00000100 	 .word 65536
 1530 000c 00000000 	 .space 4
 1531 0010 02       	 .byte 2
 1532 0011 00       	 .byte 0
 1533 0012 0000     	 .space 2
 1534              	 .text
 1535              	.Letext0:
 1536              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1537              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1538              	 .file 6 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1539              	 .file 7 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc4_scu.h"
 1540              	 .file 8 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc4_gpio.h"
 1541              	 .file 9 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_vadc.h"
 1542              	 .file 10 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_ccu4.h"
 1543              	 .file 11 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 1544              	 .file 12 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/TIMER/timer.h"
 1545              	 .file 13 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 1546              	 .file 14 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_usbd.h"
 1547              	 .file 15 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/USBD/usbd.h"
 1548              	 .file 16 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/DIGITAL_IO/digital_io.h"
 1549              	 .file 17 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_usic.h"
 1550              	 .file 18 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/XMCLib/inc/xmc_i2c.h"
 1551              	 .file 19 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/DAVE.h"
 1552              	 .file 20 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/BSP/radar_mcu4/inc/radar_mcu4_bsp.h"
 1553              	 .file 21 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Include/core_cm4.h"
 1554              	 .file 22 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 1555              	 .file 23 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 1556              	 .file 24 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/TIMER/timer_extern.h"
 1557              	 .file 25 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/USBD/usbd_extern.h"
 1558              	 .file 26 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 1559              	 .file 27 "C:/Users/Utente/Desktop/Tesi/Firmware_Software/DAVE project/S2GLP_Pulsed_Doppler/Dave/Generated/I2C_MASTER/i2c_master_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 radar_mcu4_bsp.c
    {standard input}:20     .text.bsp_eeprom_24cw128x_write_data:00000000 $t
    {standard input}:25     .text.bsp_eeprom_24cw128x_write_data:00000000 bsp_eeprom_24cw128x_write_data
    {standard input}:559    .text.bsp_eeprom_24cw128x_write_data:00000268 $d
    {standard input}:566    .text.bsp_eeprom_24cw128x_read_data:00000000 $t
    {standard input}:571    .text.bsp_eeprom_24cw128x_read_data:00000000 bsp_eeprom_24cw128x_read_data
    {standard input}:942    .text.bsp_eeprom_24cw128x_read_data:000001b4 $d
    {standard input}:947    .text.bsp_eeprom_24cw128x_software_reset:00000000 $t
    {standard input}:952    .text.bsp_eeprom_24cw128x_software_reset:00000000 bsp_eeprom_24cw128x_software_reset
    {standard input}:1117   .text.bsp_eeprom_24cw128x_software_reset:00000088 $d
    {standard input}:1125   .text.bsp_time_delay:00000000 $t
    {standard input}:1130   .text.bsp_time_delay:00000000 bsp_time_delay
    {standard input}:1199   .text.bsp_time_delay:00000040 $d
    {standard input}:1205   .text.bsp_led_green_on:00000000 $t
    {standard input}:1210   .text.bsp_led_green_on:00000000 bsp_led_green_on
    {standard input}:1232   .text.bsp_led_green_on:00000010 $d
    {standard input}:1240   .text.bsp_led_green_off:00000000 $t
    {standard input}:1245   .text.bsp_led_green_off:00000000 bsp_led_green_off
    {standard input}:1267   .text.bsp_led_green_off:00000010 $d
    {standard input}:1275   .text.bsp_led_green_toggle:00000000 $t
    {standard input}:1280   .text.bsp_led_green_toggle:00000000 bsp_led_green_toggle
    {standard input}:1302   .text.bsp_led_green_toggle:00000010 $d
    {standard input}:1310   .text.bsp_led_blue_on:00000000 $t
    {standard input}:1315   .text.bsp_led_blue_on:00000000 bsp_led_blue_on
    {standard input}:1337   .text.bsp_led_blue_on:00000010 $d
    {standard input}:1345   .text.bsp_led_blue_off:00000000 $t
    {standard input}:1350   .text.bsp_led_blue_off:00000000 bsp_led_blue_off
    {standard input}:1372   .text.bsp_led_blue_off:00000010 $d
    {standard input}:1380   .text.bsp_led_blue_toggle:00000000 $t
    {standard input}:1385   .text.bsp_led_blue_toggle:00000000 bsp_led_blue_toggle
    {standard input}:1407   .text.bsp_led_blue_toggle:00000010 $d
    {standard input}:1415   .text.bsp_led_red_on:00000000 $t
    {standard input}:1420   .text.bsp_led_red_on:00000000 bsp_led_red_on
    {standard input}:1442   .text.bsp_led_red_on:00000010 $d
    {standard input}:1450   .text.bsp_led_red_off:00000000 $t
    {standard input}:1455   .text.bsp_led_red_off:00000000 bsp_led_red_off
    {standard input}:1477   .text.bsp_led_red_off:00000010 $d
    {standard input}:1485   .text.bsp_led_red_toggle:00000000 $t
    {standard input}:1490   .text.bsp_led_red_toggle:00000000 bsp_led_red_toggle
    {standard input}:1512   .text.bsp_led_red_toggle:00000010 $d
    {standard input}:1525   .rodata.DIGITAL_IO_EEPROM_SW_RESET:00000000 DIGITAL_IO_EEPROM_SW_RESET
    {standard input}:1521   .rodata.DIGITAL_IO_EEPROM_SW_RESET:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
I2C_MASTER_Transmit
TIMER_ClearEvent
TIMER_SetTimeInterval
TIMER_Start
TIMER_GetInterruptStatus
TIMER_Stop
TIMER_Clear
I2C_MASTER_EEPROM
EEPROM_TIMER_DELAY
I2C_MASTER_Receive
DIGITAL_IO_Init
I2C_MASTER_Init
DIGITAL_IO_GREEN_LED
DIGITAL_IO_BLUE_LED
DIGITAL_IO_RED_LED
